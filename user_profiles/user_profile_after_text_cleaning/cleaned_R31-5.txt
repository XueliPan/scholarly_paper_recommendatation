track sketch distribute data provenance malik university mellon university pa sri international park ca provenance collection typically gather remote host submit central server contrast several scientific require decentralize architecture host maintain authoritative local repository provenance gather host latter approach allow system handle large amount generate audit occur fine granularity allow retain control provenance record decentralize architecture however increase complexity audit track query distribute provenance describe system capture data provenance distribute use provenance sketch optimize subsequent data provenance query experiment data gather distribute demonstrate feasibility decentralize provenance management system efficiency provenance query introduction provenance piece data utility wide range demonstrate numerous research industrial develop seventeen nine eight fifteen particular interest data distribute among several heterogeneous nod autonomous result data often combine make useful analyse key issue record provenance minimal overhead particularly usage data track fine granularity dictate movement data across domain equally important question query efficiently real time especially subsequent run depend query system state observe previous run current eight seventeen nine one generate provenance locally periodically submit central provenance management service service ensure consistency provenance ease manage query result increasingly observe centralize approach introduce large network overhead system ten provenance audit fine granularity grow exponentially number record step often grow actual data four transport large amount central service introduce network overhead delay record query provenance information reduce system responsiveness lower overhead introduce provenance record provenance like data must distribute especially large generate distribute provenance model several attractive advantage access provenance local data obviate need synchronization central service operate disconnect network maintenance user privacy compute nod retain complete control data provenance record latter aspect particularly attractive distribute data distribute among several host autonomous distribute provenance model introduce challenge well first question arise track movement file loss couple file content associate even file move due large size user able subsequently retrieve file associate gather provenance require audit process network ideally audit require modification extant user program another challenge efficiently trace distribute provenance audit view direct graph data structure trace path direct graph query know expensive operation twelve three case distribute provenance become expensive term network well since part provenance likely locate remotely describe decentralize provenance collection system computer maintain authoritative repository provenance gather system perform passive monitor specific system call achieve driver kernel intercede call record data flow process computer collect provenance store locally oblivious provenance collection distribution answer distribute provenance query transparently efficiently system rely two crucial optimize query execution local nod store partial provenance data remote provenance data available local nod assist provenance sketch efficiently determine need contact answer provenance path query system develop part support provenance audit distribute spade project aim transparently generate certify validate grid data lineage provide background information provenance audit section section outline data model distribute use store provenance information section outline improve latency provenance query section v report experimental result background provenance audit divide three depend upon whether data centrally locate data distribute transport central location periodic basis data distribute central data model introduce lineage file system insert kernel record process creation destruction open close truncate link file initial read write file socket pipe creation output periodically transfer local storage system pass audit monitor incorporate record hardware execute process provide integration data store record use port fourteen pass design use single node although design extend file server paradigm pass provenance record query server way transmit architecture also employ project seventeen recent model nine extract provenance information automatically arbitrary monitor execution environment log record much granularity pass follow centralize model log execution output data transport central location disadvantage approach collect requirement restrict expressible specific language addition limit scope possible require master exclusively use specific author environment nine several provenance need trace across multiple system requirement describe centralize model pass sixteen nine several distribute two eleven distribution provenance primarily allow data several heterogeneous autonomous information grid distribution consider necessary efficiently answer query data example replica location service six provide mechanism register existence discover service distribute reduce update query load rely periodic update keep state become stale another example storage resource broker federate store pair divide zone twenty efficient scheme query provenance data also receive considerable attention thirteen describe new language query provenance leverage query optimization propose provenance index improve execution forward backward provenance query fifteen query optimization compress provenance data also consider twelve recently underlie architecture single central provenance store contrast describe challenge query distribute data provenance record distribute provenance fig one track data flow process provenance graph representation automatically create distribute environment computer freedom maintain independent accompany yet data share across organizational provenance record infrastructure must overlay coherent framework facilitate reason data distribute environment particular infrastructure must track data flow within host across host describe record spade record provenance track data flow require system identify source piece one two open open close file three open file data define granularity piece data track single host immediate source piece data process may turn use data write process execute host addition data flow within single host process may read data host network event provenance data modify process must also include provenance data read remote host adopt convention identify data location system time last modify granularity track provenance data object affect overhead introduce system advantage audit level assembly system call example information flow trace precisely allow output exact ascertain reconstruct exercise portion control flow graph relevant process disadvantage system performance perceptibly degrade monitor generate large provenance since persistent data manage file granularity reasonable compromise level abstraction track data provenance define term file read write utilize follow model de provenance graph one file vertices include various attribute associate file host size file last time modify hash content provenance file discuss sink associate provenance graph vertex correspond file adopt convention identify file use logical location last time modification different file avoid cycle provenance graph spade schema record provenance show table hash field use store bloom filter contain hash fully specify name file two process vertices contain range attribute name process operate system identifier owner group vertex also include parent process host process run creation time process command line invoke value environment version process vertices though would eliminate false spade schema record provenance show table three edge provenance graph direct signify direction data flow edge file vertex indicate file read edge file vertex indicate file modify fig two vertex show circle represent execution process every vertex show rectangle represent file network vertex depict use rectangle round corner represent data flow protocol analogously edge lead process read operation perform process edge process vertex write operation consequently read write process model data flow graph depict figure one context provenance define semantics primitive operation output file process generate set input file read course execution example program read number data set disk compute result record file primitive operation perform process modify number file separate instance representation use output file primitive combine compound operation instance result append together several data set program cat sort particular order use another program sort execute separate process combination append sort compound operation thus provenance every file represent compound operation direct acyclic graph consistent model use grid project b consider simple example operation span multiple host user identity user machine name use connect remote host run cat program output content file output redirect file host command invoke effectively copy content remote file local file user cat similar command analogous file transfer like commonly use large distribute type file table field eleven host char sixteen time eleven eleven hash signature eleven remote eleven type process table field eleven host char sixteen time eleven eleven eleven char gid eleven char environ text table record file read write table record execute process type network edge table field eleven char sixteen eleven char sixteen eleven time eleven table record network move input data idle retrieve result execution complete provenance track restrict query provenance file would able establish connection file machine one approach address gap describe record information host process run file locate provide mechanism transfer provenance file move one computer another record refer part provenance graph originate remote host explicitly use host attribute scheme ensure provenance query answer destination host incur considerable storage overhead ten alternate approach would avoid replicate provenance record destination host file transfer instead provenance store destination would provide pointer back relevant provenance source host however provenance query destination would require source host contact slow response time decrease reliability remote host may unreachable example distribute data flow take form file transfer practice data may also flow network directly one process another case series call make one host another pass document include request correspond return value accommodate flow introduce fourth type element provenance graph network vertex connection visible either record schema show table figure two depict simplify version provenance graph file would arise execution command describe key point note provenance vertex network connection example independently construct host two end network connection allow complete decentralization provenance record distribute system host provenance infrastructure operate independently time provenance record generate piece together yield coherent complete reconstruction distribute data flow query provenance spade allow user ask wide range question file read write program system several query similar query describe first provenance challenge international provenance annotation workshop eighteen spade query specify program use create file program run file write file program read could data flow file file sequence process file read write lead flow query query require access entire provenance graph output file provenance vertex path provenance graph specific input output vertices develop spade query tool enable query query tool interact local relational provenance store use language relational store choose wide adoption relational distribute even though query language provide native support express graph thirteen address limitation spade query tool include set function allow describe file vertex receive entire lineage describe file vertex provide threshold k receive lineage correspond last k level describe two file vertices receive lineage path complex query use regular specify nod construct use interface provenance store future version lineage query tool support query functionality include specification path query regular current provenance query one four assume access entire provenance graph run query safe assumption provenance store centrally however distribute environment typical provenance graph file span numerous host necessitate commensurate number high latency network reconstruct entire provenance record user interest single path reconstruct entire distribute graph inefficient degrade query performance significantly consider case provenance graph consist tree level f vertex except leave path query need information host rather f present entire graph f grow retrieve many host instead many f reduce delay substantially describe strategy improve efficiency distribute provenance query execution use sketch provenance graph lineage file provenance sketch propagate host file provenance query tool use locally available provenance sketch identify remote host contact traverse back sink source particular sketch allow tool avoid follow irrelevant back provenance graph eliminate correspond network thereby speed query resolution section iva explain efficiently construct provenance sketch bloom filter five class query support single host extend distribute case section provenance sketch single host consider provenance graph single host illustrate figure three create sketch provenance graph single host use bloom filter compact data structure provide probabilistic representation set handle membership query query ask element x set inset x give set n bloom filter allocate vector v initially set zero choose k independent hash function range one insert element position v set one particular bite may set one multiple time give query b position fig three bloom provenance sketch b b inspect zero b certainly set otherwise conjecture b set probability false positive one e k create provenance sketch use vertices graph set however enable vertex membership query inset inset provenance path query determine file generate process lineage file generate process enable provenance path query one alternative store edge graph set enable path query vertices path entirely specify regular expression path query edge store considerably increase rate false see section v instance path query filter edge set return true since edge filter however file lineage file enable path query bloom filter construction show figure three first level filter store vertices graph enable set membership query individual vertices second level summarize direct indirect edge graph bloom filter direct edge edge specify graph indirect edge obtain compute transitive closure seven direct edge provenance graph construction introduce false positive probability beyond inherent filter provenance sketch update efficiently new vertex add graph first level filter update add unique specification vertex second level update direct edge obtain query local parent fig four provenance sketch facilitate path query without reconstruct entire provenance graph new vertex obtain indirect edge calculate incremental transitive closure check set membership query parent new vertex vertices graph set membership query true transitivity add indirect edge filter new vertex query vertices periodically filter reconstruct indirect edge obtain perform transitive closure procedure provenance graph since filter use decide whether add indirect edge false positive rate reduce b provenance sketch multiple host provenance sketch enable path query span single host path query span multiple host provenance sketch insufficient include network vertices determine path exist two vertices different host important host know three information host start end vertices specify path query edge cross host direct indirect within host set edge obtain combine network connection would store table host ancestor vertices originate host summarize direct indirect edge provenance sketch make sketch available host demonstrate example query tool determine locally available information path exist vertices two different host host contact obtain path consider provenance graph figure three distribute four host figure four assume user specify regular expression path query host one determine path exist spade must first determine start end vertices specify query local host specify start end vertex local query forward relevant host use provenance sketch host four example host query local start end vertex example obtain set host ancestor vertices originate list show parentheses figure four perform table network describe section find set edge span path start vertex end vertex query internal edge host two edge resolve use correspond provenance sketch find connect together provide complete path start end vertex v experiment experiment conduct provenance gather use spade monitor large distribute application sri international speech technology research laboratory application originate part nightingale project nineteen allow monolingual query information document multiple objective project produce accurate translation nightingale aim achieve specify tool transform input use automatic speech recognition machine translation distillation extract query however canonical algorithm step necessitate choice tool use speech use accompany estimate combination available tool produce accurate result complicate fact tool multiple develop parallel fifteen finally choice specific version tool use depend outcome previous run representative application execute two spade collect provenance process run file access result provenance graph file vertices process vertices maximum maximum depth seventeen level width vertices since obtain single site sri use domain knowledge divide correspond distribute execution ten host match network connection base use case speech fig five benefit approximate incremental transitive closure fig six estimate number host contact use provenance sketch generate provenance query three query request entire lineage process file request last k level lineage file process k choose randomly ten twenty path query path completely specify describe regular expression length limit two without loss generality regular expression query start end vertices specify vertices choose follow distribution consider system host store set provenance graph query may originate host system client request lineage information form query describe section provenance sketch associate file contain two bloom filter one represent set vertices second summarize set edge provenance file first filter facilitate rout query host contain relevant information second filter use determine portion query locally match describe experiment test efficiency distribute query use provenance sketch provenance sketch use bloom filter four hash function output range zero ten unless otherwise specify influence incremental transitive closure provenance sketch compute approximately whenever new vertex correspond edge insert current sketch use check vertex parent vertices indirect edge new vertex add sketch path find last vertex path use end edge approach update transitive closure v e time typically much less v three time need compute transitive closure entire graph fig seven influence filter size performance provenance sketch measure benefit compute incremental transitive closure instead complete transitive closure entire graph do count number path query answer provenance sketch versus number actually exist graph do graph increase number direct edge number vertices fix figure five show performance provenance sketch provenance sketch accurate sparse graph size closure much smaller reduce false filter however dense graph decrease performance sublinear double number edge graph decrease sketch accuracy less five b reduction network latency dominant cost answer distribute provenance query come network measure reduction network latency undertake follow zero zero edge transitive closure number edge graph number sketch number actual zero one two three four five six seven eight nine ten eleven one two three four five six seven eight nine ten number host contact actual number host contact use sketch without sketch zero ten twenty thirty forty fifty sixty seventy eighty ninety sixteen percentage false number filter level zero level one experiment divide provenance graph correspond execution ten host x axis figure six show actual number host need contact give set query actual number host contact set query show along axis also plot maximum number host would contact provenance sketch available locally figure six show use provenance sketch reduce number host must contact answer query difference actual number host query contact number host sketch estimate except case example actual number host need contact three five sketch report five seven artifact distribution provenance graph onto multiple host query vertices three five host along query length two c influence filter size finally examine influence size bloom filter false positive probability level sketch execute query filter range sixteen figure seven show result false positive rate conclusion spade system audit provenance distribute describe spade stitch together provenance graph collect different host bloom summary data structure use optimize execution distribute provenance query spade use capture provenance distribute application originate nightingale project nineteen use result record analyze report efficiency use bloom sketch distribute provenance query include regular thank help provenance graph analysis material base upon work support national science foundation grant find express material author necessarily reflect view national science foundation reference one p ad c j trio system data uncertainty lineage international conference large data base two j apply provenance distribute organ transplant management lecture note computer science vol three bower bertram efficiently query scientific provenance graph international conference extend technology four k issue automatic provenance collection lecture note computer science vol five network bloom filter survey mathematics vol one four six al n c r performance replica location service international symposium high performance distribute compute seven g dong l j l wong maintain transitive closure graph international journal information technology vol eight foster j chimera virtual data system represent query data derivation international conference scientific statistical management nine j p slaughter automatic capture reconstruction computational provenance concurrency computation vol twenty five ten bonsai balance lineage authentication annual computer security conference computer society eleven p l provenance record service second hand meet twelve g efficient lineage track scientific international conference management data thirteen k choose data model query language provenance international provenance annotation workshop fourteen file system extensibility reliability use master thesis state university new york stony brook fifteen wang efficiency provenance query international conference data engineer sixteen j c da k sensor data storage international workshop network meet seventeen connect scientific data scientific experiment provenance international conference grid compute eighteen l b r bower g chin b e l foster j j j c j p j kim g j b n v e c k first provenance challenge concurrency computation practice experience vol twenty five nineteen novel information gather harvest intelligence global autonomous language exploitation twenty wan r w g c b r storage resource distribute data grid computer society journal vol four storage annual technical conference sar lineage file system l b survey data provenance record vol three support provenance audit distribute speech technology research laboratory sri international condor grid grid compute make global infrastructure reality law