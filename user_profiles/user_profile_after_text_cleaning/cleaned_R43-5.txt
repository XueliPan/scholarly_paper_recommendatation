metric readability r department computer science university abstract paper explore concept code readability investigate relation quality data collect human derive simple set local code feature human readability use feature construct readability measure show eighty effective better human average predict readability furthermore show metric correlate strongly two traditional measure quality code change defect report finally discuss study program language design engineer practice example data suggest comment less important simple blank line local readability subject management quality assurance engineer metrics general term measurement human factor readability program understand machine learn maintenance code metrics one introduction define readability human judgment easy text understand readability program relate thus critical factor overall quality typically maintenance consume seventy total cost product five claim source code readability documentation readability critical permission make digital hard copy part work personal classroom use grant without fee provide copy make distribute profit commercial advantage copy bear notice full citation first page copy otherwise republish post redistribute list require prior specific permission fee eight copyright project one note act read code component maintenance furthermore maintain often mean evolve modify exist code large part modern engineer readability fact propose add development phase program make readable eleven knight suggest one phase inspection check source code readability propose addition dedicate readability documentation group development team nineteen hypothesize everyone write code intuitive notion concept program feature indentation python choice identifier name comment likely play part example claim readability program depend largely upon simplicity sequence control employ notion help motivate approach system design ten present descriptive model readability base simple feature extract automatically program model readability correlate strongly human also external quality defect change understand empirical objective model readability useful consider use readability metrics natural grade level twelve index eighteen smog index readability index readability metrics develop ordinary text metrics base simple factor average per word average sentence length despite relative simplicity show quite useful practice use fifty integrate popular text include word also become unite state governmental standard include department defense require many document form internal external meet readability grade ten dod defense also often require use write technical metrics far perfect help gain confidence document meet readability cheaply become ubiquitous reason believe similar metrics target specifically source code back empirical evidence effectiveness serve analogous purpose domain important note readability complexity exist metrics show useful brook claim complexity essential property arise system abstract away thirteen readability hand purely accidental brook model engineer hope control accidental coincidental readability address far easily intrinsic complexity complexity metrics typically take account size class extent readability code base primarily local factor relate example size piece code furthermore notion readability arise directly actual human need familiar purpose system complexity factor hand may little relation make code understandable previous work show attempt correlate artificial code complexity metrics directly defect difficult impossible study choose target readability directly concept independently valuable also great control show section four indeed correlation readability quality main paper automatic readability metric base local feature metric correlate strongly human also external quality survey human code form basis metric unaware publish readability study comparable size human discussion feature involve metric relation engineer program language design number possible use readability metric may help write readable quickly identify code score poorly assist project monitor maintain readability serve requirement acceptance even assist help target effort part program may need improvement structure paper follow section two investigate extent study group agree readable code look like section three determine small set feature sufficient capture notion readability majority section four discuss correlation readability metric external quality discuss work program language design section five place work context section six discuss extension section seven conclude section eight two human readability annotation consensus exist readability essential determine characteristic code quality one five ten eleven nineteen factor contribute human readability previous study look readability test comprehension several program however experiment sufficiently extract precise feature study code sample large thus perceive readability arise complex interaction many feature potentially include purpose code contrast choose measure readability small line average code use many short code increase ability tease apart feature predictive readability describe experiment design extract large number readability short code sample group human formally characterize readability map code sample finite score domain experiment present sequence short code call web interface annotator ask individually score snippet base personal estimation readable two important consider snippet selection policy score range snippet selection policy claim readability code different natural code highly structure consist serve different purpose include design documentation logic issue make task snippet selection important concern design tool extract program first relatively short aid feature discrimination however short may obscure important readability second logically coherent give best chance appreciate readability claim span multiple method body include adjacent comment document code snippet finally want avoid generate trivial example readability snippet consist entirely import entirely comment particularly meaningful consequently important exist must short possible adequately support analysis yet must long enough allow make note intention simulate read process context may important understand quite contrary intend eliminate context complexity large extent instead focus detail readability imply context unimportant mean show exist set local feature strong impact readability extension quality mind restrict program follow snippet consist precisely three consecutive simple sixteen basic unit program simple include field function call break continue throw return find experience sometimes short meaningful evaluation readability three generally adequate cover large set local feature sufficient analysis snippet include precede line simple comment function blank line compound like switch furthermore allow cross scope snippet neither span multiple start inside compound statement extend outside find set ninety program consider see figure eight incorporation snippet line usually find function three snippet definition specific extend directly similar like c c readability score prior participation volunteer human tell would ask rate code readability participation would assist study aspect quality collect use annotation tool snippet sniper permit access leisure present sequence button label fifteen user show set one hundred order graphically remind select number near five readable number near one less readable score three indicate neutrality additionally option skip current snippet however use infrequently fifteen time modify source syntax highlight better simulate way code typically view finally click help link remind score base estimation readability readability judgment easy block code understand readability intentionally leave formally undefined order capture unguided intuitive score total distinct figure one provide graphical representation distribution score see figure two computer science vary experience read write code evidence current course enrollment seventeen take course take course thirty take course ten graduate section discuss effect experience readability generate five open source project see figure eight choose include vary level maturity multiple application keep model generic discuss possibility model section seven next consider agreement evaluate whether extract single coherent model data set fact judgment data ordinal available figure one complete data set obtain study box correspond judgment make human annotator color correspond lower readability score one two lighter correspond higher score metric readability derive vertical band indicate judge similarly many ie rank rather simply nominal important statistical consideration since receive precise guidance score absolute score important relative two give snippet x higher score snippet consider agreement respect two even actual numerical score value differ popular correlation statistic sort data correlation coefficient forty correlation one indicate perfect correlation zero indicate correlation ie uniformly random score random instance agreement correlation five would arise example two score half exactly way score half randomly employ statistic throughout study measure agreement combine large set single model simply average like similar correlation statistics compare two time extend find average correlation unify model annotator obtain translate sort statistic qualitative term difficult correlation level typically consider moderate strong use unify model subsequent experiment analyse figure three show range explore use median mode statistics well find correlation essentially therefore choose mean produce value continuum make directly comparable classifier discuss later analysis seem confirm belief figure two distribution readability score make human code take several open source project see figure eight people agree significantly readable code look like overwhelm extent due perhaps individual one implication indeed underlie factor influence readability code model average score capture common factor simultaneously omit arise largely personal preference three readability model show agreement group relative readability however process underlie correlation unclear section explore extent mechanically predict human readability endeavor determine code feature predictive readability construct model ie readability metric analyze code model generation first form set feature detect statically snippet block code choose feature relatively simple intuitively seem likely effect readability factor relate structure density logical complexity documentation importantly consistent notion readability discuss section feature independent size code block figure four enumerate set code feature metric consider judge code readability feature apply arbitrary size block source code represent either average value per line maximum value line example feature represent average number line another represent maximum number one line last two feature list figure four detect character identifier occur frequently snippet return number find together feature create map real number suitable analysis algorithm suggest human readability may often arise complex interaction feature furthermore important feature value may figure three distribution average readability score across result bimodal distribution present us natural cutoff point train binary classifier curve representation distribution window size eight hard locate result simple establish correlation may sufficient fortunately number machine learn design precisely situation typically take form classifier operate instance purpose instance feature vector extract single snippet train phase give classifier set instance along label correct answer base readability data label correct answer binary judgment partition readable less readable base human annotator data designate receive average score less readable base natural cutoff bimodal distribution figure three group remain consider readable furthermore use binary also allow us take advantage variety learn train complete apply classifier instance see obtain estimate probability belong readable less readable class allow us use probability snippet readable score readability use weka machine learn toolbox build classifier base set feature predictive power respect readability help mitigate danger ie construct model fit complex comparison amount data use cross validation consist randomly partition data set ten train nine test last one process repeat ten time ten use test data exactly finally mitigate bias arise random partition repeat entire validation ten time average result across run average maximum feature name x x x x x x x x x x x x x x x x x x x x x x x x x line length character identifier length indentation precede number comment space parenthesis arithmetic comparison branch loop blank line single character single identifier figure four set feature consider metric model performance two relevant success metrics experiment type recall precision recall percentage judge readable readable model precision fraction readable model also judge readable consider independently metrics make perfect trivially degenerate model always return readable perfect recall thus weight together use statistic harmonic mean precision recall eight sense reflect accuracy classifier respect readable also consider overall accuracy classifier find percentage correctly perform experiment ten different establish train classifier set randomly generate score label none able achieve note however always guess readable would actually trivial achieve train average human data ie train randomly several improve eight model include neural network classifier base conditional feature vote feature interval approach base weight vote among make feature separately average three best correctly eighty view model multiple learn advantage one classifier could agree train data would suggest lack generality notion readability eighty correct classification rate seem reasonable absolute term perhaps simpler appreciate rel figure five annotator agreement model obtain average score addition metric figure six annotator agreement experience group compare output classifier average human score model train obtain correlation show figure five level agreement better average human study produce could attempt employ exotic investigate feature improve result clear result model would better since model already well within margin error establish human word real sense metric good human performance thus select classifier equivalence class choose adopt classifier efficiency also repeat experiment separately annotator experience group figure six show mean dark blue bar leave show average agreement average score vector group ie agreement example agree often correlation six correlation five light red bar right indicate correlation metric train annotator group average project name hibernate project thirty seven risk maturity description eighteen seven seven six six five three five five six four four three five three dynamic content data rep game text editor schedule web service simulation game security dev video encode figure eight program use experiment maturity column indicate project status use snippet source simple example exactly one space every two word feature count word feature count space capture essentially information leave one unlikely decrease accuracy principle component analysis indicate total variability explain six principle thus imply feature overlap four correlate readability quality previous section construct model readability mimic human implement model tool assess readability program use fix classifier section use tool investigate whether model readability compare favorably external conventional metrics quality specifically first look correlation readability popular static tool second look similar correlation change code several large open source project choose defect version change relate code churn part measure objectively finally look trend code readability across project set open source program employ find figure eight select relative popularity diversity term development maturity application domain availability multiple open source repository maturity self report categorize note project present multiple release different maturity level case select release maturity level indicate run readability tool include feature detection readability judgment quite rapid example line code take less sixteen second process machine processor disk maximum transfer rate figure seven relative power feature determine singleton analysis direction correlation also indicate group two interest arise first group except graduate automatic metric agree human average closely agree suspect difference respect graduate may reflection diverse background graduate student population sophisticate external factor second see gradual trend toward increase agreement experience investigate feature predictive power rerun analysis use one feature time relative magnitude performance classifier indicative comparative importance feature figure seven show result analysis normalize zero one find example factor like average line length average number per line important readability conversely average identifier length predictive factor neither construct loop comparison section five include discussion possible result prefer singleton feature analysis analysis judge feature power base decrease classifier performance may mislead due feature overlap occur two feature though different capture underlie figure nine use readability predict function defect report function change release readability first experiment attempt correlate defect detect readability metric function level first run note defect report second extract function partition two set contain least one report defect contain none normalize function set size avoid bias program defect report run classifier set function record contain bug respect classifier judgment less readable second experiment relate future code churn readability change capture another important aspect code quality experiment use setup first use readability predict function modify two successive release program experiment successive release mean two recent stable word instead contain bug attempt predict go change soon consider function change case text exactly include change normally ignore program study since specifically focus readability deem relevant figure nine summarize result two experiment guess randomly yield five serve ten represent perfect upper bind average eleven correlation average version change twelve important note goal perfect correlation source defect report project run directly rather use metric predict output instead argue readability metric general utility correlate multiple quality second important consideration magnitude difference claim classifier ie continuous output discrete useful evaluate readability figure ten present data form ratio mean probability assign classifier function positive defect version change function without feature ratio one ie figure ten mean ratio classifier predict less readable assign function contain defect change next version example risk function assign probability less readable nearly greater average assign function without defect many project indicate function feature tend lower readability score function without example project function judge less readable metric dramatically likely contain defect report project likely change next version external quality find tool exhibit substantial degree correlation predict base readability metric yield seven case goal perfect correlation version change code churn moderate however imply connection code readability describe model defect upcoming code change investigate relation readability metric external factor investigate change long time figure eleven show readability tend change lifetime project construct figure select several project rich version calculate average readability level function note open source project always stable project often undergo major overhaul add additional crosscut feature consider recently adopt completely different depend new feature fifty static import fifteen thus conduct additional experiment measure readability maturity stability figure twelve plot project readability project maturity data show noisy upward trend imply project reach maturity tend readable result two figure eleven average readability metric function project function project lifetime note time readability project tend decrease gradually increase would seem support brook argument repair tend destroy structure increase entropy disorder system time pass system become less less well order fourteen readability component order brook speak specifically readability lack readability strong manifestation disorder five discussion study include amount empirical data relation local code feature readability believe information may way code write evaluate design program however caution data may truly relevant interpret represent comprehensive universal model readability start find length identifier name constitute almost influence readability zero relative predictive power recently movement toward self document code often characterize long descriptive identifier name movement particular influence community furthermore name like notation seek encode type information identifier name may advisable previously think descriptive certainly improve readability perhaps additional attention pay fact may also reduce study indicate net gain may near zero example force process long name shorter would suffice may negatively impact readability furthermore identifier name always appropriate place encode documentation many case would appropriate use comment possibly associate variable field explain program behavior long may confuse even mislead believe many case figure twelve average readability metric function project function project maturity best fit linear trend line note project greater maturity tend exhibit greater readability cat integrate development ides specialize static analysis tool design aid three may constitute better approach goal enhance program understand unlike comment direct way communicate intent one might expect presence increase readability dramatically however find comment moderately readability relative power one conclusion may comment enhance readability typically use code segment start less readable comment unreadable code effectively balance net effect would appear comment always indicative high low readability number character per line strong influence readability metric relative power respectively would appear long sentence difficult understand long line code find support conventional wisdom keep line short even mean break statement across multiple line design program readability important concern might design force encourage improve readability consider various design language feature metric example python enforce specific indentation scheme order aid comprehension experiment importance character count per line suggest favor use construct switch encourage short line conclusion readability appear negatively impact repeat character word run counter common perception operator overload necessarily confuse finally data suggest add additional mean program write new consider new language feature might useful conduct study impact feature readability present paper offer mean conduct experiment six relate work previously identify several many readability metrics use today natural language twelve eighteen find analogous metrics target source code present paper metrics exist outside realm traditional language example utility claim readability metric computer generate math thirty layout four twenty perhaps bulk work area source code readability today base cod two six primarily intend facilitate collaboration maintain uniformity code write different style checker nine cod standard checker employ mean automatically enforce also note machine learn past use defect prediction typically train data source code seven seventeen believe machine learn substantial advantage traditional statistics much room yet exist exploitation engineer program seven future work present paper provide excellent platform conduct future readability experiment especially respect unify even large number accurate model readability show agreement factor contribute code readability would expect annotator personal lead somewhat different weight relevant factor would interest investigate whether personalize model adapt time would effective characterize code readability furthermore readability factor may also vary significantly base application domain additional research need determine extent variability whether specialize model would useful another possibility improvement would extension notion local code readability include feature feature calculate average maximum value per line may useful consider size compound number simple within block study intentionally avoid feature help ensure capture readability rather complexity however practice achieve separation concern likely less compel readability measurement tool present challenge term programmer access suggest tool could integrate ide eclipse way natural language readability metrics incorporate word seem readable author may quite difficult understand nineteen system could alert instance arise way similar identification syntax finally line conventional readability metrics would express metric use simple formula small number feature section suggest may possible use truly essential predictive feature would allow metric adapt easily many development process furthermore smaller number readability metric could modify order better describe readability certain meet specific concern eight conclusion important note metric describe paper intend final universal model readability rather show produce metric readability human relevant specifically fact show possible create metric agree much agree consider relatively simple set code feature addition see readability describe metric exhibit level correlation conventional metrics quality defect code churn stability furthermore discuss consider factor influence readability potential improve program language design engineer practice respect important dimension quality nine reference one k singh j k integrate measure reliability symposium proceed annual page two ambler cod dev five eight three p inspection use wise one proceed first workshop inspection engineer four b b b order quantum make effective use space display graph four five b v r defect reduction top ten list computer one six l w cannon r l w j h miller j milner r w e p n h spencer recommend c style cod revision sixty specialize june seven j j p n j test machine learn experiment proceed annual conference computer science page eight r statistical four fourth international conference quality page nine apply centennial book ten e w discipline program r study bootstrap prentice hall eleven j l improve computer program readability aid modification eight twelve r f new readability yardstick journal apply psychology accuracy estimation model selection international joint conference artificial intelligence fourteen two r technique measurement archive psychology j lionel e use program read thirteen j p brook silver bullet essence bull seventeen two engineer computer twenty four fourteen j p brook mythical essay engineer anniversary edition professional august fifteen get acquaint new advance feature four sixteen j gosling b joy g l language specification series read seventeen l grave f j marron h predict fault incidence use change history seven eighteen r gun technique clear write international book new york nineteen n j documentation readability propose process improvement note three twenty e c measure readability journal maintenance seven two g weka machine learn workbench proceed second new conference intelligent information w pugh find bug easy twelve e b n goel nandi j detection high code churn large legacy system proceed seventh international symposium reliability engineer page computer society j p e smith derivation validation readability index use technical human factor p knab predict defect source code file decision tree six proceed international workshop mine page j c knight e phase implementation note sixteen three thirty r b p l readability metric mathematics technical report retrieve g h smog grade new readability journal read may r j j j b program indentation comprehensibility eleven machine learn hill n ball use relative code churn measure predict system defect density five proceed international conference engineer page c v advance engineer computer ten r read source code proceed conference advance study collaborative research page press p tool assist identifier name improve readability empirical study empirical engineer international symposium use domain knowledge program understand ann nine fourteen c notation library forty e comparison consensus consistency measurement approach estimate reliability practical assessment research evaluation nine four h c cod rule best practice professional program readability versus comment fourteen nine g van j c program python holt new york e j evaluate complexity measure fourteen nine