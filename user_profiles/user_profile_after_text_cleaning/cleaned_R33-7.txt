avoid transient loop forward ram one department computer science engineer university south two department electrical computer engineer university ca three department computer science engineer university abstract rout change topology propagation path recomputation update forward table fib incur delay traffic forward resume alternate convergence period may inconsistent view network result transient forward loop previous remedy propose address issue enforce certain order among nod update fib approach succeed avoid transient loop incur additional message overhead increase convergence delay propose alternate approach forward avert transient loop forward packet base incoming interface destination require exist rout easily current since already maintain fib interface efficiency paper present approach prove correctness discuss three alternative evaluate performance one introduction widely use link state rout distribute link state router complete description network topology link fail due faulty interface fiber cut one nod adjacent failure detect flood change link state rest network recompute rout table rout table push onto forward information base fib line card step failure detection link state propagation rout table recomputation fib update incur delay step h de n c international federation information process z al complete affect fail link guarantee forward correctly along new alternate interval failure detection fib update refer convergence delay convergence period may inconsistent view network therefore forward loop two loop last short time effect mitigate field still overwhelm high capacity link render unusable therefore desirable avoid forward loop even transient several remedy transient loop problem suggest literature two three four five six one work group address issue nine path lock safe neighbor approach two categorize rout three type b c install new rout b c type fix delay delay type b greater delay type c rout approach decrease likelihood loop completely eliminate moreover introduce additional delay installation new rout compound convergence delay pathfinding algorithm propose three block potential loop detect loop form achieve router first report neighbor distance reach destination infinity wait neighbor acknowledge message distance predecessor information update successor forward table recently similar propose four five forward table update network order node update forward table neighbor use node reach different fail link update forward table although scheme avoid transient loop require additional message exchange among enforce order update forward table result increase convergence delay paper propose alternate approach forward exploit existence one forward table per interface avoid transient loop without require change exist link state rout network view network would forward loop presence view different packet might get catch loop case packet would arrive unusual interface least one involve loop therefore forward loop avoid packet discard scenario rather forward usual next hop precisely selectively discard arrive unusual key advantage avoid transient loop without increase convergence delay one many scheme propose deal fast local however focus paper scheme specifically design loop avoidance convergence link state update avoid transient loop forward without employ additional synchronize forward table update different nod rest paper structure follow section two illustrate problem transient loop approach avoid forward loop three possible describe section three section four prove propose prevent loop case symmetric single link result evaluate present section five finally conclude paper section six two transient loop problem exist approach illustrate occurrence transient loop discuss recently propose approach avoid point need alternate approach use example illustrate problem transient loop consider topology show fig one direct link label weight purpose illustration let us assume nod similar failure detection time failure notification time neighbor nod route computation update time node nod affect failure consider scenario link fail time examine failure impact forward source node destination node table one summarize rout traditional correspond change packet forward path node node result convergence delay ie total time nod network converge failure service disruption time ie total time service disrupt due failure interval forward table update nod e f ie nod different view network result forward loop avoid transient loop convergence plan link failure unplanned failure protect link method propose four b fig one use illustration z al table one summary rout time failure link failure link e failure detect e failure detect c f failure notify c f failure notify b failure notify b failure notify b route update b route update e route update loop c f route update c route update route update route update route update f route update e route update ensure order installation forward table exchange message neighbor nod consider similar approach refer avoid loop case unplanned around eighty accord one unprotected link rout correspond fig one show table one note method f update forward table assume update time message propagation process time update table method avoid forward loop drawback increase network convergence delay scenario discuss method extend convergence delay objective develop scheme combine best feature ie low convergence delay disruption time loop avoidance scheme would ideally respond failure show table one behavior would effectively similar except packet drop would loop otherwise case destine f e interval consequently ideal scheme would convergence delay service disruption time also avoid forward loop follow section present evaluate scheme closely approximate ideal behavior three approach approach avoid forward loop base notion forward packet forward depend incoming interface addition destination address section first briefly explain avoid transient loop forward forward argue exploit avoid loop present three compute forward table illustrate term loop avoidance computational complexity forward packet network traditionally rout base destination address alone regardless source address incoming interface therefore single forward table map destination address next hop outgo interface sufficient current perform forward nevertheless nowadays maintain forward table line card interface efficiency however forward table interface identical ie forward table example forward table node b fig one give table two instead maintain forward table interface possible avoid forward loop make forward table table three give possible set forward table node b fig one entry mark x node mark obviously never use mark x reference normally ie failure nod network consistent view example fig one packet destination arrive b neighbor since b next hop similarly b receive packet destine f since along path b f however presence link inconsistent forward table different nod convergence period packet may arrive node unusual interface forward enable special treatment arrive unusual without introduce change forward plane current network infrastructure study forward exploit purpose avoid loop convergence period link state change network table two ward table node b table three forward table node b destination c e f e c f r e n c c c c c c destination c e f e c f r e n c x x x x x c x x z al forward clear link state rout network view network would forward loop presence view different packet might get catch loop however case forward packet would arrive unusual interface least one involve loop forward loop avoid packet discard scenario rather forward usual next hop refer approach avoid forward loop selectively discard arrive unusual forward ideally packet discard router forward would definitely result loop however local view network router always determine actual forward path packet certainty therefore design challenge ensure loop freedom without unnecessarily discard paper study several implementation range conservative discard would certainly loop otherwise forward even could loop aggressively discard whenever could loop even may actually loop proceed present various first introduce notation would help describe let g v e graph vertices v edge e represent network use denote next g let f denote forward table entry ie next hop arrive interface associate neighbor j use p refer path give graph g similarly cost path denote present three different difference lie mark x table three set mean discard name accord criterion use discard packet operation packet destination arrive node neighbor j summarize table four elaborate detail note node make packet base solely view network discard packet incoming outgo ie f j discard packet arrive node next hop ie along reverse path destination conservative list discard packet loop otherwise without scenario two neighbor nod example table five packet destination arrive two note work even equal cost rout ease explanation assume one path per destination avoid transient loop forward table four discard packet arrive j method cycle forward progress discard condition discard criterion j j p j forward progress previous node along path table five forward table b different destination destination destination c e f c e f c e f e c f r e n c c c c c c c c c c b c discard since c next hop b also since incur additional overhead compute forward table beyond currently use algorithm compute forward table however ensure two nod involve loop case link symmetric bidirectional equal weight inconsistency view among limit single link state discard packet previous node appear along path node destination ie f j p discard packet arrive node fall along path node destination link symmetric behave like link asymmetric result asymmetric operation could different less stringent condition may discard packet even may actually loop time avoid loop avoid example table five packet destination e arrive b f forward result loop whereas discard since f along path b e computational complexity similar require single path tree computation discard packet forward progress towards destination previous hop next hop node ie f j z al table six among discard arrive node b fail link c f f c e fe fe e discard discard forward discard discard discard forward c forward c discard forward forward forward discard packet previous hop farther destination next hop node case potential loop discard example table five packet destination arrive b f discard since cost f two whereas cost next hop c three contrast forward packet c discard seem unnecessary prevent loop even link asymmetric state multiple link change simultaneously example topology show fig one b suppose link fe fail assume nod except nod b c notify failure forward table reflect failure scenario packet forward along loop hand discard b since accord b view cost three next hop g smaller cost also three downside however straightforward method implement require computation e v time average compute path tree root neighbor whereas complexity difference action three clearly evident presence link fe fig one show table six assume b yet aware fail link forward table b reflect change fe fail f arrive b discard whereas forward along path via c essentially achieve different sum follow packet loop probability packet discard probability network convergence delay four proof property prove describe previous section ensure single link state change propagate avoid transient loop forward fig two illustrate network symmetric link clear two also since whenever discard packet would therefore suffice provide proof give use follow notation section let path tree undirected link root destination note tree contain every node since link symmetric use denote node since forward destination independent forward follow prove destination theorem one packet destine loop case failure link proof six forward path without failure therefore forward consistent every node along path hence destine catch loop due failure rest proof assume let f upstream node l path f fig two nod f affect ie nod outside forward along path without f l destination consider packet originate node f packet may forward node f get get somewhere f packet go outside forward consistently possible loop one consist nod within f thus prove need show loop within f suppose loop f loop must contain nod aware unaware fail link pick root node f z al zero one last node stretch arbitrary node loop aware failure show fig two suppose packet start rout along zero nod ie nod aware failure forward consistence reach one forward packet node unaware failure note forward consistent p e use dash line indicate p e packet instead towards via dash path forward packet via dot path towards b one ie choose b f l similarly packet intend forward next stretch dash path process continue packet forward back n one zero zero zero zero show contradiction loop exist note loop forward packet back get packet packet get drop forward back consider reroute decision node one n since node choose path f f six zero zero zero zero similarly consider decision make node ai since choose path ai path ai x ai la x n la n add together n x ai la n x x la x la one n en add together get n x ai la n x one two three four five six obviously formula six contradict formula three therefore forward loop possible case single link failure use similar show avoid forward loop convergence period failure change state link avoid transient loop forward five performance evaluation section evaluate performance compare first simulate single link demonstrate prevent number loop possible also lower convergence delay experiment multiple study single link evaluate build control plane simulator emulate rout dynamics presence link measure service disruption time different od pair network convergence time present ten use backbone topology twenty nod link use ten assign link weight different link randomly pick integer value one five consider symmetric link weight x asymmetric link weight could different x forward table node include prefix assume rate fib update twenty number prefix simulator set base find eleven every simulation run fail link network exactly result present represent effect link simulation run total time forward loop exist observe whereas expect loop case symmetric link case asymmetric link loop duration case loop result demonstrate effectiveness symmetric link b asymmetric link fig three average service disruption time per link failure various od pair od time per failure sec scheme identical od time per failure sec scheme identical z al symmetric link b asymmetric link fig four network convergence time due various single link symmetric link b asymmetric link fig five average packet discard time per link failure various od pair avoid loop proceed show achieve expense convergence delay longer service disruption figure three represent average time experience od pair due single link failure network symmetric link clearly see average time particular od pair remain implement top show add extra time figure three b show similar behavior average time network asymmetric link let time represent total time take network converge link failure fig four fig four b show time due different link backbone network symmetric asymmetric link link convergence time sec scheme identical except link convergence time sec scheme identical except od drop time per failure sec drop time per failure sec avoid transient loop forward respectively give nod network wait longer time update fib easy see network exhibit higher time compare network synchronization need nod update fib fig five show packet discard time due various network symmetric link expect symmetric link packet discard time identical quite close similar pattern observe even asymmetric link fig five b however packet discard time identical due fact loop avoid compare multiple link evaluate simulate multiple link nod study use simulator mention handle single link instead use simplify model approximate link state propagation route computation fib update time assume link state propagation take one time unit per hop route computation fib update time three simulate single node also simultaneous two nod also two link three link failure scenario forward packet every pair nod count number node pair undeliverable also get catch loop table seven comparison case multiple loop probability undeliverable node pair two link three link one node two nod zero zero zero zero zero zero table seven show relative performance different term ability avoid loop deliver include design deal multiple yield identical performance since link symmetric compare loop close time less likely happen whereas loop occur term packet delivery performance delivery ratio slightly worse consider prevent loop without excessive discard believe approach method viable alternative avoid transient loop convergence rout scheme network z al six paper propose simple forward base approach call avoid transient forward loop network convergence approach selectively discard arrive unusual likely catch loop demonstrate incur additional message overhead compare avoid forward loop like without increase network convergence time present several evaluate performance observe simple effective eliminate loop provide best reference one g c charac backbone two analysis minimization rout draft work progress three j pathfinding algorithm rout network five four p bonaventure avoid transient loop convergence network five c fast reroute use tunnel draft work progress six framework convergence draft work progress seven z lee wang j failure base fast handle transient link node global symposium eight atlas alternate draft draft work progress nine rout area work group ten r g service availability new approach characterize backbone international workshop quality service eleven g c feasibility restoration backbone network magazine special issue protection restoration disaster recovery