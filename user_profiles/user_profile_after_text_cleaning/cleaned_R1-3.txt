crew report submit international symposium engineer human system design school city university square unite kingdom zero error bookmark define human system design school city university square abstract paper report method assess human error system topic usually consider engineer previous work propose taxonomy influence factor might contribute human error paper take taxonomy elaborate suggest generic deal different layer taxonomy taxonomy combine causal model error represent belief net model error influence arise user knowledge ability task environment combine factor describe complexity action user interface quality project system usage model predict slip mistake assess accord action type scenario suggest generic prevent error deal method illustrate service engineer support system application one introduction advise investigate consequence human system analytic report safety critical literature range use design rationale formal failure analysis general approach prevent human error field al investigate task mean link error analysis investigation inquiry cycle al take range view call give rise system analyse however detail guidance engineer report previous work propose scenario base analysis method scram employ scenario script method validate design key point script safety critical accurate foresight press problem use human error reason investigate future system use although could draw analyst attention potential source human system error may need consider analysis advice still require considerable interpretation one research fund commission crew engineer research project two predict scenario may prone error paper report work undertake address problem employ belief network analyse human error identify deal paper three section first introduce method assess possible impact human error system section three describe application method tool support scenario analysis section four illustrate method case study take service engineer support system application paper conclude brief discussion potential two framework method error analysis method base three simple first analyse create thread behaviour though use case adopt object orient approach see second ask error may occur stage give set influence factor contribute likelihood generic propose deal consequence mitigate may arise due influence factor generic knowledge use agenda issue point towards investigation refine knowledge high level design may add directly specification method give figure one elicit work environment task influence factor predict domain use case generic apply fix interaction action type figure one method influence factor elicit domain predict human error use case generic propose prevent remedial measure method describe paper use two type first domain capture information system workplace context environmental information current three system environment day life use secondly scenario script test data thread generate use case refine investigation originate environment method stag method stag figure two method iterative set first cut use case stag proceed concurrently lead refinement use case specification domain model use case domain generic influence factor use case specify influence factor event domain factor refine generate error model error scenario specification figure two lower level method stag associate model stage one use case model use case model follow standard describe paper preliminary system investigation identify major system use case create system describe involve flow use case express interaction diagram map sequential human system follow standard notation stage two specify influence factor four set influence factor provide separate different layer personnel train environment factor within layer investigate see relevant application domain model domain describe work environment good source information influence factor table influence factor probable generic prevent counteract consequent provide help engineer deal issue layer factor rat three point scale high medium low estimate severity potential impact factor aggregate give overall likelihood error use influence factor use estimate overall probability error emanate system environment stage three generate step generate walk event sequence pathway use case pathway become scenario thus one use case give rise many concurrency use case model scenario generation support tool al automatically identify possible use case influence factor analysis use scenario script assess user may prone failure every scenario walk analyst inquire whether error may occur stage stage four refine human error influence factor use determine type error slip mistake likely occur analyst identify action use analysis description cognitive physical complexity scenario action type decision support set generic link error action type provide stimulate analysis high probability indicate branch original scenario hence new abnormal course scenario create describe error recovery action outcome set format use case elaborate influence factor help engineer anticipate may occur assign abnormal set influence factor provide influence factor analysis two purpose first supply high level generic associate set factor secondly factor form input causal model error use analysis see section three previous paper al report four group factor environmental condition management affect human internal fatigue stress motivation paper deal two layer influence factor model event causality complex analysis effort warrant depend safety criticality system two approach offer five first use method tool think alternatively factor may enter tool perform scenario analysis domain describe work environment people operate control manage system use capture influence factor either take make cover variety work may occur domain user factor table factor measure objectively use psychological instance general ability measure intelligence aptitude scale decision make locus control scale domain task knowledge measure create simple test specific main personnel factor personnel selection train generic indicate need computer base intelligent aide memoir information display table user personnel factor slip mistake type generic counteract personnel general ability knowledge domain skill task knowledge train concentration accuracy motivation skilled task slip especially complex task longer learn time slip longer learn time slow operation slip slip order slip slow operation short cut decision problem solve task inability deal unexpected slow performance failure complex mistake slow performance poor initiative mistake wrong mistake poor poor check increase mistake slow performance short cut generic personnel selection appropriate task job description improve train job experience train improve train help aid mentor select personnel appropriate task discipline train improve performance select appropriate personnel improve job satisfaction select appropriate personnel human error follow distinction draw reason reason divide slip result lapse attention mistake complicate reason impact poor personnel factor worse skilled performance show column two task require problem solve worse performance mistake illustrate column three generic train list column four addition user personnel factor use assessment task complexity see table match task appropriate complexity also give people sufficient challenge responsibility job task allocation work design complicate issue beyond scope paper however see bailey detail six table task domain factor generic task factor high volume delay bottleneck complexity performance degrade fatigue user fatigue stress mistake problem solve failure repetitiveness boredom poor train issue buffer smooth possible design batch schedule match complexity user experience decompose task simplify possible provide task variety swap frequently provide aid status progress check unwanted time pressure late slip smooth event arrival task give user time think provide hold action task switch aid agenda clear mode status schedule switch possible attention slip miss attention slip miss capture capture attention slip miss lose thread factor elicit question task complexity environmental factor complete documentation method provide comprehensive list question elicitation factor user performance list column two table generic user task switch make slip type likely whereas higher time pressure lead delay complexity repetitiveness hand task allocation increase mistake give task match train carry allocate task note many task performance also effect increase level stress fatigue train column three increase domain specific model may create select subset influence factor apply application many influence factor possible domain require particular model hence provide general model tool domain specific information generic model take sub set key factor apply tool allow influence factor enter rat three point scale high medium low complexity calculate event probability rat model configure assign set combination influence factor set default formulae weight provide adjust depend user knowledge domain three belief network analysis section introduce mean combine influence factor formal predictive model human error graphical network seven represent probabilistic offer decision support probabilistic reason presence uncertainty combine advantage intuitive representation sound mathematical basis probability pearl useful infer yet observe basis evidence causal relationship event question example doctor might observe variety patient use determine cause several possible alternative hence might arise make nod arc nod represent arc represent usually causal example figure three fragment net describe detail follow section paper show complexity action variable affect causally two factor level physical detail cognitive complexity task either finite infinite number state possible choice measurement scale leave analyst discretion case study assign one three possible state high medium low action complexity cognitive physical figure three simple fragment two prior nod causal influence posterior node task complexity fragment know cognitive physical particular action high probability overall complexity high greater know action low level physical detail involve little cognitive ability model fill node probability table table show task complexity node table node probability table task complexity node action complexity medium cognitive physical high low high nine one zero high medium low high seven two one eight fifteen five six three one medium medium low four five three three two three low high medium seven two one two three five low one two seven nod incoming arc associate table conditional show table arc table conditional represent knowledge one node useful another node hence table column one engineer assert cognitive aspect action high physical detail action high probability eight overall action complexity high nine medium one zero probability low table configure estimate output exhaustive pairwise combination input accommodate base subjective elicit domain base objective data net complete bay theorem use calculate probability state node net result calculation probability distribution state node evidence available determine state particular nod particular value enter propagate network update value nod entirely tool explorer see web site result network make regard probability certain variable particular state give combination evidence enter generic model influence factor give rise human error illustrate figure four three group factor user knowledge personnel affect three factor situation aptitude turn combine motivation influence slip mistake model user factor list table apart concentration vary task difficult estimate table merge disrupt normal flow work repetitiveness volume use judge less important influence error complexity model action rather task level inner figure four generic network error analysis time interrupt fatigue describe environment situation configure contribute slip strongly mistake user outer nine knowledge compose domain task contribute type strongly mistake general ability aptitude influence mistake strongly user motivation affect type error far describe general user task context outer layer net merge inner layer net describe design user interface user action scenario user action rat accord cognitive complexity physical operational detail factor turn affect probability human either mistake slip finally manifest event either interaction human action impact analysis method domain use gather input outer see figure four user knowledge ability situation run scenario script user behaviour system essentially follow use case scenario one pathway complex use case scenario script also generate interaction diagram use case run produce error probability action scenario script particular environment scenario see section four run set value input nod instance service engineer application describe model service engineer one scenario domain task knowledge set high train experience equip engineer apart knowledge equipment service ability set medium reflect usual educational personnel recruit job motivation set medium company loyalty judge high time pressure high many call complete tight customer premise common scenario run scenario script diagnose fault run follow estimate make action level script action assess cognitive complexity action require complex rat high complexity conversely simple physical action computer io rat low b physical complexity rat complex involve precise detail rat high whereas single discrete action machine rat low c action involve human computer interface usability assess measure usability acquire evaluation observe alternatively usability rat answer follow question also point generic user interface command function exist user achieve goal miss indicate use find command action achieve goal user interface metaphor need attention ten clear carry action computer prompt cue user interface metaphor need improve user perceive understand effect action feedback add make clearer usability evaluation complex subject question provide minimum guidance detail reader refer al press monk al prototype interface exist usability score set medium potential human computer action low design action unlikely involve human computer interaction use case human action tend complex cognitive frequently analyse detail whereas user system decompose lower level detail tend simple physical important therefore ensure action explicitly model use case diagnose problem user reason model complex cognitive action rather simple action find fault may outcome reason run use rat influence factor represent user take application combination input represent different environment produce error probability scenario script derive use case link probable slip mistake predict analysis link generic analyse type action interaction step scenario specify may occur list exception type provide table divide two group first abnormal event pattern draw event classification secondly information refer message content information incorrect exception type associate one generic propose high level problem table summary exception type prone action generic deal exception type event happen omit event happen twice iteration event happen wrong order event expect information incorrect type incorrect information value information late date information detail generic request resend set default discard extra event diagnose duplicate buffer process early halt wait late send reminder check task validate event set discard invalid event request resend prompt correct type check type request resend prompt diagnosis check data integrity check use default apply filter post process eleven information general request detail add detail alternative source general method provide basis develop specific domain knowledge exception type employ follow associate different type action predict input action prone likely result wrong order besides generic list table provide edit correct input slip spell checker detect typographical validation check input field input action high mistake different mistake usually detectable input reflect valid user intend remediation need add specification undo function status select clear feedback user progress output action responsibility system event point miss output action prone error user receive data slip manifest misread data transposition failure see output make key data salient highlight high tendency mistake use interpret output result incorrect action take data misinterpret mitigate improve data presentation sort group information information presentation complex subject right engineer refer detail source decision action may contain mixture input output interaction many also apply user slip probable validation check correct input forgive command confirmation dangerous action advise mistake decision support system check likelihood alternative take available data make dangerous difficult add warn ability monitor human depend ability capture interpret input decision remain within human domain may possible generic mitigate effect mistake make clear provide accurate realistic model decision domain user improve user situation awareness decision make generic necessarily high level draw engineer attention need consider moreover method give source literature work progress improve quality advice investigate class user task requirement slip mistake suggest diagnosis plan schedule generic task see four case study twelve case study service engineer support system report analysis use case diagnose fault repair see figure five sixteen environmental run model different engineer train novice v expert motivation high low work situation good bad report four sixteen optimistic one well train motivate engineer good situation inverse pessimistic scenario two intermediate environment scenario run action use case four type simple low cognitive physical complexity ten thirteen action physical low cognitive high physical complexity action nine collect spare part cognitive high cognitive low physical complexity action eleven check machine performance complex high cognitive physical complexity action ten repair machine case user interface property set medium result give figure six ad mistake slip high pessimistic scenario figure increase novice motivation make little difference figure highlight work situation probably important poor motivation perform better mistake slip difference great figure well motivate work situation optimistic scenario performance good low mistake predict action type apart complex however slip predict action type apart simple category combine illustrate main analysis reduce bad situation factor ie give engineer plenty time repair reduce investment train vital keep novice mistake acceptable level although analysis may overestimate error point issue engineer attention interpretation result band high medium low calibrate domain example low take absolute frequency would significantly impede normal system operation ie five per task medium estimate range five five task high fifty result show figure six ad predict mistake problem novice engineer action also considerable concern simple action implication thorough train important slip problem action situation bad often case engineer work time pressure may fatigue particularly noticeable physical action nine complex action additional effort need place refine prevent slip action ways physical complexity search spare part find generic table indicate issue investigate clear informal display diagnosis priority development intelligent tutor may justify novice engineer thirteen figure five interaction diagram use case diagnose fault perform repair fourteen r r r e f l b b r p ninety eighty seventy sixty fifty forty thirty twenty ten zero r r r e f l b b r p eighty seventy sixty fifty forty thirty twenty ten zero high medium low l e p l c h p e v n g c l x e p c l e p l c h p e v n g c l x e p c figure error slip mistake novice engineer scenario low motivation poor situation high medium low l e p l c h p e v n g c l x e p c l e p l c h p e v n g c l x e p c figure error slip mistake expert engineer scenario low motivation poor situation fifteen r r r e f l b b r p eighty seventy sixty fifty forty thirty twenty ten zero r r r e f l b b r p seventy sixty fifty forty thirty twenty ten zero high medium low l e p l c h p e v n g c l x e p c l e p l c h p e v n g c l x e p c figure error slip mistake novice engineer scenario high motivation poor situation high medium low l e p l c h p e v n g c l x e p c l e p l c h p e v n g c l x e p c figure error slip mistake expert engineer scenario high motivation good situation five discussion sixteen paper report modest progress towards improve quality elicitation deal arise human error promise approach nevertheless disadvantage set effort require configure table time consume combinatorial explosion make create table three input per node difficult network produce plausible although incomplete model psychological influence human error benefit tune network probability table however analytic resource believe account important causal influence human error demonstrate analytic technique direct analysis effort towards certain action scenario generic provide advice slip mistake accord type action however quantitative analysis several benefit instance different user interface design quality user train run inform invest user train development improve user interface hence reduce highlight action use case failure critical concern prompt engineer invest time define user support error recovery finally prototype design use quality assurance tool design know user population task prototype user predict probability performance safety critical provide useful evidence safety case quantitative receive little attention date however note trade off need make metrics use tool product procurement approach report provide formal mean quantitative assessment system believe return increase benefit effort involve tune particular future work tune network compare data observe improve quality generic investigate tie model generic task research fund commission long term research project crew engineer project partner include project city university university university reference bailey r w bailey human performance engineer prentice hall b identify conflict march seventeen field al r e field p c wright task center approach analyse human error tolerance international symposium engineer w time clean design work new york e human reliability analysis context control academic press c towards integrate rationalistic ecological design interactive institute technology graphics usability technical report p g engineer drive approach improve communication decision make within quality function deployment first international conference concurrent engineer c w document design safety critical user interact vol eight three n g system safety publish monk al monk p wright j l davenport improve human computer interface prentice hall pearl j pearl probabilistic reason intelligent network plausible inference morgan al c k analysis vol eleven two reason j reason human error university press g integrate approach analysis proceed design interactive press new york g technique combination approach engineer proceed international symposium engineer computer society press g j claim reuse knowledge people proceed conference h l c roast springer g acquisition validation method tutorial al n maiden support engineer engineer appear eighteen al press g v model mismatch analysis towards explanation usability appear information technology unify model language method rational corporation nineteen