statistical use latent topic model ben computer department university wi abstract statistical use machine learn model program help identify root cause bug approach task use novel model model execution trace attribute fail run program generate two type latent normal usage bug execution trace attribute successful run program however model usage joint model trace allow us identify weak bug would otherwise remain undetected perform model inference collapse sample quantitative four real program model produce bug highly correlate true bug measure rand index qualitative evaluation domain suggest model outperform exist statistical bug identification may help support task address model one introduction depend buggy computer inescapable feature modern life grow ever complex dynamic perfectly predict behavior application become impossible theory practice therefore see increase interest statistical use statistical machine learn support statistical cope uncertain incomplete information still provide clue cause failure particular one collect successful fail crash program run use machine learn identify action strongly associate program failure goal predict whether run succeed fail identify potentially multiple type bug program contrast work eighteen approach task use latent topic model model probabilistic latent semantic analysis nine latent allocation ten successfully apply model natural language document eleven image twelve contribution present work twofold one best knowledge work first apply latent topic model employ novel variant model run program yield record execution behavior record document word document record describe record greater research support part grant grant train grant detail section two assume multiple hide bug multinomial word distribution record fail run consist partly word generate mixture bug task automatically infer bug mix weight multiple run program would prefer bug bug cause correspondence property analysis guarantee find practice likely two latent topic model delta latent allocation identify weak bug strong interference exist latent topic model statistical primary interest bug example particular bug might trigger specific segment code produce correspond word however typical run bug word pattern overwhelm much usage word pattern code open file print page execute frequently produce word show literature eight well experiment many standard model confuse usage pattern identify bug satisfactorily explicitly model bug usage collection report fail successful run model successful run use usage fail run usage bug thus bug force explain successful run fail run hence name review statistical section two present model collapse sample inference procedure section three demonstrate effectiveness synthetic example four real program ie moss section four task help identify root cause bug model perform well better best statistical furthermore support relate task contemplate prior work benefit build upon single integrate model coherent interpretation term two bug isolation bug isolation project ongoing effort enlist large user isolate ultimately repair cause bug thirteen statistical critical component allow us cope unreliable incomplete information deploy section briefly review approach infrastructure show map behavior model suitable latent topic analysis data analysis consist report generate instrument code insert passively log many potential interest engineer application execute interest may include direction take branch statement execute whether function call return negative zero positive result presence unusual value forth via instrumentation run program generate sequence record sequence document record word set possible record instrumentation code correspond set word type instrumentation code distribute throughout source code program even program instrumentation point word type single event word token may occur millions time single run reason performance user privacy record every event instead sparsely sample run typical sample rate mean event chance observe record time occur sophisticate instrumentation adapt sample rate expect number give event sample rare higher rate common lower rate thereby increase probability rare event record occur second practical measure discard event order information instead report number time event record single run result single vector event count call feedback report data single feedback report incomplete unbiased random sample behavior run term feedback report bag word representation document generate run feedback report collect centrally aggregation analysis report may come real participate ongoing public deployment fourteen may produce fix test suit feedback report carry one additional piece information outcome flag record whether run succeed fail case fatal crash might consider run consider sophisticate flag compare program output reference implementation may also use program complexity must assume unknown number latent bug instrumentation broad must assume vast majority program directly connect give bug thus bug signal noisy due sparse sample weak relative majority behavior program statistical challenge follow give large collection feedback report program report flag accord whether run succeed fail may number bug ie cause failure distinguish among cause failure identify contribute failure connect underlie use information help support process particular understand broadly three model standard ten model single document collection example apply collection fail run standard likely recover usage pattern rather generally bug pattern contrast model mix collection successful fail run reserve extra bug fail run order capture bug pattern explicitly model successful fail fig one model run usage bug able recover weak bug clearly model figure one follow major nu usage bug b sample two b b distinguish b instead single facilitate incorporation certain type domain knowledge example believe part less test bug may focus correspond word total document document observe outcome flag f successful fail run respectively document constitute mix collection successful fail run document generate bag word mixture nu mix weight sample one two f depend outcome flag case correspond bug set zero ensure successful run use bug contrast f greater zero allow fail run use usage bug rest model identical word position document one sample topic index z z one nu produce word w z model thus specify conditional probability p wo b f use bold face denote sequence omit notational simplicity compute p wo p z p p zo p p b j ni j di z z wy j p zo p dod f di one two w vocabulary size ni j number time j assign topic number time topic occur document also j probability word j generate topic di probability use topic document one straightforward allow small nonzero bug topic weight successful run useful believe run affect bug fail three four five six inference interest hide z draw z sample posterior p use chain monte particular use collapse sample eleven draw p w site k sequence inference procedure linear number sample take total number use size corpus since p w p wo p wo p site compute joint p z wo p zo p give one two integrate collapse one two result follow p p zo wy ni j ni od od j j j od od count word assign topic ni contain document usage topic b bug topic od associate topic outcome flag value od rearrange four five yield count word j associate word j topic p w ni k ni k k k equation count exclude word topic assignment position k also word position k document contain position k outcome flag associate equation allow us perform collapse sample efficiently use easily obtainable count value note k also zero mean topic never assign word zero count chain mix use single sample posterior p estimate multinomial word topic topic mixture weight document j ni j j ni seven di od od eight use domain expert knowledge set f b well number usage bug nu value use specially fit data perform well variety alternatively value could estimate data use model evidence maximization involve find value maximize evidence p wo b c fig two toy example show ability recover weak bug truth eight usage three bug b example success leave failure right document c successfully recover usage bug standard recover identify bug particular sample technique employ model allow convenient estimation evidence importance sample use z sample draw chain fifteen four experiment toy example first use toy demonstrate ability identify bug vocabulary consist grid use eight usage three bug figure two eight usage correspond uniform distribution wide horizontal vertical bar three bug correspond uniform distribution small x diagram image also black frame visibility correspond vocabulary word generate document length accord procedure describe section three half document successful run half fail run topic mixture use one one one one one one one one zero zero zero f one one one one one one one one one one one mean bug never present od successful document tend weakly present od f fail document example document generate corpus show figure two b run standard eleven use code toy order give standard best chance identify bug run od f document use eleven run document use eight usage three bug supply true use generate data standard implementation use experiment allow symmetric value vector value therefore supply standard model symmetric one experiment show use different implementation standard true f vector achieve similar result model use symmetric one actually use generate data fix chain run full sample estimate final sample describe two additional experiment show validate intuition inclusion od document improve recovery bug standard table one general information test program run program line code bug successful fail word type usage bug sixteen seventeen eighteen seventeen eighteen moss nineteen two two two eight thirty twenty seven five five fourteen two two two eight estimate show figure two c estimate standard show figure two able recover true underlie usage bug quite cleanly hand standard unable separate identify bug either mix usage simply duplicate usage toy example clearly show superiority standard set real program perform well toy example real program order magnitude complex apply feedback report four buggy c program detail appear table one bug moss four program use real directly derive code test input among reasonable input program failure define crash produce output different reference implementation bug provide grind truth bug actually trigger give run experiment use test suit supply sir repository eighteen moss test generate use randomly select command line flag input feedback data nonuniformly sample program execution prior work five experiment use symmetric use program set b one nonzero f five encourage sparsity number program choose accord domain expert advice number bug program set equal number distinct bug know manifest goal characterize bug single topic number usage nu program choose approximately correspond number different program use case example use seven different command line flag correspond different program operation therefore natural model program usage pattern seven different usage table one give number usage bug use program program chain run estimate moss inference step take less one hour run possible compare result correspond measure two statistical refer work al five use iterative process select eliminate predicate explain approach bear resemblance likelihood ratio test bias cover somewhat ad highly specialize refer work al eight take inspiration approach use graphical model estimate complete count apply iterative collective vote scheme follow simple cluster pass identify report likely bug cause bug topic analysis show capable recover bug correlate well underlie bug note fail run bug topic call b view bug representation fail run plot fail run b space program figure three ad use different mark fail run grind truth bug type case moss project b space three dimension visualization use principal component analysis plot show actual bug type tend cluster along ax b mean often bug topic map unique actual bug type run exhibit multiple b consistent map bug actual bug observation could use focus run figure three e compare quality cluster give analyse analysis compute rand index twenty cluster base analysis respect grind truth determine oracle rand index one indicate cluster identical grind truth lower indices indicate worse agreement assign fail run cluster bug topic among bug cluster possible may produce better cluster method dominate consistently perform well bug topic analysis discuss extract rank list suspect word potentially buggy program bug topic qualitatively evaluate usefulness list find root cause bug overall find perform equally well rest mathematical foundation potentially support variety important task parameter specify p word w may large p simply frequent word instead examine p easily obtain use bay rule furthermore define confidence score j mink p z j p z j topic z present word rank score j j less zero indicate word j predictive topic present word hand j high consider word j suspect word likely bug explain topic lieu formal study outside scope paper informally assess expect usefulness list bug bug b bug c bug moss moss bug e rand index fig three recover bug highly correlate actual bug hunt programmer compare result analogous list build use mention two bug cleanly separate two bug topic list suspect word short four six relevant one bug list include clear smoke gun immediately reveal root bug topic include less direct secondary effect root problem perform well bug however word list naturally restrict word j zero intuitive cutoff point thus list include word analysis nineteen risk overwhelm irrelevant information subjective experience first five ten suspect program list immediately understandable programmer unlikely search struggle well cluster use report nineteen word without good separation group cluster use offer short list describe one bug three time omit bug entirely moss result vary quality bug bug overall find bug correspond directly individual moss bug word often identify either primary smoke gun cause failure else closely relate secondary effect initial misbehavior perform better nine fifteen seven seven twelve run bug worse analysis identify least one smoke gun miss cluster produce identify smoke gun one bug miss however report thirty cluster eight actual moss bug several bug split among multiple cluster therefore present redundantly result equivocal identify informative precondition one bug though smoke gun otherwise three identify word strongly associate bug immediately reveal bug root cause truly model causality therefore surprise root cause may difficult recover furthermore case smoke gun actually among word instrument consider model feel three model perform well reasonably expect give raw data overall find approach perform roughly equally well guide root cause bug however highly specialize somewhat difficult reason formally example whereas rank word use conditional compute harmonic mean score effective simple interpretation either machine learn term quantitative measure expect program behavior assert mathematical foundation potentially applicability see section five furthermore even within domain statistical model use support important engineer task contemplate approach suppose example one task fix bug associate particular bug topic repeatable test suite available case one would prefer investigate run weight bug topic high compare weight bug run would likely pure bug another example prior work show automatically construct extend multiple suspect program point offer model whereby aggregate score along give sensible probabilistic interpretation yet explore alternate use detail hint power statistical approach theory highly effective practice usage topic analysis information glean usage might support variety engineer task characterize usage topic examine word highest probability condition topic word associate source code immediately adjacent instrumentation point find many case usage correspond distinct usage program describe detail since deflate algorithm implement public domain likely familiar many machine learn community recall deflate algorithm consist two step duplicate string elimination bite reduction use cod usage topic small number highly probable word much number significantly less probable probable word far topic one associate inner loop underlie procedure duplicate string elimination step algorithm infer topic one highly associate step expect run high p z value use algorithm find redundant string best compression expense run slowly case twenty highly probable word topic two associate command line handle exit cleanup code run p z relatively high compression occur instead example help message version message request twenty probable word topic three several associate several several infer usage topic associate fast deflation algorithm simple duplicate string elimination run p z highest invoke flag explicitly call fast algorithm associate four five less pronounce topic four seem capture output activity include highly probable word well highly probable word associate duplicate string elimination algorithm topic five seem capture bite reduction mode word utility function use shift far probable five discussion continue release bug end suffer however statistical model apply instrument feedback data help repair show promise statistical model strong empirical result sound mathematical foundation future suggest incorporate domain knowledge automatically identify number bug another direction endow complex topic structure similar hierarchical arrange tree however hierarchical provide mechanism control outcome flag topic availability model could exploit interest structure inherent problem domain static program graph note need restrict statistical example may apply text sentiment analysis distinguish subjective sentiment positive negative equivalent bug much objective content movie domain movie plot actor equivalent usage movie domain mix document collection may consist movie review contain sentiment content formal movie contain mostly objective content reference one p rosin j b statistical use compound predicate international symposium test analysis unite kingdom two w find cluster analysis execution proceed international conference profile computer society three lam track bug use automatic anomaly detection two proceed international conference engineer new york press four empirical evaluation tarantula automatic technique ase five proceed international conference engineer new york press five b naik ax jordan mi scalable statistical bug isolation proceed conference program language design implementation june six c yan x fei l han j sober statistical bug local gall h seven ax jordan mi b statistical sample program l b nip sixteen press eight ax jordan mi b naik statistical identification multiple bug nine probabilistic latent semantic analysis uncertainty artificial intelligence ten ay jordan mi latent allocation journal machine learn research three eleven find scientific proceed national academy one twelve l p hierarchical model learn natural scene conference computer vision pattern recognition thirteen b bug isolation win thesis doctoral competition volume lecture note computer science springer fourteen b bug isolation project fifteen r bay factor journal statistical association ninety sixteen tag parse library seventeen h support control experimentation test infrastructure potential impact empirical engineer international journal ten four eighteen g h repository nineteen winnow local document fingerprint proceed international conference management data san june new york press twenty rand objective criteria evaluation cluster journal statistical association lim j b path optimization program application p symposium program springer march jordan mi hierarchical topic model nest restaurant process nip sixteen pang b lee l sentimental education sentiment analysis use subjectivity proceed association computational base minimum cut linguistics