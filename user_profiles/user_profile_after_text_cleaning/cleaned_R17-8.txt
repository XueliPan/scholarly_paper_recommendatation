n h p h r n c r p n h p h r n c r p n h p h r n c r p public access author manuscript j parallel program author manuscript available may nine publish final edit form j parallel program two system efficient execution scientific distribute tony pan tony pan department computer science federal de brazil department state university oh one one abstract scientific introduce response demand several science need process analyze increasingly design largely base observation data analysis compose network data work present support system design facilitate type computation distribute compute system optimize efficient management retrieval data data process data movement intermediate result critical challenge issue experimental evaluation system show linear achieve sophisticate implement network multiple data process scientific parallel compute one introduction data analysis significant activity almost every scientific research project challenge design implement support efficient data analysis many mainly due scientific generate reference large large often generate large scale experiment long run one example large project cern start year project expect generate raw data scale four large underground particle every year one project like grid two implement able process help experiment analysis scientific three four five six introduce scientific analysis data research support part national science foundation grant bisti board n h p h r n c r p n h p h r n c r p n h p h r n c r p al page two centric model process network seven data analysis describe direct graph nod represent application process direct edge represent flow data exchange distribute like cluster collection cluster provide viable efficiently store large execute data process scientific system user able describe create base task want execute arrange network data base application data process semantics run network large data cluster storage computation nod scientific also support component reuse word component may part specific also reuse another application example data analysis image analysis application show figure one example involve analysis digital microscopy slide study phenotype change induce genetic figure see four different task image analysis apply sequence slide summary challenge design support process large one store query manage large distribute two manage input output data schedule monitor execution distribute environment three optimize reuse different propose develop anthill system eight system base program model originally propose active disk nine address issue execution scientific anthill filter represent different data process data analysis structure stream abstraction communication filter use framework implement set filter network connect use stream create task parallelism pipeline execution multiple copy filter allow every stage pipeline replicate result data parallelism work eight demonstrate efficacy efficiency anthill data mine task paper report result effort extend functionality anthill include one program maker component build dynamically share description file two persistent storage layer provide support management associate storage query input intermediate output three storage cache layer design improve performance data store retrieve persistent storage layer persistent storage layer build ten framework distribute storage management query data element data instance design set loosely couple service data model data instance document enable use store query data heterogeneous present paper generic sense apply range experiment show incur low overhead execution j parallel program author manuscript available may nine n h p h r n c r p n h p h r n c r p n h p h r n c r p al two relate work page three three extend anthill framework chimera eleven project develop virtual data system represent data derivation derive data explicit data provenance information use application regenerate derive data approach focus store partial data result store large amount information data derivation able efficiently store generate pipeline stage twelve create virtual data system save information data derivation derive data use chimera also map chimera abstract concrete dag thirteen execute five six system provide support web service base author show composition base notion actor orient model first present fourteen interest management problem however directly address problem integrate execution data management retrieval system construct support efficient access data store distribute scalable execution integrate manner fifteen provide access computational hardware distribute across network support share available network create infrastructure call share implement available feature include support load balance across computational architecture extend anthill system show figure two compose two main part program maker environment first part allow store share data process repository provide generate base share repository environment design support analysis data intensive environment divide distribute manager distribute data storage persistent storage system manager work data manager execution store information read write application fly also responsible decide demand portion input data process filter note execute distribute fashion across multiple machine centralize entity data storage subsystem work intermediary application persistent storage management system base provide basically read necessary data store output component use framework ten expose virtualize data allow ad data store federate management exist distribute system also provide efficiently save partial result without introduce synchronization application environment proceed detail implementation design achieve scalable efficient execution distribute heterogeneous program maker component tool allow incorporate exist program system accomplish task create additional code stage pipeline support execution program dynamically j parallel program author manuscript available may nine n h p h r n c r p n h p h r n c r p n h p h r n c r p al page four share program maker divide three part share repository program filter maker share framework data analysis create dynamically program develop repository component enable management function store search application process use support efficient management query repository implement use ten user interact repository via three basic search program first operation require creation describe compile code implement document contain information necessary identify type data program able work data structure use serialization function need apply input output program also include additional information system particular program library hardware platform second operation search use perform query search store program access relate store element last operation receive reference compile code library repository store local directory program configuration file represent document entire data process pipeline application divide four section placement layout use describe machine available environment use determine application placement use declare comprise particular application library locate number instance create component layout define associate connection data buffer exchange two connection direction communication use provide information framework need able execute give component information use find library component code come number type pass return component data transformation function need call input data component filter component receive program configuration file execute describe file generate source code connection filter application component declare configuration file well require compile link entire application user define environment variable point directory store filter maker subsystem determine location link connection filter wrap application specific data process component execute properly high level definition connection filter give algorithm one execute loop read data input stream de j parallel program author manuscript available may nine n h p h r n c r p n h p h r n c r p n h p h r n c r p al page five serialize pass application component code invoke process method proceed serialize output generate application component send next filter environment environment show figure two divide three main execution support system responsible program management system responsible manage entire execution persistent storage system execution support component implement top anthill eight responsible distribute manage communication anthill base program model mean environment decompose set filter communicate stream execution time multiple instance filter spawn different nod distribute environment achieve data parallelism well task parallelism extend anthill provide transparent communication application management system provide support exchange information across application information include instance filter available data process document process management component divide two manager data storage work data manager entire execution maintain information data involve application execution either read write execution initiate receive query sixteen specify input relay query instance persistent storage manager build list match document associate document list go three different state execution progress process state apply document compose input begin execution mean available process process input document send filter status well document send across filter create process one filter process document mark process process filter result store execution responsible assign document filter data partition do demand time filter read input data request receive goal always assign local document filter work intermediary application filter persistent storage manager implement filter multiple machine base user configuration system always try filter request data answer local local give filter another one assign filter system j parallel program author manuscript available may nine n h p h r n c r p n h p h r n c r p n h p h r n c r p al page six filter request data execution request pass local assign one act pretty much cache system relay request unavailable data several instance distribute across available machine work independently mean multiple instance read different portion data simultaneously similar classic parallel io approach except top distribute task save intermediate result also execute save data send stream execution create fly distribute stream store data exchange give stream document behave like cache mechanism release application code wait io operation complete case read multiple write execute parallel persistent storage use ten persistent data storage manager employ mako service store data use mako provide platform distribute storage data document data create data store index query efficiently use data expose environment data service use access mako instance network carry data storage query retrieval communication implement filter communicate rest support transparently application component concern receive input data process generate output figure three illustrate internal communication structure across several infrastructure use stage pipeline image process application describe later see figure seven example see figure two filter involve stage color classification tissue segmentation fairly standard image analysis figure three detail communication within case read operation assume first filter color classification read next image process start message application filter request next document operation invoke request local instance available document process receive id document potentially available locally information serve original requester data may need query data available already figure three b illustrate communication protocol write slightly complicate protocol color classification code output data filter first create ie document use create document local instance data send one filter next use stream infrastructure within anthill filter receive end get data create local copy data pass application code copy data store locally notify local instance local data copy sender instance data successfully receive prompt change change state process input document generate particular output document eventually move data memory happen background application penalize j parallel program author manuscript available may nine n h p h r n c r p n h p h r n c r p n h p h r n c r p al page seven support filter image analysis study commonly use system script functionality provide environment quickly prototype evaluate also provide compilation functionality program compile share library executable develop support framework describe paper facilitate composition execution consist program compile share section describe create configuration file whose filter generate use compile code first three section configuration file placement layout consecutively use describe available machine filter pipeline connect filter filter automatically generate compile share add extra section configuration file section mark section filter specify analyze section configuration file system determine filter correspond share input output filter point generate filter code call function figure four show file translate filter configuration file filter tag create tag contain follow two attribute name name filter use compile code name share library function implement filter locate function use filter also declare do use function tag attribute tag header name function number use output reference number use input output number use function input finally argument function specify use argument tag tag follow attribute type argument use know variable initialize user line message similar index variable c program call identify location input receive order order function call output argument identify serialize function use pack data output name library contain serialize function input argument inform function use unpack data call function implement filter j parallel program author manuscript available may nine n h p h r n c r p n h p h r n c r p n h p h r n c r p al page eight name tha contain function identify order serialize function must call user provide serialization function also develop suite function common data type example configuration file compose filter give figure five four application example application overview section briefly describe example application map use tool available framework example application use digitize microscopic image study phenotype change mouse placenta induce genetic handle segmentation image compose mouse placenta correspond three tissue layer labyrinth glycogen describe seventeen divide application six stag see figure six map four expensive stag basic description four stag separation image convert color space color space combination color channel get foreground tissue histogram normalization image correct color process consist three compute average color image select one image color normalization target generate histogram red blue green channel color classification image use classifier classification put one eight different dark nuclei medium intensity nuclei light nuclei extra light nuclei red blood cell light cytoplasm dark cytoplasm background tissue segmentation step use classifier tissue one three tissue type labyrinth glycogen rest section describe developer implement application use system main work integrate application system consist construct section program configuration file describe entire data analysis pipeline application see section section user describe detail filter perform application specific data process function due space elaborate format configuration file say document contain detail description application filter information require automatically generate filter j parallel program author manuscript available may nine application filter n h p h r n c r p n h p h r n c r p n h p h r n c r p al application page nine five experimental result composition phase user need specify filter connection information part placement layout section program file information specify user call script program query identify data store manage process example application input need stage three output stage two clear data dependency execution stage two framework create new data fly across available machine store output data relate use stage three input stag two three complete execution stage four execute framework take care store output stage stage six data stream two application filter figure seven show stream dot arrow arrow represent optional efficient stream storage mechanism feature allow storage partial result execution facility use restart execution last set store partial result section evaluate implementation example image analysis application develop use framework describe paper experiment run cluster twenty connect use fast switch node processor two main memory run operate system evaluate implementation use image create digitize section mouse placenta describe seventeen size whole store run one mako service instance storage node distribute image across multiple mako nod fashion experiment one machine one instance one machine figure eight show experimental evaluation separation stage number illustrate good system achieve almost linear see figure eight b figure eight detail execution time show result show execution time dominate time spend process function figure nine show result histogram normalization stage stage use image associate image mask input execution time use two machine second almost linear figure nine b show last ex pensive stage color classification tissue segmentation stage execution time use two machine second almost linear figure ten show performance system partial result stage save system figure execution time last stage application show partial result color classification filter save save system see figure overhead small less five average j parallel program author manuscript available may nine n h p h r n c r p n h p h r n c r p n h p h r n c r p al page ten six conclusion future work reference paper present system anthill efficient execution scientific distribute new create stub anthill filter also call connection filter automatically high level description give application component filter run user code simple interface order provide data management low overhead use infrastructure support also build set anthill filter communicate among transparently user code experiment show implementation use execute sophisticate multiple almost linear mean system impose little overhead next step work toward build robust dependable system fault tolerance important environment large number machine process run time plan use efficient data management present paper store data allow resume execution data one cern large two soda n grid architecture data intensive compute international symposium cluster compute grid three kola j disc system distribute data intensive scientific compute proceed first workshop real large distribute four san ca four hastings pan k r j support distribute execution scientific record five c jaeger e b mock extensible system design execution scientific conference scientific statistical management island june six b c e lee e tao j concurrency computation practice experience special issue scientific scientific management system seven lee park process network proceed may p eight r w l b g r g anthill scalable environment data mine symposium computer architecture compute nine j active disk program model evaluation eighth international conference architectural support program p ten hastings distribute data management integration framework project global grid forum eleven semantic grid workshop computer society p eleven foster chimera virtual data system represent query data derivation international conference scientific statistical management two j parallel program author manuscript available may nine n h p h r n c r p n h p h r n c r p n h p h r n c r p al page eleven twelve e j c g k r map abstract complex onto grid journal grid compute thirteen jam foster steven computation management agent proceed tenth symposium high performance distribute compute press fourteen project department us fifteen h j network enable server solve computational science international journal sixteen mary f kay path language world wide web consortium august seventeen pan tony c virtual mouse placenta tissue layer segmentation proceed annual international conference engineer medicine biology society j parallel program author manuscript available may nine al page twelve figure one example application n h p h r n c r p n h p h r n c r p n h p h r n c r p j parallel program author manuscript available may nine al page thirteen n h p h r n c r p n h p h r n c r p n h p h r n c r p figure two framework j parallel program author manuscript available may nine al page fourteen n h p h r n c r p n h p h r n c r p n h p h r n c r p figure three communication protocol inside support j parallel program author manuscript available may nine al page fifteen n h p h r n c r p n h p h r n c r p n h p h r n c r p figure four sample group filter use j parallel program author manuscript available may nine n h p h r n c r p n h p h r n c r p n h p h r n c r p al page sixteen figure five sample configuration file consist filter j parallel program author manuscript available may nine al page seventeen n h p h r n c r p n h p h r n c r p n h p h r n c r p figure six mouse placenta application j parallel program author manuscript available may nine al page eighteen n h p h r n c r p n h p h r n c r p n h p h r n c r p figure seven mouse placenta application j parallel program author manuscript available may nine n h p h r n c r p n h p h r n c r p n h p h r n c r p al page nineteen figure eight dissection execution time stage b value j parallel program author manuscript available may nine n h p h r n c r p n h p h r n c r p n h p h r n c r p al page twenty figure nine histogram color classification stag j parallel program author manuscript available may nine n h p h r n c r p n h p h r n c r p n h p h r n c r p al page figure ten color classification tissue segmentation test j parallel program author manuscript available may nine al page algorithm one application filter data process read data data process write output serialize write output end end j parallel program author manuscript available may nine n h p h r n c r p n h p h r n c r p n h p h r n c r p