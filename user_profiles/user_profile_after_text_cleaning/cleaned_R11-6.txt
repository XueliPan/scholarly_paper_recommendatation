international conference data engineer international conference data engineer evaluate query business process milo university milo abstract business process consist business undertake one pursuit business goal tool query analyze extremely valuable company allow optimize identify potential reduce operational cost particular give specification identify execution flow likely occur practice satisfy query criteria crucial various address need introduce paper notion likelihood execution flow study query evaluation find k likely match query analyze complexity query evaluation context present novel compute query result knowledge first paper study query evaluation introduction business process short collection logically relate combine flow achieve business goal usually operate distribute environment implement fairly complex simplify development common practice provide high level description operational flow use standard specification language one automatically generate specification since logic capture specification tool query analyze extremely valuable company two allow optimize identify potential reduce operational cost simple example consider travel agency analyzer wish examine execution flow may issue query point flow user ask relay credit card detail ways may one reserve travel package contain flight hotel do particular company say typical query engine give input specification execution pattern interest identify among potential execution flow structure specify pattern two three note however total number qualify execution flow may large even infinite presence recursion among qualify flow typically interest particular give specification identify execution flow likely occur practice satisfy query criteria crucial various use instance adjust design need certain user group personalize provide appeal package deal instance say obtain popular execution flow contain reservation one first search package contain flight eventually book flight without reserve hotel result may strongly imply combine deal suggest unappealing specifically interest deal refuse present address need analysis introduce paper notion likelihood execution flow study likely match query evaluation query analyze complexity query evaluation context present efficient query computation best knowledge first paper study query evaluation contribution twofold first present simple generic probabilistic model allow describe possible execution flow give presence different sort dictate course execution distinguish several class likelihood function execution flow process accord level dictate execution course user server state model extend model two three probabilistic context model abstraction business process execution language one standard next consider query query language consider select execution flow interest use execution pattern two study problem identify give query execution flow highest likelihood satisfy query analyze complexity query evaluation various class likelihood function show practically common class problem efficiently solve focus particular practically common class likelihood function namely function intuitively function likelihood choice depend bound number previously make second contribution paper novel algorithm compute execution flow conform query presence likelihood function short version paper summarize main reader refer four full version contain exact detail along experimental study relate work give next brief review relate work refer reader four reference probabilistic five six probabilistic relational model seven allow representation uncertain information consider relational data capture dynamic nature flow possibly unbounded number recursive possibly dependent term possible semantics number model infinite rather large yet finite dynamic set call dynamic eight allow practically efficient probabilistic nine ten bear resemblance model data graph tree shape allow probabilistic however model complex first represent nest dag structure rather tree entail intricate second potentially infinite number nest dags represent due possible recursive call assume description likelihood function readily give focus several previous work see eleven twelve outside scope work paper organization section informally define model notion execution flow section present find execution flow conform query conclude section start review informally main dis cuss paper business process business process abstraction standard specification process show merit via example follow example business logic travel agency give figure one describe process nest dag direct acyclic graph consist nod link edge link detail execution order activity represent pair nod first background stand activity activation point second completion point edge represent execution flow multiple edge go single node stand parallelism hence dag structure may either atomic like login activity compound like start ravel f light latter case possible internal structure call implementation also detail dag depict bubble lead nest structure instance start activity user may choose three possible ways usage set usage search travel ravel activity invoke three possible f three f four f five implementation guard guard formula case test value variable value may either flight depend user choice exactly one implementation choose determine fig one business process fig two rank implementation truth value guard determine turn user choice focus f three implementation f light activity set possible correspond ba stand air al aer last activity allow option reset go back f two alternatively confirm cancel execution flow execution flow actual run instance business process may abstractly view nest dag contain represent activation completion edge represent flow implementation among along record guard correspond choose compound activity nod figure two depict example execution flow travel agency process user choose search travel choose search finally make reservation consist ignore number annotate different edge denote dash connect activation completion nod compound start end nod choose implementation likelihood define two sort likelihood function one function determine likelihood different implementation two function determine likelihood flow recall execution flow correspond unique sequence implementation take throughout execution define flow multiplication value along execution function receive input guard formula partial flow represent history ie flow thus far intuitively function simple local ie fact function guard formula solely function formula along small amount history affect value capture notion define three class function decrease level simplicity function memoryless formula f two partial flow e e f e f e mean independent memoryless memoryless function class class example example independent annotate figure two correspond flow compute nine six four seven five bound memory function general realistic class function capture common case give choice may depend execution history bound manner intuitively bind b maximal number past make activity affect likelihood choice point execution give implementation take last b activity likelihood every implementation choice indifferent make past example consider example execution flow depict figure two b note likelihood different search type depend upon precede first likelihood flight search type eight give user unsatisfied result choose reset likelihood make choice decrease three give flow however entire history know point thus computation value obtain value along flow nine three seven five seven function exist function fall category refer general example consider scenario likelihood hotel choice depend exact number reset previously choose unbounded number activity name must know likelihood computation practice scenario rare see thirteen query syntax semantics query language use borrow two query define use execution pattern whose structure similar execution flow pattern edge may mark transitive seek path connect edge rather single edge similarly composite nod may mark transitive seek possibly indirect evaluate query specification search execution pattern execution flow represent embed homomorphism nod edge pattern nod edge flow match fig three query nod activity name coincide composite atomic nod map composite atomic nod edge regular query map correspond edge trace pattern map correspond flow transitive edge may map contain flow edge transitive query nod may map indirect correspond flow nod example example execution pattern depict fig three transitively start search activity may follow number reset require reservation flight follow confirmation note nod edge de note transitive nod resp edge result give specification query q number k result q respect denote q define k likely flow embed q exist query evaluation turn describe result query evaluation general framework give function query q query result compute two step one first construct function flow set identical rename subset flow match q correspondingly identical two next depend type memoryless use apply particular algorithm generate specification whose set flow correspond exactly query result first step adaptation query evaluation algorithm give fourteen probabilistic set thus omit detail brevity focus second step namely find flow give specification respect give likelihood function different class b memoryless function case memoryless function able give efficient algorithm compute compact representation qualify flow theorem give memoryless function query q may compute compact representation q polynomial time data complexity proof sketch algorithm base follow lemma lemma every memoryless function compound activity one exist best rank originate contain another occurrence two exist j one th rank originate occurrence root latter one lemma imply search suffice examine finite number thus simple algorithm find enumerate compute pick note number examine naive algorithm may exponential size avoid examine use dynamic program approach materialize step essential front line flow also show unless p n p algorithm polynomial query size possible computation result first define decision problem give specification function query bind b decide existence qualify flow whose greater b theorem query size even memoryless function c function function pose challenge choice may depend number may show follow theorem function query q may compute compact representation result theorem give proof sketch general idea algorithm create give memory bound new new memoryless function essentially set flow apply algorithm proof theorem create memoryless function annotate activity name factor within name information require computation namely precondition vector include last additionally new name also contain necessary assure precondition assume happen algorithm polynomial k exponential unfortunately polynomial algorithm likely exist set follow theorem hold theorem give function query q size theorem prove reduction probability computation network know however pathological lead necessarily typical may optimize algorithm identify common case efficient process possible namely exploit conditional implementation experiment omit lack space show succeed achieve feasible execution time even specification query function last may show general function adhere previously discuss class computation result may possible theorem problem undecidable function proof omit reduction halt problem machine know undecidable conclusion paper study first time problem query evaluation study complexity problem various class likelihood function execution course develop efficient query evaluation possible class important result include adjust design need certain user group personalization enhance business logic intend study future research reference one business process execution language web service two c milo query business process three c milo monitor business process query four milo evaluate query business process extend version five n efficient query evaluation probabilistic six p sen represent query correlate probabilistic seven n l koller learn probabilistic relational model eight p weld dynamic probabilistic relational model nine p query update probabilistic information ten b match twig probabilistic eleven w van l mine discover process model event log data vol sixteen nine twelve r silva j j g probabilistic mine thirteen p l j e world wide web empirical world wide web vol two twelve fourteen milo type inference type check query execution trace