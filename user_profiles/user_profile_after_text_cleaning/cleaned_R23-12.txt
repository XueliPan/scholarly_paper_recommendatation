visibility algorithm convert mesh vector graphics university adobe figure one start model derive layer vector representation b introduce algorithm perform necessary number cut able spread arbitrary manifold model layer consistent way layer common many vector illustration package power illustrate various produce us c e output abstract often need import embellish model come vector graphics produce current automatic tend result best triangle soup often trace render describe method convert model layer vector respect visibility facilitate edit core contribution visibility method partition mesh large layer accord visibility object object form occlusion cycle represent layer without cut introduce new cut algorithm use graph representation mesh geodesic distance visibility vector graphics geometry process one introduction variety need create vector art give model follow gather informal survey vector graphics show need conversion enable edit example model build many create vector graphics illustrator typically choose viewpoint best suit scene convert model shade reference format e f visibility algorithm convert mesh vector graphics graph three article august eight page copyright notice permission make digital hard copy part work personal classroom use grant without fee provide copy make distribute direct commercial advantage copy show notice fi page initial screen display along full citation copyright work own must honor abstract credit permit copy otherwise republish post redistribute list use component work work require prior c permission fee may request two plaza suite new york one stylize manner characteristic architectural preview similar pipeline often use create mechanical explode view case also work layout diagram increase size important small part remove useless detail add contrast exist conversion design final step author pipeline generate mean edit result many need perform conversion manually either trace render work triangle soup produce simple projection spend tedious time recreate meaningful disconnect line organize depth layer case might possible create final illustration directly model li al li al al dedicate cover subset task illustrator paper address critical need convert mesh vector graphics focus visibility layer vector typically handle order layer separate occlude occlude object approach focus aspect produce illustration major difficulty layer object complex occlusion instance object always need spread several layer figure one show pass floor hence cut necessary even small detail like lamp leaf flower contain self need cut none could place single layer without cause consequently mesh need decompose main contribution paper decide part along line cut describe graph represent occlusion adjacency scene show occlusion cycle orient cycle graph ie cycle contain least one arc layer creation boil graph decomposition problem describe effective solution iteratively determine conflict graph solve cut mesh cut separate initially neighbor face hence remove cycle graph use bias geodesic distance mesh surface locate cut edit preserve much possible input layer produce technique b c e graphics vol three article publication date august demonstrate method diverse input simple object complex ask work use document produce algorithm result illustrate offer method eleven relate work variety deal vector content al review relate work possible beneficial create final illustration directly model instance al directly specify style model approach li al render explode view directly contrast address case need work vector graphics flexibility reason perspective work relate planar map however focus conversion layer creation whereas planar map flat structure figure three vector conversion illustrator lack accuracy lack layer structure figure four previous cull invisible part fix configuration reveal obvious b layer support c vector render model recently al al describe convert model vector graphics significantly different al focus contour line extraction al handle conversion stylization time besides overlay shade curve vector flat edit limit illustrate figure four al algorithm rely planar map contain information hide part unclear extend layer decomposition paper introduce follow render model vector illustration transform input mesh vector document organize depth layer respect input structure mesh analysis introduce graph let us us study visibility connectivity model compact discrete structure cut decide cut model use dis function surface two mesh decomposition accord visibility overview give manifold mesh without viewpoint create layer vector illustration decompose mesh part order respect visibility ie back front render yield correct image furthermore seek facilitate edit user want avoid polygon soup aim major difference traditional painter algorithm al operate polygon level however object might exhibit self occlusion fig group object might possible order accord visibility occlusion cycle al fig six case need cut mesh multiple ensure visibility order want avoid place cut place vector art might difficult handle user particular avoid coincidence cut contour separation front figure two depth peel give correct layer break object apart necessary even simple contrast algorithm decompose object necessary twelve hide surface removal transparency method order scene series sort depth relate render al al depth peel use render transparent object decompose scene sort depth render order yield final image correct visibility transparency work facet level focus resolve input scene break many illustrator standpoint scene structure lose example shortcoming show figure two propose avoid cut derive blend function solve occlusion solution use similar simpler occlusion graph structure resolve contrast create valid layer document mean edit respect scene structure also decompose model layer algorithm work mostly triangle level address render performance whereas analyze graph focus edit many exist topic al sun al commercial like swift render model image illumination separate since geometric lie layer input structure lose result document difficult edit figure three depth two layer two live trace layer b c e graphics vol three article publication date august figure five simple example graph construction first remove back face show middle view compute view map bottom project contour image plane view map obtain constant visibility b build graph nod undirected edge neighbor arc occlude occlude c orient cycle graph correspond layer involve use derive distance field help us deduce location necessary cut cut disconnect two conflict e eliminate cycle graph cycle remove layer become possible f surface complicate element selection navigation layer input viewpoint one remove part input mesh face away figure five overview algorithm use two data structure achieve decomposition view map al decompose mesh constant visibility constant number surface front behind fig sense solution problem like depth peel definition order strategy result excessive subdivision cut perfectly align contour want create place cut away contour also use graph data structure call graph nod constant visibility mesh graph first represent adjacency figure five c edge zero one one two follow mesh topology edge retain less disconnect appear final output call neighbor link adjacency edge adjacent sequence intermediate neighbor addition graph encode information visibility direct edge occlusion arc link project area view map edge go region viewpoint occlude region edge three one figure five c edge signify consequently call node occlusion arc call nod connect sequence arc respect orientation edge one cycle include least one edge indicate proper visibility order possible refer orient cycle cycle exist indicate adjacency mesh try maintain possible output give graph problem mesh decomposition accord visibility eliminate orient cycle graph split nod correspond cut mesh across correspond region relate painter algorithm need cut eliminate orient cycle except deal nonplanar object self occlude hence need create view map contour finally precise cut location base heuristic use distance notion mesh figure five end obtain decomposition input mesh small number two figure five e order yield correct visibility f algorithm proceed follow detail two compute view map input project mesh contour image plane input viewpoint view map define constant visibility mesh three build graph region node edge indicate either adjacency occlusion two four search orient cycle result graph correspond conflict require mesh cut describe method treat several orient cycle time five cut mesh eliminate select orient cycle graph cut line equidistant occlude occlude metric base geodesic distance curvature mesh six assign layer id foremost component create cut extract update graph iterate step four five six part mesh simplify layer view map capture change visibility compute view map project contour image plane viewpoint view map consist delineate project contour onto mesh define constant visibility gain intuition observe simple case point occlude another point b since occlude b two point line sight project point view map cell contain point obtain two b contain b respectively definition view map contour b mean entire region occlude entire region b show usefulness decomposition solve since visibility change within view map relate quantitative invisibility count object front point however representation equivalent since also take object behind account build view map construct view map constant visibility method inspire first detect contour model contour segment compute equation plane contain segment viewpoint face intersect plane compute equation constant visibility cut resolve final visibility algorithm convert mesh vector graphics graphics vol three article publication date august plane contain face project contour segment onto projection intersect face cut face along contour plane process make sure mesh remain manifold maintain mesh connectivity subdivide uncut face neighbor cut face robustness cut process address use small plane intersection test carefully treat vertices distance contour plane threshold supplemental material construct algorithm region necessarily cut contour assign region id unlabeled face propagate reach cut boundary start new propagation new unlabeled face id graph graph summarize adjacency occlusion region constant visibility node graph two neighbor create undirected adjacency edge possible preserve model structure assign layer occlusion arc add use ray trace ray shoot region center add arc successively intersect region pair create layer must ensure nod link occlusion arc different layer simple example input model figure five bend cylinder project alpha occlusion occur cylinder pass top view map four two end center overlap part view map generate five one cell except overlap cell give pair number zero four undirected edge neighbor create chain zero one two three four arc three one represent pair put object single layer without overlap orient cycle one two three one indicate conflict since mean one two three connect component contain occlusion follow section discuss case detail find conflict use graph two main reason cut input mesh object occlude need separate break connectivity case occlusion cycle three bar figure six order depth graph case correspond configuration orient cycle orient cycle graph layer possible without cut model mesh component define adjacency put one layer partial order induce occlusion arc use sort layer orient cycle input model figure six respect layer arise self occlusion cycle produce chain object occlusion cycle resolve case cut graph term cut split node orient cycle graph add adjacency edge nod whose correspond mesh neighbor separate cut formally objective split nod orient cycle eliminate bend cylinder figure five cut node two link link one three neighbor cut two layer zero one three four figure seven minimize number cut lead unnatural leave comparison heuristic yield satisfy layer right problem relate seek remove minimal set edge nod remain graph acyclic graph know problem equivalent remove nod split use input geometry determine graph adjacency cut also notion hard define case cut region minimization yield shape see figure seven motivate use create layer figure eight summarize approach function input graph g mesh zero extract strongly connect g strongly connect component g g one choose node number occlusion arc g two create cut mesh break orient cycle create set r contain adjacent neighbor b mesh compute equidistant curve c tween r occlude c cut traverse c produce mesh split correspond nod g update adjacency g three create layer contain create selection l adjacent nod g b assign layer id l remove l nod g four g empty call g figure eight create layer since concern cycle restrict strongly connect maximal set nod two nod connect since nod cycle connect always contain within single component work within optimization let us us deal smaller graph step zero first process region occlude number occlude step one heuristic base intuition region involve many cycle since occlude many strategy similar heuristic propose find feedback set region region occlude hence also maximum difference number outgo edge occlude number incoming edge criterion select occlude region search process simultaneously step figure nine show handle one one single solution two e graphics vol three article publication date august produce unsatisfying layer select next prevent superimpose due cut align contour compute cut line detail next section separate occlude occlude step split cross face update graph accordingly edge across cut undirected adjacency edge neighbor mesh step use algorithm extract portion model delineate cut contain occlude region select step assign new layer id correspond mesh face remove graph step face remain current component start layer creation algorithm remain graph step four figure nine two bump already lead interest layer problem treat conflict graph c independently lead undesirable cut b diffusion solution explain section treat many conflict improve cut e select separate cut model gain intuition first consider compute geodesic distance occlude occlude region set locate equidistant point cut model along boundary cut separate break cycle run boundary distance mesh approximate along edge compute distance every vertex nearest occlude occlude use algorithm base priority queue vertex store marker indicate whether region cut place two front meet model yield satisfy cut despite path approximation regular quad mesh random triangulation subdivision help geodesic distance may always yield satisfy line problem find good line model largely study context mesh segmentation al line draw al al cole al several propose one another perform better depend consider model weight less w x one one n x one test latter perform better result obtain come fact often thin elongate akin bend cylinder fig five weight w exaggerate distance along feature create wiggly contrast w attenuate distance along feature cut generate smoother figure ten contour induce layer smooth cut separate tangentially meet conflict diffusion initialize cut must join contour surface obtuse angle since surface also view edge point cut extend contour continuity al general distance diffusion process lead smoothly delineate extract layer figure eleven figure eleven simple case show behavior cut extract face occlusion flatten layer face set receive layer id cut graph acyclic sort layer depth use topological order reduce number layer layer receive new id equal maximum id plus one hence pair assign id layer share id merge create vector representation layer extract boundary walk face obtain boundary project apply optimization press al convert obtain prevent hole neighbor decompose maximal length face side layer id convert independently ensure boundary two represent spline support object hole group single compound path interior exterior correctly define wind number feature common vector edit package also find useful output separate contour ease application style three result cut model create final output figure ten penalize curvature often lead fuzzy leave opposite quickly isolate part conflict propagate frontier respect feature right strategy weight metric direction point x factor w x consider two first one place weight high curvature point w x n x n denote normal curvature x direction v second one performance test algorithm number polygonal model performance statistics find table two prototype able convert model moderate complexity vector graphics computation cost dominate ray cast use acceleration structure note relatively low number final layer important facilitate task edit vector document one limitation approach mesh represent polygonal soup mesh repair conflict cut b c e visibility algorithm convert mesh vector graphics graphics vol three article publication date august apartment fig one elephant fig thirteen car fig fifteen alien fig sixteen nod occlude fifteen sixty fifteen one nine edge direct cut seventeen four four two sixteen eight table one statistics number nod total occlude occlude occlude occlude number edge total direct number strongly connect number nod number cut algorithm figure twelve original model transform layer representation b output transform example c original input rich enough finish entire illustration fifteen scene number face cycle removal layer graph creation final visibility layer apartment elephant car three fifteen table two performance graph creation dominate computation due miss figure thirteen stylization take five ten turk could use algorithm ensure mesh connectivity feedback ask work document create recruit research participation mail list receive small compensation time work edit illustrator ask modify document along create educational illustration create architectural draw give supplemental material supervise observe draw beside theme illustration free draw want answer short questionnaire experience figure one twelve fourteen fifteen show return edit range simple change color shape fig fourteen complex layout design fig one sophisticate inclusion fig fifteen level complexity edit demonstrate result usable advance edit task addition receive comment globally positive show figure fourteen example professional ask create annotate illustration find follow layer handy order quickly select modify group shape like arrangement nice flexible match usual work flow use layer especially work content also nice order layer would nice see generate content layer helpful make create depth easier exact since use exist element trap clip object place layer helpful distinguish various section figure personally rely heavily layer adjustment use work understand benefit never get habit use old habit die hard guess last comment particularly interest describe usage layer expect also receive less positive comment mostly relate usage illustrator instance participant know reduce number control point slow main criticism one participant number layer large complex apartment suggest create hierarchical layer future work interest observation none five comment position cut line show motivation make quickly accessible avoid cut contour seem valid criterion bone input b layer c illustration artist illustration three ninety e graphics vol three article publication date august four summary present method convert model vector graphics approach generate document structure visibility layer informal user study show document address need help create compel result even though focus static image method also helpful animation adobe flash see video figure sixteen thank graphics group adobe creative lab insightful comment toy organize user study lionel help text viewpoint eme corp model acknowledge research new faculty fellowship sloan fellowship generous gift adobe work support cluster excellence multimodal compute interaction figure fifteen upper leave illustration create automatically upper right show version edit one author take twenty include conception design note able reveal back wheel hide initial view bottom illustration do professional artist use extract clip figure sixteen simple vector animation use initial pose leave reference notion quantitative invisibility machine render proceed national conference p dynamic planar map illustration graphics three proceed g tal mesh segmentation comparative study proceed shape model international cole f h people draw line graphics three proceed suggestive contour convey shape graphics three proceed e h hart j c stylize vector art model region support computer graphics forum four proceed symposium render e f f render style line draw proceed symposium render press c proceed break barrier workshop computational aesthetics graphics visualization image f e h apparent ridge line draw graphics three proceed r l b j lee j c p l j f draw stroke directly model graphics three proceed v optimization thesis royal institute technology li w l curl b interactive cutaway complex model graphics three proceed li w curl b generation interactive explode view diagram graphics three proceed transparency implement virtual map technique computer graphics nine four e r g l solution hide surface problem proceed national conference f turk g simplification repair polygonal model use volumetric vis graph nine two h p j diffusion curve old ticket entry ace motor speed output use clip vector output visibility algorithm convert mesh vector graphics graphics vol three article publication date august vector representation image graphics three proceed press w w b numerical c university press visibility layer decomposition senior thesis university algorithm design manual springer j j visibility sort posit without split image layer proceed e hart j c clip art render smooth visualization computer graphics fourteen one sun j liang l wen f image use optimize gradient mesh proceed e r f characterization ten compute survey render spark plug diagram illustrator specify label layout style example symposium user interface technology e graphics vol three article publication date august