distribute multiplicative tool multiply ability user perform useful work also multiply ability make mess consider follow common scenario user submit one million job system consist work job time system report completion however user unhappily discover large fraction job fail would even begin sort mess merely academic exercise regular large distribute accustom particularly development stag system example seven report thirty percent failure rate job unexplained type occur large scale many different failure difficult disentangle first give job may necessarily compatible arbitrary machine obviously job require particular operate system subtly may aware particular job require certain tool operate system may due administrative rule cluster might adjust user may deny access previously available finally due pure chance cosmic ray disrupt store value program crash author propose data mine apply problem large scale job consume annotate structure information relevant success failure classification use find correlate success failure job example ideal would report user something like may use automatically avoid make bad placement waste time hasten note form data mine explain happen panacea make attempt diagnose fine detail propose user correlate success failure tool may apply extract cause rather data mine allow user large system rapidly make improve throughput reliability system without engage low level may use later leisure locate repair addition problem distribute unique dynamics lend compel application data mine research standard might directly applicable large dynamic evolve system desire implement capable incremental adaptation goal paper serve identify compel future research create proof concept idea analyze job submit active condor nine pool machine wide variety several active apply data mine must use information available pool determine attribute experiment must perform validate data mine useful distribute condor make use fifteen describe job structure way need add additional gather instrumentation example figure one represent fragment job machine course job machine many name owner arch always apparent interest user configuration job machine seventy describe range vital command line mundane time since last construct tool capture information provide machine convert dynamically feature space base translate field separate dimension space allow many descriptive machine size memory available owner cluster see nonobvious play interest role process generate attribute space need proceed construct set control experiment failure failure condition unambiguous enable verification data mine capture proper failure condition test concept control fashion construct batch job fail know ways simplify define mean although may detect many mean job complete extract feature capture pair job machine along indication success failure apply two data mine fourteen decision tree among popular data mine employ induction algorithm tree construction use supervise learn prone without properly tune prune still capable generate highly accurate model ripper four rule base data mine method expensive much noise tolerant method use incremental prune reduce error adopt approach remove train establish rule via recursion experiment show ripper amenable distribute produce accurate model evaluate functionality offer data mine implement follow four different simulate failure one fail give operate system two fail give os insufficient disk space three fail give os probability three fail randomly fifty probability figure two show response simulate case ripper produce compact rule produce classification tree example may see figure three case one predict job fail run always associate os pool case two find sufficient disk need run job capture property rather os particular pool machine match condition three ripper find condition likely lead success arch even though failure rate still high finally four demonstrate random still result unexpected chance ripper find robust method rule learn figure three depict decision tree learn third simulation useful demonstrate elegance rule versus tree interest result classification produce result even though result may consider case two even though classifier identify machine base disk memory may use future machine selection order avoid fact correlate actual failure reasonable tool may observe modify job run course assume membership pool change consider case one propose always fail current pool contain machine machine add pool incorrectly go unused machine add job fail case four present danger job fail randomly due factor capture instrumentation naive unnecessarily restrict set machine use apply multiple time set shrink machine available use approach initial result real job promise evaluate several job previously run pool ripper identify eighty failure rate machine less ten disk eighty success rate machine greater ten information hand explore individual machine less disk space discover condor crash unusual way large output file consume space adjust job avoid machine may avoid continuous crash make available intend deploy tool gain experience base result believe via data mine must activity spirit autonomic compute run forget must continually monitor productivity system make order deal challenge change system mention must periodically system sense pose control theory problem output signal must keep within certain apply control delay imprecise effect thus far employ discuss ripper construct model use set train data manner set rule construct original train longer apply new record bear future however description clearly entail approach postpone generalization query case user request grid match give program pool machine therefore set information available inform lazy learn include nearest neighbor future study data mine assist consider type approach however one disadvantage lazy learn train data must always remain available introduce separate concern maintain store require information warehouse many explore data mine perspective consider possibility machine various real system may job faulty code might crash certain input might combination job machine vary job may consume failure certain class machine may machine external cluster might regular basis cause job failure network rule might inhibit certain certain cluster require different classification introduce new source noise must accommodate thus desire data mine incremental prediction learn uncertainty robust efficient efficiency characteristic run distribute use data mine impose additional overhead system moreover ideally transparent end user believe problem present interest handshake two different stream research reap broad benefit understand implement better must instrument large scale heavy load quality data mine result bound ability construct model capture nuance information model describe system performance likely enhance sophisticate feature specifically information acquire survey limit term class problem devolve one binary class identify abstract condor define user condor report final status submission user must interpret imply success failure quantify separate success state unlikely improve result increase granularity type failure may yield information significantly valuable user type power allow potential isolation error source faulty code incompatible source bad input system level issue randomize additionally attribute survey impose quality use construct attribute user define maintain therefore insurance accuracy information store additionally tend keep higher level information system ie architecture os memory clue program failure may represent ie system version therefore classification limit amount detail provide computer administrator even full archive information may insufficient record would allow isolation error system level could make isolate exact point failure within program give system recommend solution report user use automatically twelve eleven three extend mode parallel distribute although make use mechanism condor variety tool available log collect data distribute ganglia ten eight magnet six thirteen allow construction sophisticate monitor network reduction service allow aggregation performance unify stream relate method treat system black box use rather example one may examine message distribute system infer causal sixteen identify performance bottleneck one suggest two without understand content message relate technique search deviant use pattern five order locate bug conclude believe large scale distribute sorely lack note seventeen grid limit usability performance via data mine represent one method help user draw general large amount data many tool need order draw specific reason individual fail thank pro compute use project one j j wiener p performance distribute two e e e brewer fox pinpoint problem determination large dynamic service three cheng r hood portable parallel dis program four w fast effective rule induction page five b bug deviant behavior general approach infer system code six w g magnet tool analyze adapt computer may seven r al production grid practice eight gunter b k j lee dynamic monitor distribute june nine condor idle june ten l b n chun e culler ganglia distribute monitor system design implementation experience thirty eleven r j hand smith compute need pervasive wa twelve b miller j j r b k k parallel performance measurement tool eleven thirteen h r c distribute monitor service architecture march fourteen j induction decision tree fifteen r matchmaking distribute resource management high throughput compute sixteen c j program analysis page seventeen j state grid group national laboratory tech report