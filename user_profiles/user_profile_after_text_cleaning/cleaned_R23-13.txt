render synthesis lee seidel university figure one method achieve blur effect comparable accurate real time avoid abstract present render method simulate effect similar quality accumulation approach obtain good visibility shade due use single view image method also avoid multiple render scene approximate different view rely layer scene representation present several performance quality early cull approximate cone trace sample method achieve result complex reasonable blur real time computer graphics image generation paper present render method method derive layer scene compute accurate blur avoid repeat model render synthesize new view contrast principle stem sample hence support vary visibility arbitrary aperture even shade solution lead high quality comparable reference akeley show figure one performance achieve use approximate cone trace sample thereby reduce number necessary view early cull major one fast view synthesis arbitrary lens sample two metric scene decomposition three acceleration quality higher performance four support shade one introduction two previous work finite aperture lens map point circle confusion overlap introduce blur image object limit depth field appear clear rest blur blur dramatically improve mediate pictorial depth perception generate focal imagery computer graphics number attempt past despite tremendous advance accurate blur still remain challenge due complexity visibility change previously accurate could achieve sample cook al akeley since imply render scene repeatedly use limit animation reference format lee e seidel h render synthesis graph five article six page copyright notice permission make digital hard copy part work personal classroom use grant without fee provide copy make distribute direct commercial advantage copy show notice fi page initial screen display along full citation copyright work own must honor abstract credit permit copy otherwise republish post redistribute list use component work work require prior c permission fee may request two plaza suite new york one majority previous render except accumulation detail section three rely image gather spatially filter image size al al earl al lee al filter enable high performance often lead intensity leakage focus leak background anisotropic filter al lee al partially address issue remain approximate scatter map source onto blend far near require depth sort costly even modern technique mostly use lose hide surface lead incorrect visibility particularly problematic blur foreground approach decompose image onto layer use blur layer use transform al pyramidal image process anisotropic diffusion al lee al rectangle spread al layer start single image address partial visibility color graphics vol five article publication date figure two model lation hide however extrapolation approximate recover true scene information become apparent strong blur instead lee al use depth peel address partial visibility fail multiple layer need combine although alpha blend approximate visibility well separate object al appear object spread across multiple layer mitigate problem use special image process al information duplication depth variation lee al use layer still remain difficult although also rely layer solution free correctly simulate visibility instead use alpha blend three model basic method section revisit discussion base model cook al ignore diffraction effect majority work concentrate size focus lens ray image point intersect see figure two lens focal length f focal plane f depth image plane situate f f f one map point f position map see projection equivalently intersection center ray center lens infinitesimal lens camera pinhole give position lens ray pass lens sample v lens plane interest find point p lens ray give describe point position center ray offset vector align along f accordingly write lens sample v e radius lens v offset vector unit circle give distance p offset vector r become e v two relationship look offset vector r p projection f v c v three assume v one classic radius c accumulation cook al shoot n ray lens sample alternatively give lens sample v treat render image scene v akeley image accumulate yield final result since cost repeat render heavily depend scene complexity number sample generally consider inappropriate use four method method start decompose scene several layer discuss layer space basic idea decomposition section focus implementation layer creation section blur compute decomposition image shoot lens ray layer representation accumulate section finally show improve render quality performance approximate cone trace section scene decomposition layer scene representation obtain single render pass use pinhole camera whose center coincide lens center configuration point center ray project onto single image point consequently offset vector equation three define relative displacement view facilitate trace lens ray section distance lens virtually divide depth represent one layer principle draw fragment output layer l fragment depth fall l depth interval layer maintain independent depth buffer result layer image equivalent standard render clip plan place depth interval bound layer hence layer capture hide surface see figure three example depth could choose uniformly decrease near focal plane accuracy improve space layer uniformly respect sign radius c definition lens ray remain relative position inside growth constant one layer next roughly distance image space thereby probability improper visibility handle reduce also understand term parallax near small lead large change whereas farther scene appear mostly flat compute depth start near plane define use distance image space layer index depth give l one one four k f figure four illustrate space theoretically define budget layer image show figure one rely six layer lead ten resolution ensure quality arbitrary choose number layer fulfill space requirement do image c upper bind k grow monotonically unbounded approach zero figure four latter problem since bind near plane distance usually even small three sixteen layer enough see supplementary material analysis layer creation current hardware multiple render target allow independent texture tile however reduce performance difficult handle resolution image lee graphics vol five article publication date figure three scene representation decompose leftmost scene onto ten layer give layer need test correspond ray segment two correspond two texture position store height value step iterative method assume height field vary linearly along ray mean surface initially define solely intersect linear approximation get intersection point let height correspond texture position height value fetch surface intersection reach binary search rapidly find accurate intersection split restart farther subsegment figure five leave show example care take layer empty depend ray orientation initialize value either upper lower bind layer depth interval produce intersection within layer figure five right theory approximation perform well slight layer overlap space strategy remedy large extent three usually enough convergence figure five illustrate two even efficient initialize layer depth bound perform two initial underneath first intersection point empty figure four layer uniformly space term c red portion represent slight overlap layer limit maximal texture size solution use layer render send slice array describe texture support independent depth buffer per entry first pass geometry shader redirect triangle layer accord maximum depth vertices second pass apply layer image treat large cross multiple layer read depth find correspond layer l copy l depth smaller depth store l manual depth test ensure keep nearest fragment layer intuition use maximum vertex depth triangle base observation triangle overlap layer boundary already partly farther layer probability hide layer potentially higher choice thus favor closer hide geometry solution approximate split layer consequently boundary delete information write layer belong practice accurate method small solution efficient fragment copy step also use simultaneously make layer slightly overlap ten overlap remove seam arise quantization next section explain step also benefit information figure five example intersection test thick line layer height field iteratively sample surface interval refine approximation find possible intersection point blur use layer representation give scene representation compute blur conceptually image evaluate one ray per lens sample result color accumulate rely equation two trace ray equation three sample layer result position layer correspond depth interval associate segment lens ray layer sequentially test correspond segment traversal stop surface hit lens ray treat iteratively fragment shader color impact point average yield final color condition origin ray way average enable generation various include large highlight essential realistic image lee al use disk sample lead ideal distribution cook layer representation height field ray traversal test lens ray precise render exist apply efficient iterative approximation inspire method false position feasible layer space ensure ray almost perpendicular height value bind layer handle traversal ray might actually leave layer image boundary one hand problem solve produce decomposition scene behind lens encompass lens ray hand imply increase texture resolution enable sharp image focal plane therefore keep decomposition lens center discard ray leave frustum practice degradation hardly noticeable affect periphery image whereas central screen part show highest image quality early layer cull layer method incur large blank image skip intersection test lead acceleration without loss quality give distance lens ray pass region interest thus bind maximum always realize one depth bound layer minimum depth value region greater depth bound layer intersection occur layer safely skip find minimum depth rely similar except level resolution source image nth level store minimum value square window size intersection lens ray segment surface approximation surface depth render synthesis graphics vol five article publication date figure six result without upper row middle row approximate cone trace reference image lower row around possible find minimum depth arbitrary square area four texture access correspond four overlap square accuracy much higher conventional test approximate cone trace similarly accumulation solution need sufficient lens sample strong blur single ray result one precise impact point word ray miss lens sample hence thicken ray con whose radius define half distance neighbor ray give nonintersecting except focal point ray meet con correspond infinite ray set center around original ray lead higher quality trace con expensive instead accurate evaluation approximate computation define diameter cone around lens ray distance di c di mean distance among lens sample give impact point distance di consider lie window accord cone diameter compute coverage value approximation ratio block ray total number ray average color efficiency use layer image augment initial color alpha channel indicate absence presence data value zero one respectively achieve clear layer image color alpha zero render scene fragment alpha one decomposition consequently alpha indicate coverage ratio receive color remain empty decomposition average color obtain divide equal one entire cone block color report else assume fraction ray result whereas ray continue traversal estimate ray accumulation use one future contribution obtain continue traversal along center ray cone usually associate introduce much smaller one instance lens sample implementation result diameter level radius figure six show synthesize image generate without cone trace see quickly remove fine grain approach reference many sample lens sample accumulation buffer method akeley rely render imply use sample pattern insufficient sample lead visible figure seven avoid yellow frame approach quality higher sample rat green frame good strategy even complex red frame especially along object method allow us change sample basis trade less objectionable noise quality sample approach even exceed quality sample extent figure seven improve upon one could compute k sample set choose randomly amongst even though sample pattern could produce use shader encode sample pattern would expensive best sample behavior result sequence n sample use per sequence sample allow us obtain differ overlap sample set define offset zero one per quality high performance penalty huge shader seem unable optimize constant shader value access pattern differ per performance quality lens ray value encode noise texture four allow sixteen pairwise combination apply lens sample solution perform three time faster previously mention marginal impact overall performance five result image quality representative image show figure one demonstrate result method intensity leakage bilinear magnification avoid compare result implement three approach akeley accumulation buffer reference approach gather solution lee al measure image quality evaluate peak ratio better compare perceptual quality rely structural similarity wang al rat first compare scene exhibit strong foreground blur first row figure eight illustrate approximation method qualitatively capture vary visibility reference note translucent foreground partially reveal leave angel detail horse ray correct find outweigh erroneous hence lee graphics vol five article publication date figure eight upper lower row foreground blur distort green four time difference reference integration ray lead good overall estimate wrong problematic several ray result wrong color response happen mostly along silhouette near focal plane theory highest error occur practice result small smooth transition green zoom error scale four time suffer lack hide surface information method well approximate foreground result smooth whereas gather method suffer nevertheless extrapolation reconstruct miss detail method show highest score compare two gather respectively also investigate challenge optical phenomenon focal plane situate thin object geometry appear distort see red box figure eight two branch cross appear separate effect reproduce real camera effect necessitate accurate simulation obtain two feasibility method illustrate figure eight yellow box sample variable blend weight allow us express complex light whereas two rely blur remain compatible finally contrast approach perform achieve extract color also surface decomposition step figure nine show example extract diffuse ambient light shininess apply model ray hit surface cone trace value evaluation result score whereas evaluation reach reference standard pinhole image reach value render performance measure render performance four term frame rate table one use ten since method depend different test several respect number view layer figure nine reflective blur b c shade reference gather method lee al due simplicity lens sample method show frame rat faster method allow thirty even many sample layer even extreme case sixteen layer sample method run eight nonetheless lens sample prove sufficient test dynamic static respectively relatively high performance result early cull ray termination together fifty contrast reference method slow significantly increase scene complexity sample six discussion conclusion method faster alternative solution accumulation method akeley highly scalable number view layer major limitation discrete layer decomposition address continuous surface capture inside layer space metric also make method robust animation see video avoid temporal issue even entire scene flatten single layer limit figure ten another difference akeley lack method use representation usually need shoot could produce blend separately focus alternatively could use buffer available graphics hardware although current implementation already produce result could modify trade performance even accuracy instance depth peel capture hide surface imply several render pass complex trace brute pinhole b ref c e gather f pinhole g ref h j gather scene b c render synthesis graphics vol five article publication date table one performance comparison four term frame rate do resolution gather reference method n number view number layer toy k k one one one twelve eight fifty eight sixteen sixteen one four forty fourteen two seven one eight nine eight twelve sixteen twelve sixteen seventy sixty eight twelve twelve thirty sixteen nine eight eight sixteen nineteen sixteen forty eight sixteen eight x efficient depth map query j depth field survey earl j practical depth field three c interactive transparency white paper two six seven p akeley k accumulation buffer hardware support render j interactive depth field use simulate diffusion tech rep fast calculation form factor use low discrepancy sequence spring figure ten effect number layer final result force scan find accurate intersection point necessitate texture enlarge cover require higher resolution render b algorithm render generalize depth field effect base simulate heat diffusion summary method good alternative traditional produce blur real time interest well interactive j tao w depth field layer use rectangle spread graphics interface thank anonymous h l r comment model map courtesy large geometric model archive tech aim shape gamma book object work support cluster excellence reference l x render geometry relief graphics interface b introduce render render workshop b horn elimination due occlusion image space blur graph model fort p accurate depth field use anisotropic diffusion graphics card j phenomenological model render sketch program cook r l porter carpenter l dis ray trace computer graphics eighteen three cook r l stochastic sample computer graphics graphics five one render pyramidal image process lee kim g j render use layer computer graphics forum seven lee kim g j render use anisotropically filter interpolation vis fifteen three g image blur pictorial depth cue biological lens aperture camera model synthetic image generation fifteen three g n j depth field simulation p generate effect virtual real application sixteen two advance depth field wang z c h r e p image quality assessment error visibility structural similarity image thirteen four j pullen accurate depth field simulation real time computer graphics forum one one lee graphics vol five article publication date