data mine grid grid v department computer science engineer university dame abstract compute present enormous challenge diagnose problem one application one machine hard enough diagnose millions job run machine problem new order magnitude suppose user submit one million job grid discover time later half fail large scale need tool describe overall situation indicate commonplace versus occasional deterministic versus random machine learn use large scale present comprehensive framework data knowledge discovery important step towards achieve vision one introduction compute achieve many technical execution large scale measure find every research university unite state execute computation intensive every imaginable branch science campus scale often aggregate structure example open science grid join together major research provide compute project large small anomaly similar sprawl find around world include information power grid grid grid although differ policy implementation detail make use common condor however remain difficult test tune underlie reason simply heterogeneity every axis imaginable compute construct machine vary age different vary storage memory network range packet switch circuit switch optics level grid may run many different operate node slightly different installation configuration cluster may batch schedule run different version local add mix different add remove retain storage configure network result job difficult port site site sophisticate user may carefully construct job run one cluster expand multiple cluster grid job may run perfectly certain machine run poorly fail start entirely reason often due subtle know user many people observe property firsthand experience make formal al observe thirty percent failure rate predecessor open science grid usually due exhaustion share al observe approximately twenty percent failure rate observe approximately ten percent machine give moment five study condor al observe failure rate thirty percent simple grid diagnose combination factor include user error credential expiration al observe typically due configuration simple hardware observe anecdotal discussion variety grid occur reliable mechanism diagnose paper present data knowledge discovery framework grid provide capability understand nature job grid part project thus far implement extensive allow user visualize various statistics job system alike user also log file specific analyse data also help us garner diverse different job refine model knowledge discovery end implement capability learn decision tree rule data enable classification job focus action part user answer question job fail two condor log condor job machine system describe data structure pair call contain describe critical prosaic machine name arch disk ninety job user l ten p five output ninety attribute addition system produce log record job machine include placement attempt activity log job job submit host job job execute host job job evict job job submit host job job execute host job job terminate exit code zero give three data source job data machine data bind apply machine learn automatically extract job machine correlate require external via available public specification constitute failure versus success class case consider failure job explicitly evict host ie machine owner type keyboard job exit nonzero status ie error detect application level logic three web server design web server design provide helpful view data resident condor log condor case increasingly functionality add also mine data help theorize reason behind job accomplish task present several organize type data presentation generation tool capable file require condor user log file chronological log job occur point job submission onward without file analysis possible condor user log may obtain specify log output location condor job submission file job submission process complete condor complete user log file available specify location additional analysis perform condor machine file file provide wealth attribute describe machine condor pool job execute since machine often largely responsible job information great still file optional require basic analysis file may obtain perform l command direct location file system summary tab tab provide basic information pool job many succeed fail average time job spend pool move forward textual information describe general log job browser tab provide tool browse job hierarchical fashion job object importance tab location main object list expand accordingly view provide logical encapsulate view helpful determine information specific job individually purely chronological order condor user log difficult achieve chart tab provide collection chart dynamically generate log file machine choose machine chart display chart follow image update shadow job execute address break form bar chart various log distribute pool machine consider situation one machine experience high number shadow process rapid cause many execution appear log type chart useful reason job quickly due type show pie chart type occur line chart correlate number problematic job experience number job fail success failure plot respect machine attribute architecture operate system bar chart illustrate set machine give successfully process job box plot show numerical machine way demonstrate may average correlate success failure give set job also serve show boundary condition machine may possess cause job process fail instance machine address space fail job require address space possible chart present manner conducive determine instance bar chart sort x value result appear top chart tab provide chart view every job select particular job view associate log display chronologically information gain tab provide tool information gain algorithm require machine file machine file rank highly physical memory first parse feature construction information gain algorithm run determine machine attribute correlate job success failure class information tab useful determine examine instance information gain may interest look machine memory box plot model result tab progress currently add tab provide interface view decision tree rule learn data set associate result action orient decision make user shortly part functionality five case study construct variety success failure class consider decision classification algorithm base learn present two case analyse paper first one use machine second one rely job one job machine nod job often fail machine memory later diagnosis bug pointer arithmetic application pointer arithmetic bug exercise application happen run machine memory example use diagnose simply application designer test set two study application linear support vector machine classifier oil give highly nature data set first apply variant standard cluster algorithm isolate data set cluster treat differently amount perform class distribution six relate work many propose large scale collection data order localize complex example carr collect base term data generate common object framework understand al apply association rule identify component likely fault give set observe al describe technique identify performance bottleneck use knowledge message pass note take long even finish complete fairly small essentially set experiment design check two number cluster number time minority class replicate two algorithm run experiment condor eventually come back data lean decision tree use job observe number cluster k fairly important role determine rate failure success corroborate belief linear separation require difficult application use language compiler observe code use flag deviation convention infer system level code collect data computer use rule mine assist al fourteen apply statistical machine learn approach especially presence multiple bug utilize moss plagiarism detection program large user community test bed propose distribute data mine approach detect machine grid grid application conduct classification monitor system collect data various source available grid apply distribute outlier detection approach discover machine apply data mine fault tolerance grid utilize historical data grid include user level fault activity level fault service level fault level fault detect work fault failure detection eighteen however current stream work limit general purpose sundry grid critical give heterogeneous dynamic uncertain state grid case data mine use narrow source precise description single problem rely tree construct job analysis highlight nonlinear problem cause algorithm fail deliver solution algorithm could converge result either suspension failure highlight specific bring forth important algorithm specific data set property seven discussion believe large scale distribute sorely grid limit usability performance via machine learn represent one method help user draw general large amount data advance tool need order draw specific reason individual fail present framework data knowledge discovery present distribute work support national science foundation usefulness lack grant job reference one rob al production grid practice proceed high performance distribute compute symposium operate thirteen swift n use diagnose computer workshop hot operate fourteen x jordan ben naik statistical simultaneous identification multiple bug proceed international conference machine learn fifteen run mine machine grid international conference knowledge discovery data mine sixteen r r short paper fault prediction detection grid high performance distribute compute seventeen p stelling c foster c c lee g fault detection service wide area distribute cluster compute eighteen p j fault tolerance within grid environment proceed two li real use analysis four grid trace gird compute three measure large open source distribute system concurrency computation practice experience appear four chun holly allan probe grid assessment international parallel distribute process symposium five sauve fault bad do grid compute six state grid group national laboratory tech report seven r induction decision tree machine learn eight w fast effective rule induction machine learn international conference page nine carr use execution trace data improve distribute practice experience nine ten e e e brewer fox pinpoint problem determination large dynamic service international conference dependable network eleven wiener performance black box distribute symposium operate twelve seth benjamin bug deviant behavior general approach infer system code