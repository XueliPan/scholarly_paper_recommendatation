job production use data mine v l department computer science engineer university dame abstract large scale production compute introduce new challenge user submit consist job grid good chance receive error message result one begin reason propose data mine employ accord job machine involve demonstrate technique several case study real consist job apply year worth data production grid use gain high level understand system behavior one introduction large scale production compute introduce new challenge consider user submit ten job computational grid discover half fail might due bug program certain input incompatibility certain operate lack run job bad luck form widespread power failure user administrator large compute system diagnose good examine one even handful job detail may represent common failure mode propose data mine apply attack problem compute various already publish large amount structure information job give access data classification use infer machine job execution environment correlate success failure example possible user job quickly discover ninety percent occur machine run kernel version less one ram remainder randomly distribute course kind analysis immediately diagnose root problem would help allow user focus attention situation resource interest case information would allow user quickly identify correct environment program detail user might simply direct grid compute system avoid machine match previous short paper four introduce concept large production run use data mine demonstrate feasibility approach execute large synthetic induce failure condition dependent upon execution machine able infer machine correlate closely relate root paper apply real trouble suspect root cause unknown easily diagnose user consider number job submit system university dame show diagnose examine machine job relationship two apply data collect course year job run machine large campus grid university throughout discuss approach two technique implement prototype tool diagnose submit condor base figure one give example input data tool every job submit condor represent eighteen list critical job owner executable upon machine will run job complete exit code resource consumption statistics add every machine participate condor also represent list available grid compute conference owner rank name arch rank start job f five one false arch machine fifteen physics user log submit execute evict execute exit normally status zero figure one sample data physical logical configuration machine upon job will accept language precise set attribute advertise job machine vary installation installation depend local administrator construct however within one condor installation high degree schema consistency user log file give sequence lifetime log file state job submit begin execute complete also record follow undesirable great interest job complete indicate whether exit normally ie complete main integer exit code abnormally ie crash give signal number job evict machine base local policy typically order serve higher priority user job suffer exception indicate machine crash network failure shortage system job abort user longer need work define failure nonzero completion abnormal completion eviction exception three data source observe job succeed fail job machine involve data source arch ninety f zero f five f ten zero f figure two sample decision tree available end without assistance administrator technique widely apply may diagnose incomplete job machine data collect time tool run impose discuss challenge domain failure constant typical production grid observe vary degree time largely drive also impose issue high class imbalance data two analysis show success vary time significantly thus primary challenge able counter issue class imbalance data distribution model interpretability standard decision tree sensitive imbalance class nine thus limit use work end implement decision tree algorithm utilize distance objective function five distance invariant class skew therefore ideal class unknown potentially dynamic algorithm highly effective class imbalance train quickly compare imbalance sample generate readable model prototype tool accept three data source input construct decision tree job machine distance decision tree five algorithm sample tree show figure two leave tree represent disjoint job certain number succeed certain number fail f internal nod tree represent job machine edge indicate upon value example rightmost leaf indicate category job run machine arch job category fail none succeed decision tree real much may leave data structure difficult even expert parse accommodate static relevant arch five dynamic add noise result disk memory fifteen artificial label hide root cause name false true false figure three machine label nonexpert user tool simply emit three significant nod decision tree experience far find effective initial attempt apply technique create decision tree enormous difficult read contain number split appear irrelevant data problem arise collect machine data query condor complete case later figure three give data present machine static label create condor accord fix local hardware operate system likely change course dynamic constantly change value load average available memory artificial label assign order simplify policy enforcement report general necessary remove know dynamic label algorithm add noise output show meaningful static artificial label produce different character result prototype tool allow form analysis three single user evaluate quality technique quantitative performance evaluation present run second apply job data present later may judge technique useful correctly diagnose problem know understand reveal problem entirely unknown course single technique universally applicable evaluate technique present several case study real use describe limit technique begin consider execute local campus grid university dame grid highly heterogeneous consist multiple dedicate research cluster classroom machine machine performance capacity vary widely range disk range ram range environment diagnosis critical first case study set job perform biometric image process job generate high level abstraction design non expert abstraction divide large problem small number similar job likely due available machine user question present complaint long tail number job end take far long complete evict many time multiple machine label figure four show output tool produce decision run tree large present rule immediately pinpoint problem job always evict machine label indicate cluster seven homogeneous machine full however result static label give better sense root machine distinguish pool three base knowledge machine know disk space sufficient performance irrelevant however total virtual memory seem unusually low machine configure least several virtual memory hypothesize job crash due exhaust virtual memory confirm manual test cluster notice particular job run may observe exercise first label allow compact correct statement suggest root problem static label suggestive less compact require reader apply domain knowledge get root feature map tree artificial label static label height thirteen nod leave height nineteen nod leave rule machine indicate three figure four decision tree result biometric feature map tree machine label rule administrator conclusion code generate large output file exceed complete eight os impose limit job label four set four make linear separation height ten nod leave eighteen height two nod leave complete zero train figure five decision tree result data mine form create true act upon case expression emit place user submission file verbatim order avoid machine without even bother understand root case static requirement even match several additional machine job likely crash simply happen appear original blame machine many case particular job may property prevent execute successfully machine technique diagnose job another user run several hundred job perform study various data mine several much like previous example large portion finish quickly remain problem two stag figure five show output tool initial analysis machine fruitful branch indicate critical value associate failure although analysis true lack root analysis job much fruitful fortunately user make habit put logical information job bookkeeping purpose first tool indicate occur job use oil manual test job reveal large size algorithm produce output stream exceed maximum file size process use interface user disable output rerun improve still remain tool apply time result much clearer job multiple four always evict never complete particular case control complexity algorithm set four yield high could complete within hour window available machine redirect job dedicate machine eventually complete exercise offer follow first via data mine silver bullet case file problem association oil narrow search space problem point directly root second manual annotation job value place directly instead property able isolate associate failure four user far examine several via data mine case user large coherent suspect problem explicitly invoke tool investigate also use study large production compute system many different long period time answer question apply data collect large production grid course one year grid lab glow grid four thousand machine grid physically partition across multiple campus run condor flock together mutual load share glow also accessible open science grid via gram six interface submit job condor pool glow remote user would typically use agent condor busy daily average queue length daily b p c zero h g n e l e e q zero mar may figure six utilization glow job submit job complete job fail job roll back job abort mar may zero zero five one eight figure seven number per month glow engage submit complete fail fifty abort zero exception twelve zero evict figure eight number per virtual organization glow g eleven manage job glow glow already instrument follow individual job arrive via gram interface submit condor job produce user log file record lifetime job upon completion job glow automatically archive user log file final job section present result data record archive note data include information job submit glow open science grid include job submit inside glow addition machine record time execution make single observation machine data data different ordinary condor pool two respect first system record virtual second machine system thirty additional label add order enforce local policy figure six give overview load place system time fill box indicate average daily consumption grid job dark line indicate maximum queue length day actual utilization higher data reflect load place system remote see load utilization highly small job submit weekly monthly basis may may system quiet perhaps due academic calendar batch job arrive utilization much higher figure seven give detail success failure job monthly basis job submit number job arrive gram interface job complete number job run completion indicate success exit code zero job fail number job run completion exit signal nonzero exit code job roll back number time job remove execution machine either remove local resource manager global fail initialize properly machine case job feature map top split label static label e figure nine decision tree analysis glow feature map artificial label static label march may june august feature map label static label engage glow figure ten comparison month user slice global data via rand index place back queue opportunity run elsewhere job could roll back many time lifetime job abort indicate number job explicitly remove submit user total amount time consume result successfully complete job total amount time consume result table reveal first clear go large cycle success failure job submit complete successfully less ten percent observe significantly increase tail summer enormous increase job submit fail abort trend continue august drop significantly suggest initial attempt harness grid go well repeat attempt proper formula find proceed smoothly purpose data confirm large number production suppose assume role administrator oversee large compute system apply data mine learn use knowledge improve system problem potentially challenge multiple different mix together may vary rat failure represent different weight accord number say make sense apply classification algorithm entire data set analysis entire year complete several use code run conventional technique quite feasible perform regular basis result show figure nine use artificial label observe gain label arch atlas figure eleven machine label failure highly correlate property indicate set available machine job submit one domain access data need unless user manually specify need data common usability problem across many condor appear operational problem glow use static label observe failure also correlate fast machine machine observation correct helpful diagnosis happen perform analysis different answer partition data month generate decision tree rather show result compare tree global tree use adjust rand index measure indicate coverage similarity scale zero one fifteen see figure ten considerable variance across engage result quite similar slice result different diagnose present result compactly show top ten respect fail ure compute information gain within decision tree top five define standard condor configuration top three administrative describe available nearest server user certain extent correlate administrative cluster somewhat surprise arch equal significance one would expect arch would higher significance describe compatibility program hypothesis accidentally correlate administrative see figure nine atlas label local system suggest much gain define custom within condor establish user experience problem heavily answer adjust tool job machine order successively refine source first select subset machine select set job fail machine analyze job despite problem mention property job identify actual person own ten job sum number job observe fail job ten sum technique apply year worth data production grid immediately diagnose label associate failure also turn root guidance operator tool also identify end user direct depend perspective suffer cause trouble five relate work previous author observe high rat grid compute thirteen predecessor open science grid observe failure rate thirty percent job often due fill disk sixteen observe availability impact upon system throughput work address sense transition kind systematically identify avoid observe informal end obstacle usability perform systematic gunter al fourteen describe system collect large amount data grid technique observe continuous value al seventeen discover machine correlate performance label feature select common work assumption performance likely represent bug approach suggest eight generally approach problem matter diagnose past suggest predict future al seven sketch technique predict future fault fu twelve demonstrate technique predict physical cluster base time space correlation another way complex study structure rather label example twenty examine message pass pattern distribute system infer causal similar idea black box one nineteen identify performance bottleneck pinpoint three tag data flow complex apply data mine suggest individual fail six conclusion work make follow production compute exhibit large number firsthand experience believe due iteratively submit diagnose acceptable performance achieve via data mine reduce time successful execution construct decision tree select decision point may easily draw strongly suggestive root cause physical logical label suitable purpose lead different perspective result technique apply large must additional tool subset explore data order draw meaningful offer follow sit open science grid adopt log behavior currently perform glow although log layer system contain detail intermediate store user job log user log file record complete machine time event occur observe machine change time execution time observation thus limit set available job machine advise include logical information directly even immediate functional purpose show figure four five nonfunctional label yield succinct intuitive result work support part national science foundation grant grateful dan university smith university university dame participate study reference one j j wiener p performance distribute symposium operate two n v n editorial learn six one sixteen three e e e brewer fox pinpoint problem determination large dynamic service international conference dependable network four n short paper data fault prediction detection grid high performance distribute compute five n v learn decision tree unbalance data conference machine learn six k foster n c martin w smith resource management architecture workshop job schedule parallel process page seven r r short paper data fault prediction detection grid high performance distribute compute eight b bug deviant behavior general infer system code symposium operate nine p geometry roc space understand machine learn metrics roc page ten foster c g security architecture computational conference computer security conference eleven j foster computation management high agent performance distribute compute page san august twelve fu explore event correlation failure prediction cluster thirteen r al production grid high performance practice distribute compute fourteen gunter b l brown j j log summarization anomaly detection distribute grid compute fifteen l p compare partition classification page sixteen dynamic resource availability grid compute seventeen n r mine machine grid international conference knowledge discovery data mine eighteen r matchmaking distribute resource management high throughput compute symposium high performance distribute compute nineteen p j wiener j black box performance wide area proceed conference twenty c j program analysis workshop algorithmic page j j grid user perspective trench cluster compute ten three condor grid f g fox hey grid compute make global infrastructure reality