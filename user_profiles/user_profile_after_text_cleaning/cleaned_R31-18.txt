practical passive link inference malik computer science department university abstract propose practical technique cation network link scheme base function compute likelihood link function depend number time link appear relative loss rat preliminary simulation result show algorithm achieve accuracy higher previously propose heuristic comparable statistical lower run time one introduction loss inference one three attempt infer link loss rat active one infer link loss actively probe network passive two three estimate packet loss observe evolution application tra c depend method use infer packet loss passive divide analytical two heuristic three analytical detect link e insight behind approach interest link performance rather exact loss rate link base insight present cobalt inference algorithm detect high probability link performance cobalt assign con level higher con higher probability link con level link depend number link belong compare network two algorithm start present network model use model connect network whose topology know apriori exchange data use protocol use trace collect calculate loss rate path server client ratio retransmit total number send server cobalt start separate good bad loss rate higher threshold label bad remain label good threshold correspond loss rate application performance disrupt subsequently link categorize depend number good belong approach base intuition link dominate path loss rate path contain link path loss rate least equal link loss rate thus link part good path make cobalt less susceptible path loss rate estimation link good belong least good parameter de sensitivity algorithm depend number network higher value give higher con link truly time number false increase good link participate exclude link find good cobalt compute con level remain link con level l link l network n compute l k l l one n one l average loss rate l belong n average loss rate among bad network l denote number time l find k one constant intuitively link bad participate whose loss rate much higher average loss rate network e cover fraction equation one second higher con link bad belong many bad second e cover k l term equation one greater value k higher importance l use exponential function l small di number link belong create large di con level simplify selection problematic link detail k select discuss future work last step cobalt rank link con level link highest con level likely problematic extension exist loss inference detect transient link exist today four address limitation extend basic algorithm present work shorter algorithm work similarly variant use exponential move average formula compute con level link l l one w one l w l two one l previous con level l con level compute recent data w age constant control convergence time algorithm interest point method value w might across link even estimate make link exact value function two interval ti ti one large one l decrease obsolete network view hence case w close one b number p receive since method base statistics sample con dent outcome analysis therefore p increase w approach one three simulation result use simulate network simulate network create use hierarchical five network consist nod link randomly choose pool large server use also pick fraction f link good link loss rat zero five bad link loss rate ten thirty compare cobalt three random sample two sample two algorithm three give di cobalt previous need rede ne coverage false term algorithm evaluation correctly link one whose con level exceed threshold consequently link whose con level exceed threshold count false set k experiment run algorithm three time time di topology report con level average con level obtain three choose k sensitivity three one random sample mean link loss rate choose mean exceed loss rate threshold bad link link say method burn period sample link mark sample find loss rate threshold table one comparison random r b cobalt c link inference fraction link number bad link five ten twenty correctly false r b c r b c thirteen twenty twelve four thirty fourteen nine r c b fifteen comparison cobalt three show table one result table base single server bay cor identify bay false cobalt cor identify cobalt false k n l f r e b n seventy sixty fifty forty thirty twenty ten zero one seventy bay sixty n e g n n n r fifty forty thirty twenty ten zero four two three four five six seven eight nine ten six eight ten twelve fourteen sixteen eighteen twenty number fraction link coverage function monitor b run time function fraction link fig one performance run time cobalt evident cobalt provide best coverage expense relatively high false positive rate compare false positive rate coverage drop dramatically link rare method seventy truly link false positive rate close twenty finally random sample fail identify thirty link time number false high random sample slightly di result present al two mainly due di loss topology model figure one show number false cobalt well method decrease number measurement point increase scenario trace combine run aggregate collect data figure one b show run time approach fraction link increase execution time cobalt almost ten time faster method sample reference one r j coat multiple source multiple destination network tomography proceed two j wang inference link proceed three nick eld simple network performance tomography proceed measurement conference four n eld v constancy path proceed measurement workshop five matta approach universal topology generation proceed august