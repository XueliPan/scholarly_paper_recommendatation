voltage emergency prediction use reduce operate janapa smith brook smith university abstract inductive noise force sacrifice performance order ensure correct reliable operation design possibility wide supply voltage mean time throughout processor must set pessimistically protect droop surge reactive scheme propose deal voltage noise inherent sensor delay limit effectiveness instead paper describe voltage emergency predictor learn voltage control flow lead use prevent recurrence correspond representative beyond four nominal voltage treat aggressive configuration pinpoint likelihood emergency sixteen cycle ahead time ninety accuracy lead time allow machine operate much voltage four instead thirteen higher performance closely approach performance improvement possible ideal predictor one introduction power ceiling modern present major challenge continue performance scale clock gate aggressively apply constrain power consumption lead large current swing couple nonzero impedance subsystem current swing voltage fluctuate beyond safe operate call voltage traditionally deal allocate sufficiently large time unfortunately voltage require get worse recent paper analyze activity twelve show require time translate operate voltage nearly twenty nominal supply voltage nominal voltage conservative operate voltage ensure robust operation system severely degrade performance due eighteen lower operate reduce gap nominal operate paper propose voltage emergency predictor identify imminent prevent occurrence voltage emergency predictor anticipate voltage use voltage emergency throttle machine execution prevent emergency signature interleave sequence lead emergency voltage emergency signature capture emergency first occur take snapshot relevant event history store predictor mechanism roll machine back know correct state resume execution subsequent emergency signature predictor throttle execution prevent impend emergency predictor enable aggressive time order maximize performance predictor outperform previously propose six thirteen rely voltage detect react via throttle prior scheme detect use voltage sensor monitor supply voltage specific soft threshold cross indicate voltage margin possible whenever supply voltage fall threshold machine throttle execution pursuit emergency prevention unfortunately scheme always guarantee correctness without incur large performance aggressively set soft threshold close operate margin limit time available throttle successfully prevent emergency alternatively set threshold conservatively lead unnecessary throttle degrade performance every conservative soft threshold cross eventually cross lower operate voltage margin predictor instead recognize track pattern activity throttle execution well emergency occur result show high prediction accuracy possible translate performance reduce otherwise conservative additional benefit voltage emergency predictor require fine tune base power delivery subsystem case reactive scheme current actuator throttle monitor current voltage soft threshold sensor b c figure one throttle feedback loop intend detect prevent b aggressive soft allow little time prevent c conservative soft trigger unnecessary throttle voltage activity machine utilization specific dynamic demand capture activity form voltage emergency allow predictor dynamically adapt behavior pattern result processor power delivery subsystem without reflect either also propose use alone handle voltage however traditional scheme cycle translate unacceptable performance al nine propose implicit scheme handle voltage buffer commit confirm voltage occur buffer sequence flight show effective implicit specialize require traditional structure since already available exist production one serve multiple purpose fifteen sixteen nineteen also rely mechanism predictor train summary paper voltage emergency prediction recognize activity lead voltage consequence program control flow show voltage predictable ninety accuracy exploit program behavior locality voltage emergency reduction voltage emergency predictor rely traditional capture voltage emergency prevent via throttle performance come within five throttle scheme efficient predictor implementation bloom voltage emergency predictor implementation show achieve improvement performance approach possible throttle scheme remainder paper organize follow section two review scheme handle voltage section three show program control flow use predict voltage section four describe experimental framework use evaluate predictor accuracy section five finally section six compare performance predictor scheme describe implementation two limit approach give direct impact voltage circuit delay intermittent voltage droop past lower operate margin slow logic delay lead time voltage spike exceed upper margin reliability issue hence modern design impose conservative operate voltage avoid voltage guarantee correct operation however large translate inefficient energy consumption lower performance section review react mitigate voltage typical proposal use tight feedback loop like show figure one loop include sensor try detect impend throttle actuator try avoid sensor rely soft current voltage threshold canary cross threshold mean voltage approach lower margin actuator turn throttle crisis past propose throttle scheme range frequency throttle pipeline issue ramp alter number accessible memory port six thirteen behavior feedback loop determine two set soft threshold level delay around feedback loop unfortunately choose accommodate reduce operate thwart correctness performance correctness figure one b illustrate use soft threshold throttle execution prevent emergency graph show voltage without throttle throttle execution nineteen b figure two feedback loop delay soft threshold correctness performance large percentage detect sufficient time prevent due feedback loop delay b even assume feedback loop delay number soft threshold cross violate minimum operate margin ie benign cross large performance suffer due unnecessary throttle uncorrected execution respectively solid horizontal line mark aggressive soft threshold indicate threshold voltage sensor start take action prevent emergency set soft threshold aggressively ie close lower operate margin require fast reaction sensor actuation system failure respond quickly enough result voltage emergency figure one b voltage start recover throttle time avoid cross lower operate margin figure two show sensitivity feedback loop delay plot number go unsuppressed suite function delay time assume soft threshold three nominal voltage lower operate margin four nominal feedback loop delay range zero five cycle would require nearly perfect sensor yet even delay cause fifty soft threshold cross violate simulate minimum operate margin specification word execution possible margin use scheme operate timely manner performance accommodate slow sensor response time ensure throttle effectively prevent scheme use conservative soft lift soft threshold away lower operate margin illustrate conservative soft threshold figure one c give throttle system time prevent emergency uncorrected execution figure one c show even absence throttle soft threshold cross may follow emergency throttle execution case decrease performance without compensate benefit conservative soft threshold set greater performance penalty figure two b show penalty quite large assume ideal sensor feedback loop delay ie sensor delay percentage benign soft threshold cross twenty soft range two three even possible design feedback loop delay large performance would deter reduce operate resonant versus isolate pulse scheme propose reduce sensitivity feedback loop delay focus voltage result resonate pattern dominant package recent work al nine illustrate nonresonant pulse also major source across range package jam al twelve observe isolate nonresonant pulse chip implementation kim al show resonant likely become less important isolate pulse future chip voltage package inductance effect power grid via fourteen therefore realize benefit improve energy efficiency performance reduce enable new need cope resonant nonresonant voltage future three throttle effective emergency avoidance mechanism must meet two criteria first must anticipate emergency accurately prevent performance degradation due unnecessary throttle second must initiate emergency avoidance mechanism enough lead time throttle successfully prevent emergency occur major goal work show possible predict voltage high accuracy sufficient lead time throttle prevent overview voltage emergency predictor structure learn recur voltage emergency activity prevent subsequent say via execution throttle figure three present block diagram propose scheme predictor monitor control flow keep track voltage emergency voltage identify block predictor also throttle avoid future suffer associate sensor delay soft unlike scheme approach allow operate much otherwise possible voltage emergency signature comprise interleave sequence program control flow give rise emergency voltage emergency dynamic must discover initially emergency know program execute detect margin occur since emergency potentially corrupt machine state mechanism actuator throttle control flow monitor predictor emergency notification b figure three overview voltage emergency prediction predictor replace soft threshold sensor rely code event activity instead current voltage activity decide throttle train use mechanism b voltage illustrate predictor throttle execution sufficient lead time prevent instead rely soft place recover resume execution invoke recovery mechanism predictor capture signature emergency time predictor collect history activity use history successfully prevent future via throttle section present detail emergency reason assume mechanism voltage emergency predictor require soft threshold instead monitor sequence program architectural initiate throttle whenever pattern detect clarity brief overview figure three b illustrate scheme outperform throttle scheme soon predictor observe voltage emergency signature start throttle execution sufficient lead time prevent emergency occur contrast throttle correspond throttle execution sensor figure one b fail avoid emergency aggressive soft threshold conservative soft incur large performance voltage emergency prediction follow subsection explore work underlie voltage emergency prediction use specific scenario build upon gain example demonstrate capture voltage emergency signature enable mechanism behind voltage emergency predictor discuss factor influence quality emergency signature type amount information record exploit voltage emergency activity pattern program highly repetitive repeat code pattern give rise repeat pattern memory access data flow processor al show repeat sequence processor activity potential voltage eight elaborate cache miss pipeline flush stall pipeline consequence machine activity reduce upon rush activity cause current spike voltage drop sharply voltage emergency occur voltage exceed lower operate margin however well understand benign versus harmful word guarantee branch recur event always emergency section show possible predict likelihood emergency accurately take account context lead emergency event act complete isolation sometimes cause emergency help illustrate event cause emergency figure four show pipeline activity cycle execute nest loop illustrate figure four b figure four illustrate pipeline flush due branch use vertical bar flush number next vertical bar flush graph correspond basic block number figure four b contain branch relevant pipeline across different part simulate range cache access functional unit usage rate dispatch issue commit also show time frame result current draw voltage activity also show lastly figure four show three distinct phase b c see top figure phase terminate emergency see bottom figure context perturb machine activity significantly responsible voltage pipeline flush event two figure four ideal candidate illustrate point event two phase cause voltage droop cycle event five also phase emergency event however always cause emergency phase b end b understand processor activity lead explain inconsistent behavior issue well rat prior event two different phase phase b perturbation effect event two different phase comparison pipeline flush event five always occur prior three four two five zero one six seven b figure four voltage associate recur activity phase b c cycle number next vertical bar flush graph correspond basic block number b contain branch b emergency prone function activity snapshot show emergency phase phase c nevertheless argument activity prior event matter hold true voltage prior event five phase rise versus fall phase c latter occur voltage already flux due perturbation bring event two phase b reason scheme attempt characterize exploit recur pattern must take account execution context precede emergency program control flow interleave voltage uniquely identifiable track control flow order occurrence rapid program control data flow level parallel utilization processor lead change current flow induce large voltage swing instance distinct current voltage activity phase b c result different control flow exercise program combine voltage droop induce pipeline flush two five early part phase program execute basic block two three five figure four b manner stable repetitive issue rate pattern early part phase figure four confirm slightly past phase program switch control flow basic block two three five basic block two five switch trigger pipeline flush recover speculatively execute incorrect code along edge two three execute correct code along edge two five activity recovery path follow pipeline flush cause voltage droop slightly enough violate operate margin show use lower operate margin cycle basic block five control instruction eventually lead voltage emergency emergency phase activity include well follow basic block two three five combine pipeline flush two five contrast emergency phase b arise execute basic block two three four five follow single flush event two consequently track control flow sequence along pipeline flush order occurrence yield two unique activity pattern represent phase phase b recurrence stability voltage like program phase repetitive program lifetime make predictable consider three phase illustrate figure four phase recur execution sequence flow phase b c back phase subsequent occurrence phase lead yet another emergency instance event two always cause emergency execution flow phase b c phase b thus pattern voltage emergency occurrence emerge identify exploit recur activity basis predict voltage term program behavior well behavior capture voltage emergency section describe hardware necessary capture program control flow event interleave emergency detection capture voltage emergency signature scheme require emergency occur least require mechanism monitor operate margin rely voltage sensor scheme sensor delay predictor react sense soft threshold cross throttle sensor use signal emergency occur system ought take appropriate action processor state potentially corrupt occur since voltage induce time fault rely mechanism recover mechanism initiate recovery whenever sensor detect emergency process also capture voltage emergency signature take vary cycle assume rollback penalty already ship today production one propose broad range novel use traditional mechanism believe become part future however alone solution handle voltage unacceptable due performance show section event history register predictor rely shift register capture interleave sequence control flow architectural give rise emergency signature snapshot event history register interleave event history register important capture dynamic current voltage activity result program underlie describe section purpose track instruction stream capture dynamic path program consequently control flow ideal track program dynamic execution path event history track topic area branch prediction contribution unique identify information flow precisely capture activity prone voltage figure five illustrate example show figure four across phase b c update wide event history register show time point emergency phase b history register contain follow recent two control flow instruction address illustrate event encode pipeline flush illustrate two follow another branch important never clear event history register capture snapshot maintain roll window contextual information example signature c overlap recent entry signature b since voltage contribute time fault predictor logic hardware must b c two five two five signature two five signature b two c n e g r e e signature c five figure five overview voltage emergency take event history register illustrate figure four across phase b c carefully design sufficiently conservative time structure time critical performance state corruption predictor logic lead incorrect therefore affect performance system due unnecessary throttle violate correctness guarantee voltage emergency signature semantics function voltage emergency signature precisely indicate whether pattern control flow event activity give rise emergency evaluate effectiveness different flavor define predictor accuracy fraction predict become actual content information track event history register must correspond part execution engine experience large current draw well dramatic spike current activity event history register collect control flow trace different point processor fetch decode issue commit point contribute different amount information pertain emergency instance track execution program order fail capture information regard impact speculation voltage track information fetch decode sequence capture speculative path capture issue different signature type illustrate figure six assume signature size discuss next track commit control flow sequence event history register give accuracy forty history register track information decode stage accuracy possible decode stage capture speculative control flow path accuracy improve twelve history register track control flow issue stage since capture precisely level hardware instruction schedule code execute along speculative path interleave program control improve accuracy even processor provide additional information swing supply volt b figure six prediction accuracy improve signature content represent machine activity closely b number per signature increase age instance pipeline flush sharp change current draw machine come near halt recover correct execution path observe figure four immediately follow pipeline flush last two bar figure six show accuracy add event activity event history register second last bar represent effect capture potential induce large voltage flush secondary cache miss improvement five percentage point achieve take flush miss account ie total accuracy another additional improvement margin four capture frequently occur like miss contribute additional four result instruction cache activity ie negligible lead improvement accuracy assume event history register reside issue stage pipeline capture activity formally event history register update whenever control flow instruction execute along level one level two cache miss lastly pipeline flush also record event history register size accuracy depend record right interleave also balance amount information event history register keep accuracy improve length history register increase however detrimental increase number register beyond certain count large number signature unnecessary differentiation similar whose recent identical whose older different significantly predictor would track unique per emergency differentiation figure six b show prediction accuracy improve signature size increase accuracy thirteen average signature contain one entry support discussion present section voltage solely depend upon last execute branch single event history activity determine likelihood recur emergency prediction accuracy begin saturate signature size reach sixteen peak signature size signature encode hardware resource constrain number represent signature realistic hardware implementation matter avoid large use encode per entry event history register encode cause therefore extend encode signature also contain program counter recently take anchor anchor add benefit implicitly provide complete path information lead recent event history register encode compactly capture relevant information consist different processor take account edge take branch ie encode zero versus one take edge compact representation describe result total signature length sixteen four anchor twelve signature size three per entry signature compaction reduce hardware fold multiple correspond specific anchor single representative signature use weight similarity metric base distance determine much compaction possible set correspond particular let x associate instruction address define similarity x two k k one k zero xi otherwise identical one two correspond zero later x correspond later time heavily weight emergency prediction measure similarity might yield better compaction would expensive compute hardware give instruction address partition maximal set signature x relate one similarity nine greater result partition use instead original signature set number recur per vary significantly nearly repeatedly give rise end spectrum apply signature compaction reduce number thereby achieve reduction overall compaction reduce number biggest exhibit large number clock rate window thirty ras branch penalty functional eight four fetch width two two eight sixteen cycle latency branch predictor decode width main memory ten cycle bimodal eight cycle latency table one architecture arch one four experimental framework vehicle data present paper infrastructure table one list configuration use initialize design refer arch one set comprise spec suite simulate million across different input use phase heavily weight one compile optimization level use gnu compiler get detail current profile incorporate modify version four simulator simulate current profile convolve impulse response power delivery subsystem obtain voltage study thirteen use model well operate margin purpose quantitative evaluation maximum swing four allow nominal supply voltage lower operate voltage margin beyond voltage emergency occur however work paper independent specific margin major find paper remain unchanged across different margin power delivery model evaluate three different package quality factor q ratio resonant frequency rate package dissipate energy q give rise voltage swing oscillate within resonance band current resonance band therefore suffer inductive noise package package label one two three detail pertain package show table two package one closely resemble four package eleven package two representative package use study thirteen base alpha package include package three represent bad package large quality factor input omit support instruction encode use package peak impedance current quality resonance factor cycle comment one two three five two seventeen three two six thirty sixty thirty four two use thirteen worst package table two package evaluate multicore multithreaded limit paper platform power delivery subsystem much prior work also within context allow comparative analysis scheme kim al al show voltage problematic multicore well seven fourteen author demonstrate operation core resonant behavior voltage power believe possible extend work capture activity lead track additional cache coherence message synchronization case multithreaded architecture possible easily adapt emergency capture mechanism part hardware thread context build predictor multicore multithreaded architecture beyond scope paper require five predictor accuracy evaluation emergency predictor contrast scheme broadly applicable across different design power delivery need cater rely soft section demonstrate robustness prediction across different machine assume signature size also demonstrate ability predict sixteen cycle ahead time ninety accuracy exhibit different drive machine different level activity therefore vary rat current draw figure seven plot prediction accuracy across spectrum multiple input present average prediction accuracy across different input enable high prediction accuracy average median voltage emergency able handle range like like exhibit large number cache miss overall high prediction accuracy observe across integer tolerance figure seven b show pair power delivery package one two three design arch one table one average prediction b c figure seven voltage emergency predictor maintain high prediction accuracy across different program type b power delivery package c predictor also capable predict sufficient lead time accuracy remain high respectively despite decrease package quality consistently enable emergency prediction ninety accuracy without specialization comparison scheme require careful configuration soft nine pair package one simpler processor arch two one structure table one fetch decode buffer queue cache accuracy predictor still remain high lead time predict emergency sufficient lead time enable machine throttle execution successfully avoid impend emergency figure three b illustrate notion lead time use lead time label point paper assume lead time zero cycle initially validate good however real require nonzero lead time account circuit delay allow throttle take effect experiment lead time erase trail segment capture figure seven c show accuracy slightly degrade lead time increase however even sixteen cycle lead time ample time prevent emergency prediction accuracy remain high ninety important note throttle prevent even correctly predict sixteen cycle lead time case mechanism must recover processor state machine incur rollback however experimental data show verify number one total occur without throttle result low six performance evaluation aggressive reduction operate voltage translate higher performance higher energy efficiency since performance power inextricably tie focus clock frequency performance assess performance also enable straightforward account result throttle evaluate maximum attainable performance within context cost previously illustrate figure three compare variety idealize nonideal approach initial analysis make optimistic regard hardware voltage emergency predictor section explore design show predictor implementation retain high accuracy performance typically build conservative safeguard potentially large voltage droop lead time translate clock frequency performance loss recent paper industrial design show fifteen twenty operate voltage would require protect voltage three twelve similarly analysis system one arch one reveal droop thirteen relationship operate voltage clock frequency facilitate translation voltage margin performance gain base detail ring oscillator consist observe relationship voltage frequency node thirty relationship consistent result report bowman al three show ten reduction voltage lead fifteen improvement clock frequency use scale factor throughout rest paper also observe disconcert trend across simulation result reveal scale factor nod respectively give slowdown traditional scale trend sensitivity frequency voltage grow stress need efficiently reduce voltage noise future base scale factor four operate voltage margin assume paper correspond six loss frequency similarly conservative voltage margin thirteen sufficient cover droop observe lead twenty lower frequency take conservative margin thirteen margin reduce four avoid voltage correspond clock frequency improvement offer system performance gain set upper bind maximum performance gain achievable make simplify assumption frequency directly translate higher overall system performance scheme performance gain predictor throttle ideal sensor throttle oracle voltage emergency signature event two soft threshold three soft threshold explicit recovery delay commit rollback ninety table three performance comparison across different flavor throttle handle voltage comparison scheme thoroughly evaluate benefit use predictor compare variety scheme also use throttle assume throttle mechanism gate every clock cycle scheme assume ideal zero delay instantly react either resonant voltage predictor assume unbounded prediction table voltage emergency signature predictor sixteen cycle lead time calculation performance gain show scheme begin maximum gain possible scale account performance conservative voltage margin thirteen allow operation common table three show performance gain scheme oracle predictor set upper bind potential benefit scheme consider oracle predictor throttle exactly emergency occur always prevent emergency waste throttle incur rollback remove voltage result performance gain best achievable performance incur throttle overhead voltage emergency signature predictor prediction scheme incur performance overhead average due throttle need detect also due throttle avoid slightly higher overhead translate performance gain relative seven less oracle predictor event predictor also evaluate simpler prediction scheme associate emergency recent event address instruction responsible ten whenever combination recur scheme throttle execution prevent another emergency prediction accuracy simple scheme poor translate large amount unnecessary throttle severely degrade performance large limit performance gain method ideal sensor still use four operate margin hard lower operate voltage margin evaluate scheme two soft voltage threshold conservative threshold two aggressive one three assume sensor delay would occur cross soft threshold prevent note actual sensor would delay several cycle would give performance result despite optimistic performance gain two three soft ninety respectively low gain due high fraction benign soft threshold cross lead unnecessary throttle show figure two b explicit recovery al propose use specifically purpose handle voltage nine demonstrate explicit scheme directly apply handle voltage due high rollback cost result confirm claim observe thirteen performance loss use explicit mechanism rollback penalty delay commit rollback overcome explicit al propose implicit scheme call speculatively buffer register file memory update verify emergency occur period long enough detect emergency nine commit proceed usual unless emergency detect case machine roll back resume execution throttle pace assume sensor delay represent best case demonstrate performance gain predictor outperform slightly however benefit use predictor outweigh use processor design implicit require change traditional structure comparison already ship production one serve multiple purpose range boost processor performance fault detection nineteen predictor leverage hardware thereby retain benefit also reduce voltage stagger pipeline muffle twenty aware controller seventeen stagger issue rat combat noise within individual contrast paper consider inductive noise range impact entire chip cycle discuss suitable noise ramp current large number cycle practical thus orthogonal approach implementation point assume unbounded match voltage emergency section show one way implement resource constrain predictor implementation combine memory cam bloom filter discuss combination efficient cam bloom filter use table observe performance gain compare gain unbounded predictor describe section prediction table prediction table hardware structure recognize voltage emergency prediction table happen whenever processor update content event history register processor combine event sequence history register address last issue branch instruction form signature try match signature prediction table match succeed processor throttle execution prevent potential emergency assume prediction table manage emergency occur make signature combine content event history register recently issue branch address enter prediction table cam cam natural structure implement prediction table however analysis show least would need achieve good performance sixteen per entry large cam would require much area power smaller cam capacity miss could prevent detect could lead severe rollback bloom filter bloom filter compact structure save space may sometimes return false match probabilistic hash table map key value implement use bite vector k hash function procedure add key bloom filter hash key k ways set bite vector correspond k indices return hash function key match bloom filter k indices hash key set probability indices key never enter may nevertheless set case match key produce false positive result purpose false tolerate affect performance correctness however find bloom filter need quite large give acceptable performance smaller bloom filter higher false positive rat result unnecessary throttle severely degrade performance bloom filter could yield performance gain comparable unconstrained predictor bloom filter practical size fall less two cam plus bloom filter screen anchor use cam reduce use manage prediction table consistent manage energy deal processor design implementation detail beyond scope paper b figure eight effect threshold value fraction handle predictor b performance gain voltage margin reduce conservative thirteen aggressive four set ber bloom filter reduce number time false throttle experiment observe work set anchor small enough cam practical size cam appropriately important however capacity miss allow happen lead cam size result show rollback reduce performance gain much fifty ten respectively cam performance loss due capacity miss negligible way reduce false keep occupancy bloom filter low do exclude less frequently occur emergency higher miss incur rollback cost manage prediction table could time profile signature exclude whose occurrence count fall choose threshold investigate effect use prediction table combine cam one address per entry bloom filter use three hash function figure eight show threshold one capture many miss performance degradation due severe figure eight b show performance gain different prediction table size variety threshold value small table size higher threshold yield better performance reduce false positive rate prediction table size performance gain eight without threshold threshold reduce throttle cause false much performance gain increase despite increase rollback hand table size grow false positive rate drop lower attractive prediction table size performance gain threshold three percentage point less threshold false reduce much rollback dominate simply exclude nonrecurring emergency gain table compare gain unbounded prediction table describe section seven summary continue technology scale inductive noise problem increasingly important design challenge several architectural propose past deal inductive noise however either trouble guarantee correctness incur severe performance paper propose novel voltage emergency predictor learn predict recur voltage collect program behavior processor activity lead propose architecture use collect anticipate avoid via throttle rely fallback scheme already available today production train throttle predictor voltage emergency predictor operate independently sensor delay package detail enable operation aggressive voltage without compromise correctness aggressive margin four enable performance gain much compare ideal throttle mechanism thankful industry many contribute work also grateful anonymous comment work support gift corporation national science foundation grant find express material author necessarily reflect view reference one h al thirteen cessor proceed design conference two k j hill k r levin power delivery technology journal nine three k bowman j w n kim j lee c b v de detection instruction recovery circuit dynamic variation tolerance four brook v framework power analysis annual international symposium computer architecture five k v detection hardware defect architectural support evaluation micro six e v simulation control power supply voltage variation l symposium computer architecture seven j l r brook understand voltage chip use distribute network date eight k smith brook towards approach mitigate voltage seven nine k smith brook delay commit rollback mechanism handle inductive noise eight ten v j smith brook approach handle inductive noise date eleven four processor platform twelve n jam p j b b comparison supply thirteen r brook control eliminate voltage high performance l symposium computer architecture fourteen w kim brook system level analysis fast use switch fifteen n j early load retirement five proceed international symposium computer architecture sixteen j f j c j cherry early resource recycle international symposium micro seventeen f lim lee dynamic inductive noise controller reliable processor design micro eighteen b b patch processor de sign nineteen g b continuously record program execution deterministic replay five proceed annual international symposium computer architecture twenty pant p pant will v architectural solution inductive noise problem due e g v b use accurate efficient simulation three new york n exploit resonant behavior reduce inductive noise n pipeline muffle current ramp architectural reduce inductive noise l symposium low power electronics design sarangi b b j patch processor design hardware micro k v ultra defect protection j r check b c b w c w h li j j j j e schwarz k c f design micro nineteen j k martin hill wood fast support speculation hardware fault tolerance compute science technical report university v shield design flaw field repairable control logic n j wang j patel restore soft error detection dependable three three thirty w predictive technology model early design exploration