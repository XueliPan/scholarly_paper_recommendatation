pacific graphics lee guest volume number seven sing bing texture splice technological university research university research abstract propose new texture edit operation call texture splice operation regard texture repetitive seamlessly distribute particular pattern take two input texture splice generate new texture select appearance one texture distribution texture splice involve search extract distribution distribution warp warp finally texture refinement preserve overall appearance show variety result illustrate operation subject accord computer graphics graphics image process computer vision feature one introduction fundamental computer graphics topic texture synthesis typical goal texture synthesis reproduce exist different size form interestingly relatively little do texture edit new create modify exist recognizable appearance basic also placement distribution placement distribution may include translation rotation scale texture synthesis generate mimic placement distribution simultaneously without separate two result difficult generate new different attribute use current texture synthesis paper propose new texture edit operation call texture splice unlike texture synthesis texture splice decompose two part appearance placement distribution give two visit research c author journal compilation c association publish publish publish road main street texture splice generate new texture use appearance one texture distribution operation especially useful available case user need specify appearance distribution attribute inherit different interest special case case two input user modify distribution manually generate new figure one show new texture create use texture splice two relate work exist approach texture synthesis capable produce result explicitly separate distribution result apparent generate new separate attribute example texture transfer texture edit also propose image texture flow fundamentally approach generate new output transfer give texture image video j wang x tong b kang b texture splice texture distribution texture b distribution b figure one new texture generate combine texture placement distribution texture b texture distribution da warp field wab backward warp initial new texture refine new texture tab texture b distribution foreground mask figure two overview texture splice however new output basically retain original texture model spatial distribution explicit model texture provide flexibility texture edit allow one property modify preserve technique use manifold diffusion distance separate different texture content image generate new manipulate decompose part however shall see issue current approach limit use base method propose propagate edit operation neighborhood edit include expand color edit warp al hand use global model represent space complex vertex represent texture orient edge feature texture use compute warp field establish similarity similar interconnect complex new generate nonlinear interpolation basically new texture morph version two complex specify path complex user little control texture generate technique allow user use circular manually specify position texture however synthesize possible adhere partial neighbor lie close source texture furthermore since area distinguish explicitly user need manually delete synthesize texture many approach extraction still open problem approach address issue texture synthesis al propose texture edit analysis scheme user specify distribution work hay al propose technique automatically extract distribution regularize spline warp however limit al propose method automatically extract distribution simple quantization however method work well connect closely adjacent brick wall gal al propose inhomogeneous texture map method method map accord warp function w preserve c author journal compilation c association publish j wang x tong b kang b texture splice figure four tag base property foreground background representative search texture foreground background figure three foreground background foreground rigid disjoint foreground rigid connect background rigid connect feature user require provide feature mask manually specify input warp function w texture splice technique rely user choose produce new texture prior use however texture first three texture texture generate follow information type either connect disjoint foreground binary mask x spatial distribution pi one list pi associate placement number sample texture note phase completely automatic foreground background type give texture extent appearance may spatially vary give define foreground background segmentation describe section somewhat arbitrary generally foreground use designate structure within either visually prominent c author journal compilation c association publish occupy large central area background typically use designate almost uniform figure three show three different foreground background decision make foreground background tag either rigid connect c rigid disjoint tag process do manually tag name imply foreground connect c connect across neighbor disjoint otherwise background tag connect c term rigid use indicate texture synthesis foreground background distort figure four show tag manner note sufficient tag texture c c next two step search estimate spatial distribution separation rely manual step manually select one foreground area compute center size se scribble background let us system know approximate shape foreground part well color background foreground step search require estimate spatial distribution placement use appearance vector map accomplish map encode neighborhood information texture channel appearance vector map reveal spatial structure arise factor color intensity edge orientation pattern different scale experiment find adequate use first eight channel appearance vector map search step algorithm search follow location manually initialize neighborhood na channel appearance vector map define similarity distribution map respect neighborhood x g na na x g similarity measure two use normalize similarity distribution map x indicate likelihood neighborhood na appear location x channel similarity distribution map compute one eight actual map use one minimum entropy local maxima potential sort accord similarity value highest determine actual algorithm apply suppression one one order sort suppression do remove neighbor current candidate size neighborhood j wang x tong b kang b texture splice determine se produce manual step algorithm stop similarity distribution map either pick remove nonrigid refine use conventional texture synthesis separation point follow information foreground mask one scribble background manual spatial distribution describe previous section thus sample foreground color c f background color c b note f b set foreground background color respectively use segmentation algorithm extract foreground binary mask segment foreground background texture minimize e la l p l p l q one pa pa p la l p b f p label l p label either b background f foreground p p p data term associate label cost l p l q regularization term prefer spatial smoothness label define l p min ka p two l p l p l q l p l q p q two three l p l q one l p six l q zero l p l q note two c l p c f c b know manual step experiment one energy minimization problem model problem flow network g solve use standard technique give information proceed generate new point step associate texture splice automatic four texture splice technique summarize figure two give source b new texture generate set b distribution target distribution source texture set discrete f establish warp distribution da target distribution dense forward warp field w compute use f depend tag w compute constraint selective rigidity example tag set shape foreground preserve much possible finally new texture generate barycentric inter correspondence placement give source distribution da target distribution seek map da first normalize scale da average distance position unity k four six depend texture density align also align use radon transform cost matrix cab define distance point da compute minimize total cost correspond unique pair min f cab f four use classical method find global minimum context dependent deformation give input texture foreground binary mask would like compute dense warp field wab wab map point p another point q b ie q wab p let us define shift p x p p wab p p formulate problem minimization deformation energy since deformation plane separable without loss generality describe extract deformation compute similar way minimize ex x l g x p p two l r x p x q p one p two five p p normalize quantity describe shortly term x subscript refer first term tend preserve second term encourage spatial smoothness since prefer preserve set l g l specifically respectively note second term compute ought rigid ie p one definition rigid depend type indicate table one enable shape specific part texture preserve part distort normalize weight neighbor p compute follow c author journal compilation c association publish j wang x tong b kang b texture splice p f p b type c p one p zero p one p zero c p zero p one l p one one zero one table one mask value base tag f b set foreground background respectively recall type foreground background respectively c refer rigid connect refer rigid disjoint note case use p q q p p q q p figure five four special condition foreground mask yield q e block represent black zero white one grey one zero care q e condition meet six p q zero one four condition illustrate figure five otherwise l p q e parameter e control consistency foreground background l p control constraint horizontal vertical border rigid depend texture tag see table one rigidly connect background c set l p zero horizontal vertical border seam red brick texture figure seven preserve constraint although move scale basic shape preserve type l p one obtain use sparse equation solver practice similar use double back substitution solve warp field compute wab identity function wab typically map fractional use barycentric interpolation extract color mask value specifically first triangulate source texture use center vertices warp triangle see figure six output texture node q inside warp triangle use barycentric determine inverse map q possible point output inside multiple warp source case select triangle whose vertices maximum sum mask value backward map establish use produce initial output texture c author journal compilation c association publish final refinement two basic first may define output result hole second rigid part source texture may still slightly deform attendant loss visual fidelity adopt texture synthesis method handle two suppose q exist create hole q remove hole randomly select nonrigid p source texture ie q p produce texture apply synthesis jitter reference position nonrigid produce final new texture tab five result figure seven eight show variety result use texture splice technique figure seven show result different texture type provide appearance irrelevant texture type texture provide distribution information notice result preserve either foreground background depend texture tag one texture assume distribution texture figure eight hand show possible obtain leftmost column provide appearance top row provide distribution matrix result look reasonable show texture pair compatible example apple texture row inside matrix water droplet texture column inside matrix produce bizarre unattractive texture regard failure case clear right answer give two input result show figure nine one source texture use create result new texture generate directly manipulate distribution manipulation form scale one randomization two arrangement regular pattern three specific rearrangement four q source q output figure six illustration backward interpolation blue point output texture warp vertices triangle backward warp q do use barycentric e j wang x tong b kang b texture splice one two three b c b c figure seven synthesize group one rigid connect foreground c two rigid disjoint foreground three rigid connect background c reference source provide appearance combine source provide distribution information b get target c step search build candidate set search texture synthesis take average second size second time critical texture splice operation since step constitute cost do add texture currently do present texture synthesis operation run amenable implementation likely allow tool run interactive speed six conclude remark texture splice take average fourteen second second core two duo ram expensive operation take time factorization matrix deformation texture synthesis since factorization depend displacement propose texture splice novel mean texture edit idea simple decompose texture appearance spatial distribution combine appearance one texture distribution another make texture edit simple user two need specify user option directly edit c author journal compilation c association publish j wang x tong b kang b texture splice figure eight edit source first column source provide appearance first row source provide distribution information texture within matrix synthesize result use source texture first column another first row require interaction provide control texture design show variety result demonstrate effectiveness texture splice current work search take account rotation scale addition method rely c author journal compilation c association publish initialize search future include fully automatic distribution extraction algorithm handle variety scale rotation j wang x tong b kang b texture splice one two three four b c b c figure nine texture result source texture b manipulation distribution c edit texture reference n extract natural international conference computer vision two n shape texture integrate extraction surface estimation pattern analysis machine intelligence eleven twelve two brook n base texture edit computer graphics two proceed two v experimental comparison energy minimization vision pattern analysis machine intelligence nine four j sample procedure analysis synthesis texture image proceed one k levy b texture conference proceed two freeman w image quilt texture synthesis transfer proceed august one j r theoretical algorithmic efficiency network flow journal nineteen two four texture synthesis sample international conference computer vision one ford l flow network university press four porteous b exact maximum estimation binary image journal royal statistical society series b methodological two four gal r proceed symposium render two four five j j r texture analysis synthesis proceed august one c n curl b image one proceed annual conference computer graphics interactive one hay j h discover texture regularity correspondence problem two two c author journal compilation c association publish j wang x tong b kang b texture splice k radon transform orientation estimation rotation invariant texture analysis pattern anal six four v n texture optimization synthesis graphics one v turk g image video synthesis use graph cut graphics one j j h e dominant texture diffusion distance manifold graph forum two two lewis j fast normalize vision three shape texture without international journal computer vision one two h parallel controllable texture synthesis graphics three two h texture synthesis graphics one three five lin hay j texture analysis manipulation graphics three two k malik j detect localize group repeat scene image proceed conference computer two j assignment transportation journal society industrial apply mathematics five one four w f texture design use complex graphics two k seidel animate picture fluid use video graph forum two one f geometric group repeat within image shape contour group computer vision twelve two gool l v efficient group perspective skew conference computer vision pattern recognition two h compute texture bind image nature two j k l b synthesis arbitrary surface graphics one c author journal compilation c association publish