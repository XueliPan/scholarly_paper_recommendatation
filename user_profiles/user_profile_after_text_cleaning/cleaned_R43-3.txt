engineer vol four learn metric code readability r paper explore concept code readability investigate relation quality data collect human derive simple set local code feature human readability use feature construct readability measure show eighty percent effective better human average predict readability furthermore show metric correlate strongly three measure quality code change defect report defect log message measure million line code well longitudinally many release select project finally discuss study program language design engineer practice example data suggest comment less important simple blank line local readability index readability program understand machine learn maintenance code metrics c one introduction define readability human judgment easy text understand readability program relate thus key factor overall quality typically maintenance consume seventy percent total cost product four al claim source code readability documentation readability critical project one note act read code component maintenance eight readability significant fact recognize many commercial program much difficult read necessary propose add development phase program make readable ten knight suggest one phase inspection check source code readability ensure portability code propose add dedicate readability documentation group development team observe without establish consistent readability individual may able help much sixteen hypothesize intuitive notion concept program feature indentation python forty choice identifier name comment likely play part example claim readability program depend largely upon simplicity sequence control conjecture unnecessarily complicate program understand employ notion help motivate approach system design nine author university engineer way po box manuscript receive one revise fifteen sept accept five publish nine recommend acceptance ryder information obtain reprint article please send reference log number digital object identifier present descriptive model readability base simple feature extract automatically program model readability correlate strongly human also external widely available quality defect change understand empirical objective model readability useful consider use readability metrics natural grade level eleven index fifteen smog index readability index readability metrics ordinary text metrics base simple factor average per word average sentence length despite simplicity show quite useful practice use fifty integrate popular text include word also become unite state governmental standard include department defense require many document form internal external meet readability grade ten dod defense also often require use write technical metrics help gain confidence document meet readability cheaply become ubiquitous reason believe similar metrics target specifically source code back empirical evidence effectiveness serve analogous purpose domain readability metrics niche computer generate math layout three seventeen find useful describe first general readability metric source code important note readability complexity exist metrics show useful brook claim complexity essential property arise system abstract away twelve brook model readability accidental determine problem statement principle publish computer society learn metric code readability engineer control accidental imply readability address easily intrinsic complexity complexity metrics typically take account size class extent readability code base primarily local factor notion readability arise directly actual human context code judge complexity factor hand may little relation make code understandable previous work show attempt correlate artificial code complexity metrics directly defect difficult impossible although involve local factor indentation readability also distinct cod two six primarily intend facilitate collaboration maintain uniformity code write different study choose target readability directly concept independently valuable also great control show section five indeed significant correlation readability quality main paper technique construction automatic readability metric base local code feature survey human code form basis metric present evaluate paper unaware publish readability study comparable size human directly evaluate performance model data set set experiment reveal significant metric readability external quality include defect density discussion feature involve metric relation engineer program language design main point previously present five paper also include base program empirical experiment link readability metric quality particular evaluate two million line code compare one million previous work report primary result analysis term five correlation statistics compare one previous presentation additional experiment correlate readability metric natural notion quality defect density explicit human mention bug repair use version control repository information coarsely separate change make address bug change find low readability correlate strongly direct notion defect density previous approach use potential bug report static analysis tool additional experiment compare readability complexity experiment serve validate claim notion readability largely independent traditional measure code complexity additional longitudinal experiment show change readability correlate change defect density program evolve ten five program find project unchanging readability similarly unchanging defect project experience sharp drop readability subject correspond rise defect density number possible use readability metric may help write readable quickly identify code score poorly assist project monitor maintain readability serve requirement acceptance even assist help target effort part program may need improvement finally use static analyse rank warn otherwise focus developer attention section code less readable thus likely contain bug readability metric present paper already use successfully aid static specification mine tool set know whether code path readable twice predictive power measure f score know whether code path feasible structure paper follow section two present study readability involve human present result study section three section four determine small set feature sufficient capture notion readability majority section five discuss correlation readability metric external quality discuss work program language design section six discuss potential validity section seven discuss extension section eight conclude section nine two study methodology consensus exist readability essential determine characteristic code quality one four eight nine ten sixteen factor contribute human readability previous study look readability test comprehension several program however experiment sufficiently extract precise feature study code sample large thus perceive readability arise complex interaction many feature potentially include purpose code contrast choose measure readability small line average code use many short code increase ability tease apart feature predictive readability describe experiment design extract large number readability short code sample group human engineer vol four formally characterize readability map code sample finite score domain experiment present human sequence short code call web interface ask individually score snippet base personal estimation readability discuss three important snippet selection policy section snippet score section participation section snippet selection policy claim readability code different natural code highly structure consist serve different purpose include design documentation logic issue make task snippet selection important concern design tool extract program first relatively short aid feature discrimination however short may obscure important readability second logically coherent allow context appreciate readability claim span multiple method body include adjacent comment document code snippet finally want avoid generate trivial example uninterested evaluate readability snippet consist entirely import entirely comment consequently important exist must short possible adequately support analysis yet must long enough allow make significant note intention simulate read process context may important understand quite contrary intend eliminate context complexity large extent instead focus detail readability imply context unimportant mean show exist set local feature strong impact readability extension quality mind restrict program follow snippet consist precisely three consecutive simple fourteen basic unit program simple include field function call break continue throw return find experience sometimes short meaningful evaluation readability three generally adequate cover large set local feature sufficient analysis snippet include precede line simple comment function blank line compound like switch furthermore allow cross scope snippet neither span multiple start inside compound statement extend outside however permit start outside compound statement end statement complete find set fig one tool annotate readability code use study ninety percent program consider see section five incorporation snippet line usually find function three snippet definition specific extend similar like c c find size distribution number character generate study approximately normal positive skew mean median minimum maximum generate five open source project see fig ten choose include vary level maturity multiple application keep model generic widely applicable discuss possibility model section eight readability score prior participation volunteer human tell would ask rate code readability participation would assist study aspect quality collect use annotation tool show fig one permit access leisure present sequence button label fifteen participant show set order graphically remind select number near five readable number near one less readable score three indicate neutrality additionally option skip learn metric code readability fig two complete data set obtain study box correspond judgment make human annotator color correspond lower readability score one two lighter correspond higher score vertical band occur much frequently figure random coloration indicate judge similarly many metric readability derive current snippet however use infrequently fifteen time modify source syntax highlight better simulate way code typically finally click help link remind score base estimation readability readability judgment easy block code understand readability intentionally leave formally undefined order capture unguided intuitive study participation study advertise several computer science course university vary experience read write code seventeen take course take course thirty take third course ten graduate total participate study run two tell would receive five fifty people start finish survey would receive ten use start time instead finish time encourage participation without place time pressure activity incentive make rush readability setup make clear collect data keep carefully anonymous aware fact complete survey yield randomly generate code could monetarily redeem one syntax highlight automatic format certain ides eclipse may change perceive readability code opinion vast majority feature syntax highlight automatic format often available prevalent universally use thus present syntax highlight without change format fig three distribution readability score make human code take several open source project see fig ten section discuss effect experience readability section seven discuss participant pool experiment validity three study result score total distinct fig two provide graphical representation publicly available distribution score see fig three first consider agreement evaluate whether extract single coherent model data set purpose measure agreement consider several correlation statistics one possibility often use measure agreement categorical however fact judgment data ordinal ie qualitative relationship total order important statistical consideration since receive precise guidance score absolute score important relative two give snippet x higher score snippet consider agreement respect two even actual numerical score value differ thus study test version conceptually give credit rank close addition consider ie number order one list way second measure degree linear dependence spearman degree dependence arbitrary monotonic function closely relate r statistics correlation one indicate perfect correlation zero indicate correlation ie uniformly random score random instance agreement case correlation five would arise example two score half exactly way score half randomly combine large set single model simply average correlation statistics compare two time extend find average correlation unify model annotator two data set tool available engineer vol four fig four five statistics agreement column give average value statistic apply human annotator score average human annotator score mode case column show value statistic model output average mode human readability score case give correspond null hypothesis probability correlation random result tabulate fig four case weight use mode score discrete value expect translate sort statistic qualitative term difficult correlation greater five typically consider moderate strong study thirteen use unify model subsequent experiment analyse employ spearman throughout study principle measure agreement general appear model degree agreement fig five show range analysis seem confirm widely hold belief agree significantly readable code look like overwhelm extent one implication indeed underlie factor influence readability code model average score capture common factor simultaneously omit arise largely personal preference four readability model show significant agreement group relative readability however process underlie correlation unclear section explore extent mechanically predict human readability endeavor determine code feature predictive readability construct model ie readability metric analyze code model generation first form set feature detect statically snippet block code choose feature relatively simple intuitively seem likely effect readability factor relate structure density logical complexity documentation importantly consistent notion readability discuss section feature independent size code block fig six enumerate set code feature metric consider judge code readability feature apply arbitrary size block source code represent either average value per line maximum value line example feature represent average number line another represent maximum number fig five distribution average readability score across bimodal distribution present us natural cutoff point train binary classifier curve representation distribution window size eight one line last two feature list fig six detect character identifier occur frequently snippet return number find together feature create map real number suitable analysis algorithm suggest human readability may often arise complex interaction feature furthermore important feature value may hard locate result simple establish correlation may sufficient fortunately number design precisely situation typically take form fig six set feature consider metric read number learn metric code readability classifier operate instance thirty purpose instance feature vector extract single snippet train phase give classifier set instance along label correct answer base readability data label correct answer binary judgment partition readable less readable base human annotator data designate receive average score less readable base natural cutoff bimodal distribution fig five group remain consider readable furthermore use binary also allow us take advantage variety learn train complete apply classifier instance see obtain estimate probability belong readable less readable class allow us use probability snippet readable score readability use weka eighteen toolbox fit build classifier base set feature predictive power respect readability help mitigate danger ie construct model complex comparison amount data use cross validation section discuss result principle component analysis design help us understand true complexity model relative data cross validation consist randomly partition data set ten train nine test last one process repeat ten time ten use test data exactly finally mitigate bias arise random partition repeat entire validation ten time average result across run model performance test hypothesis local textual surface feature code sufficient capture human readability two relevant success metrics experiment type recall precision recall percentage judge readable readable model precision fraction readable model also judge readable consider independently metrics make perfect trivially degenerate model always return readable perfect recall thus weight together use statistic harmonic mean precision recall seven sense reflect accuracy classifier respect readable also consider overall accuracy classifier find percentage correctly perform experiment ten different establish train classifier set randomly generate score label guess randomly yield five serve ten represent perfect upper bind none able achieve note however always guess readable fig seven agreement annotator sort order value spearman annotator average model attempt predict also plot spearman metric compare average would actually trivial achieve train average human data ie train randomly several improve eight model include neural network classifier base conditional feature logistic regression vote feature interval approach base weight vote among make feature separately average three best correctly eighty percent view model well capture multiple learn advantage one classifier could agree train data would suggest lack generality notion readability eighty percent correct classification rate seem reasonable absolute term perhaps simpler appreciate relative compare continuous output classifier ie use probability estimate readable rather binary classification average human score model train obtain spearman correlation show fig seven level agreement sixteen percent average human study produce column three fig four present result term four statistics could attempt employ exotic investigate feature improve result clear result model would better since model already well within margin error establish human word real sense metric good human performance thus select classifier equivalence class choose adopt classifier experiment paper efficiency also repeat experiment separately annotator experience group fig eight show mean spearman dark bar leave show average agreement average score vector group ie agreement example third agree often spearman correlation approximately six correlation five engineer vol four fig eight annotator agreement experience group random represent uniformly distribute random light bar right indicate correlation metric train annotator group average group three interest arise first group automatic metric agree human average closely agree second see gradual trend toward increase agreement experience except graduate suspect difference respect graduate may reflection diverse background graduate student population sophisticate external factor third performance model consistent across four group imply degree robust source train data investigate feature predictive power rerun analysis use one feature time relative magnitude performance classifier indicative comparative importance feature fig nine show result analysis normalize zero one find example factor like average line length average number per line important readability conversely average identifier length predictive factor neither construct loop comparison section six include discussion possible result figure similar use complexity metrics section investigate overlap readability complexity prefer singleton feature analysis analysis judge feature power base decrease classifier performance may mislead due significant feature overlap occur two feature though different capture underlie phenomena simple example exactly one space every two word feature count word feature count space capture essentially information leave one unlikely decrease accuracy principal component analysis indicate percent total variability explain eight principal thus imply feature overlap significant total cumulative variance explain first eight principal follow sixty fig nine relative power feature determine singleton analysis direction correlation also indicate five correlate readability quality previous section construct model readability mimic human implement model tool assess readability program section use tool test hypothesis readability capture model correlate external conventional metrics quality specifically first test correlation readability popular static tool nineteen second test similar correlation change code several large open source project third version control log message indicate bug discover fix examine whether readability correlate complexity test claim notion readability largely independent inherent complexity finally look trend code readability across project set open source program employ find fig ten select relative popularity diversity term development maturity application domain availability multiple open source repository maturity categorize learn metric code readability fig ten program use experiment maturity column indicate project status use snippet source note project present multiple release different maturity level case select release maturity level indicate run readability tool include feature detection readability judgment quite rapid example k line code take less sixteen second process six k per second machine two processor disk maximum transfer rate readability first experiment test correlation defect detect readability metric function level first run note defect report second extract function partition two set contain least one report defect contain none avoid bias program vary number report defect normalize function set size run classifier set function record contain bug respect classifier judgment less readable purpose experiment investigate extend model correlate external notion code quality aggregate second experiment test similar correlation code churn readability change capture another important aspect code quality experiment use setup first use readability predict function modify two successive release program experiment successive release mean two recent stable word instead contain bug attempt predict go change soon consider function change case text exactly include change normally ignore program study since specifically focus readability deem relevant first experiment look output bug finder output may constitute true defect code third experiment investigate relationship readability defect actually note become standard engineer practice use version control manage code base system change make developer typically include log message describe change log message may describe feature addition optimization number potential change case log message even include reference bug often always use associate bug track number project bug third experiment use metric readability predict whether function modify log message mention bug twelve fifteen feature publicly accessible version control least recent version program line code determine last revision change line similar common blame tool restrict evaluation recent find function report bug total inspect log message word bug determine whether change make address defect partition function two set least one line last change deal bug line last change deal bug fig eleven summarize result three experiment average correlation precision fourteen ninety recall fourteen version change precision fourteen recall fourteen log message indicate bug fix twelve applicable average precision fourteen recall fourteen important note goal perfect correlation source defect report project run directly rather use metric predict output instead argue readability metric general utility engineer vol four fig eleven use readability predict function show defect change release defect reference version control log message log message data unavailable indicate enough version control information available conduct experiment fig twelve mean ratio classifier predict less readable assign function contain defect change next version defect report version control log example function assign probability less readable nearly percent greater average assign function without defect correlate multiple quality best show strong performance correlate log message code low readability significantly likely change later purpose fix bug second important consideration magnitude difference claim classifier ie continuous output versus discrete useful evaluate readability fig twelve present data form ratio mean probability assign classifier function positive defect version change function without feature ratio one ie many project indicate function feature tend lower readability score function without example project function judge less readable metric dramatically likely contain defect report project less readable likely change next version brief note intentionally report standard readability underlie score distribution metric base see fig five output tool bimodal fact tool output closely approximate bathtub uniform random distribution normal one result standard standard deviation apply however mean distribution well characterize ratio lower half distribution upper half ie characterize population less readable compare readable three external quality find tool exhibit substantial degree correlation predict base readability metric yield eight case goal perfect correlation version change code churn moderate however add support hypothesis substantial connection exist code readability describe model defect upcoming code change readability complexity paper define readability accidental component code understandability refer idea artifact write code closely relate complexity problem code mean solve short snippet selection policy mask complexity help tease apart readability also select set surface feature design agnostic length learn metric code readability fig thirteen product moment correlation complexity readability well complexity method length number method readability weakly correlate complexity absolute sense relative sense compare method length readability effectively uncorrelated complexity result imply readability capture aspect code well model traditional complexity measure fig fourteen average readability metric function project function project lifetime b defect density project function project lifetime project release note project flat correspond flat defect describe text become significantly less readable significantly buggy start release five selection code nonetheless feature still may capture amount complexity test hypothesis readability complexity closely relate use measure indicative example model code complexity measure complexity readability method since ordinal oppose binary three previous experiment compute r also compute correlation complexity method length fig thirteen show readability closely relate traditional notion complexity method length hand much strongly relate complexity thus conclude notion readability orthogonal complexity large part model distinct phenomena use life cycle explore relation readability metric external factor investigate change long time hypothesize observe trend readability project manifest similar trend project defect fig fourteen show longitudinal study readability defect rat tend change lifetime project construct figure select several project rich version calculate average readability level function project show linear relationship statistical significance level better five except defect density note newly release open source project always stable project often undergo major overhaul add additional crosscut feature consider recently adopt completely different depend new feature fifty static import twenty fig plot defect density multiple project release project hibernate show relatively flat readability profile project experience similarly flat defect density project however show sharp decline readability release five zero new introduce correspond increase defect density release five zero observe percent function readability five version test percent recent increase percent engineer vol four length much useful negative predictor include feature detect encode type information variable name result longer without convey additional information may negatively impact readability unlike comment direct way communicate intent one might expect presence increase readability dramatically however find comment moderately well correlate notion readability percent relative power one conclusion may comment enhance readability typically use code segment start less readable comment unreadable code effectively balance net effect would appear comment always indicative high low readability number character per line strong influence readability metric percent relative power respectively would appear long sentence difficult understand long line code find support conventional wisdom keep line short even mean break statement across multiple line design program readability important concern might design force encourage improve readability consider various design language feature metric example python enforce specific indentation scheme order aid comprehension forty experiment importance character count per line suggest favor use construct switch encourage short line data suggest add additional mean program write new worth note model readability descriptive rather normative prescriptive use predict human readability exist directly interpret prescribe change improve readability example average number blank line powerful feature metric positively correlate high readability merely insert five blank line every exist line code need improve human code readability similarly long contribute lower readability score model replace random sequence unlikely help might tease apart refine model apply change piece code evaluate actual change readability via second human study predict change observe change help illuminate confound imprecise feature current model learn normative model readability remain future work might useful finally language consider new language feature conduct study impact feature readability present paper offer framework conduct experiment fig fifteen average readability metric function project function project maturity best fit linear trend line note project greater maturity tend exhibit greater readability remain four change percent five percent increase percent case study readability metric correlate strongly quality metrics different project also different release project conduct one additional study measure readability maturity stability fig fifteen plot project readability project maturity data show noisy statistically significant fourteen eighty p fourteen upward trend imply project reach maturity tend readable example every project readable every project six discussion study include significant amount empirical data relation local code feature readability believe information may way code write evaluate design program however caution data may truly relevant interpret represent comprehensive universal model readability furthermore nature descriptive model may suitable directly prescribe cod practice however believe useful identify code readability carefully consider start find length identifier name constitute almost influence readability zero percent relative predictive power observation fail support common belief make maintenance task much harder observation perhaps contribute significant movement toward code often characterize long descriptive identifier name movement particular influence community furthermore name like notation seek encode type information identifier name consider carefully study average identifier length near zero predictive power maximum identifier learn metric code readability seven validity threat one potential validity concern pool study particular take largely introductory intermediate computer science course imply little previous experience read write code compare industrial furthermore may possess amount bias certain cod practice result uniform instruction institution model build upon computer science university model readability accord nonetheless metric present show significant correlation three separate external quality furthermore study show even graduate widely vary educational professional background show strong level agreement metric indicate annotator bias type may small however study directly paper finally rather present final otherwise definitive metric readability present initial metric couple methodology construct metrics arbitrary population also consider methodology score potential threat validity capture intuitive notion readability rather constrain one provide specific guidance judge readability possible agreement would much greater similar study include precise definition readability list factor consider unclear model technique would perform similarly practice fatigue factor may affect level agreement bias model however observe significant trend variance score data across snippet set linear regression score variance slope zero value one suggest practice effect minimal eight future work present paper provide excellent platform conduct future readability experiment especially respect unify even large number accurate model readability show significant agreement factor contribute code readability would expect annotator personal lead somewhat different weight relevant factor would interest investigate whether personalize model adapt time would effective characterize code readability furthermore readability factor may also vary significantly base application domain additional research need determine extent variability whether specialize model would useful another possibility improvement would extension notion local code readability include feature feature calculate average maximum value per line may useful consider size compound number simple within block study intentionally avoid feature help ensure capture readability rather complexity however practice achieve separation concern likely less compel readability measurement tool present challenge term programmer access suggest tool could integrate ide eclipse way natural language readability metrics incorporate word seem readable author may quite difficult understand sixteen system could alert instance arise way similar identification syntax finally line conventional readability metrics would express metric use simple formula small number feature section suggest may possible use truly essential predictive feature would allow metric adapt easily many development process furthermore smaller number readability metric could modify order better describe readability certain meet specific concern nine conclusion paper present technique model code readability base human study involve computer science show possible create metric agree much agree consider relatively simple set code feature addition see readability describe metric exhibit significant level correlation conventional metrics quality defect code churn stability furthermore discuss consider factor influence readability potential improve program language design engineer practice respect important dimension quality finally important note metric describe paper intend final universal model readability reference one k singh integrate measure reliability sept ambler cod development vol five eight two three b order quantum make effective use space display graphics vol four four b defect reduction top ten list computer vol one five metric readability l test analysis six cannon ra miller milner h spencer recommend c style cod revision sixty specialize june engineer vol four seven r statistical l quality eight use program read bull vol seventeen two program readability versus comment vol fourteen nine sept forty g van program ming python holt evaluate complexity measure nine discipline program prentice hall vol fourteen nine receive degree computer science university degree university currently graduate student main research interest include static analysis underlie human factor relate program language design engineer practice r receive ba degree computer science mathematics university university currently assistant professor university main research interest include static dynamic analyse program improve quality information compute topic please visit digital library ten improve computer program readability aid modification vol eight eleven new readability yardstick j apply psychology vol twelve brook silver bullet essence engineer computer vol twenty four thirteen statistical analysis public administration fourteen j gosling b joy language specification fifteen r gun technique clear write sixteen documentation readability propose process improvement note vol three seventeen ae measure readability j maintenance vol seven two eighteen g weka machine learn workbench new intelligent information nineteen w pugh find bug easy twenty notice vol twelve forty available ea smith derivation validation readability index use technical human factor vol twelve knight ea phase implementation note vol sixteen three r study bootstrap accuracy estimation model selection l joint artificial intelligence vol fourteen two c w specification mine false l tool construction analysis r technique measurement archive psychology vol r b p l readability metric mathematics technical report complexity measure vol two four smog new readability j read vol twelve eight may b program indentation comprehensibility vol eleven thirty machine learn hill n ball use relative code churn measure predict system defect density l advance engineer computer vol ten read source code center advance study collaborative research pa tool assist identifier name improve readability empirical study l empirical use domain knowledge program understand ann vol nine fourteen c notation library se comparison consensus consistency measurement approach estimate reliability practical assessment research evaluation vol nine four h c cod rule best practice professional