estimate query result size proxy cache scientific malik burn v computer science university computer science physics astronomy university dame dame university abstract grow include sit proxy cache scientific important estimate size query make cache decision accurate estimate cache performance obtain extreme inaccurate estimate render cache totally ineffective present classification regression general method estimate query result size suit environment proxy cache distribute nature estimate query result size learn distribution query result examine sample data observe integrate proxy cache national virtual observatory federation astronomy experiment conduct show dramatically outperform conventional estimation provide cache performance proxy cache data mine scientific one introduction national virtual observatory federation astronomical use conduct temporal experiment lead many new al present size sixteen sit network bound performance limit federation expect permission make digital hard copy part work personal classroom use grant without fee provide copy make distribute profit commercial advantage copy bear notice full citation first page copy otherwise republish post redistribute list require prior specific permission fee c proxy cache al reduce network thus critical achieve scale previous work demonstrate cache malik al reduce sloan digital sky survey factor five principal site proxy cache scientific cache replicate object attribute table view near query may serve locally reduce network cache load evict object base expect yield size query result object equivalently network save realize cache object fivefold reduction upper bind realize cache perfect knowledge query result size practice cache must estimate yield similar challenge face distribute rely accurate estimation query result size include load balance replica maintenance al grid compute al web cache al distribute query optimization many estimation largely ignore estimation orthogonal issue accurate technique assume sufficient exist yield estimation translate proxy cache scientific estimate yield store small approximation data distribution object several learn maintain cache first proxy cache situate closer imply cache learn remote data generate incur io network traffic cache reduce benefit cache cache often different organizational autonomy privacy quite stringent sheth second cache constrain resource term storage thus data structure estimation must compact finally scientific query complex refer many attribute join multiple table traditional typically perform poorly case assume independence build yield estimate component object data important learn joint data distribution object exist learn statistical mate data include sample al wang kernel density al consider context query optimization within therefore complete access data always assume sufficiently compact learn object example popular method storage overhead construction cost increase exponentially number wang depart current make yield estimate learn distribution result size directly access data attempt estimate underlie object fundamental observation make possible query astronomy follow template form group query base syntactic similarity query within template structure set attribute differ minor ways use different group query result size may learn accurately data mine observe query template size result use match well modern form prepare use interrogate al result query within template scientific also include query query scientific program repeat question different different part single remarkably exhibit month long fourteen million query capture top fifteen capture query thus sufficient cache learn template yield distribution rather learn object plus call system estimate yield classification regression query result within template learn yield distribution machine learn classification tree regression classification tree learn distribution crudely regression refine future query template estimate learn yield distribution also use yield distribution require tune learn model computational complexity classification tree regression low allow generate update learn model quickly size learn model vary allow fit entirely memory make extremely space efficient use capture query refer multiple object enable estimate complex query accurately multidimensional range query function extensive experimental result cache framework show outperform significantly term accuracy meet compactness independence cache plus achieve save within five optimal compare use refinement include analysis result show compact fast detail comparison prevalent query two relate work performance cache depend critically upon accurate query result size estimate also true query query choose efficient query execution plan base cost estimate query rely statistics obtain underlie system compute estimate section review prominent statistical use query cost estimation consider applicability within cache previous work estimation query four namely parametric sample first consider data dependent within category approach al al mainly histogram base approximate frequency distribution object group object value bucket approximate value bucket parametric al assume object data distribute accord know function uniform normal accurate actual data also follow one sample base approach randomly sample object data obtain accurate estimate approach w sun assume data polynomial linear combination model function use regression determine polynomial approach require access data recently improve include query feedback ie result query execute first suggest idea use query feedback refine curve fit approach approach useful learn single object data follow smooth distribution neither valid cache cache request refer multiple object arbitrary data set approximate context al al use regression tree instead curve fit approach approach also limit single object remain open problem one find model function combination object use query feedback approach build attribute range predicate query correspond result size use select bucket refine frequency initialize use uniformity assumption single multidimensional construct method higher accuracy obtain initialize accurate single dimensional however latter obtain scan data make approach data dependent approach initialize involve expensive converge slowly method limit range query generalize attribute example function al improve upon subject information also incorporate al sit order refine inaccurate estimate query approach closely tie query thus applicable cache environment lim al build selectivity estimation broad class query query summarize feature selectivity quantize bucket finally use naive bay compute bucket query belong naive bay approach assume conditional independence among feature within bucket conditional independence hold scientific astronomy consist highly correlate spatial data assume independence among spa server cache wan lan client ad figure one network flow pair use cache attribute lead incorrect estimate without data use approach instead approximate frequency distribution data approximate yield function parameter space obtain query specific case multidimensional range query reduce approximate cumulative frequency distribution piecewise linear function piece decide decision tree regression learn linear function three yield estimation cache section describe architecture cache use query result size estimate cache replacement metrics define network performance system highlight cache make yield estimation challenge cache application cache proxy cache situate close user query cache evaluate whether service query locally load data cache versus ship query evaluate server latter bypass query query result circumvent cache change content elect bypass query cache minimize total network cost service query figure one show architecture network traffic minimize wan bypass flow server directly client plus traffic load object cache client application see query result data da cache ie da traffic query serve local cache order minimize wan traffic cache management algorithm make economic decision analogous problem choose load buy object service query object cache versus bypass cache rent send query evaluate sit federation recall object cache table view since object much query result equivalently buy far costly rent object load cache cache envision save heart cache algorithm yield hit rate save rate help cache make load versus bypass decision maintain object system regardless whether cache define yield estimate r e z p server bypass query load object wan lan query client result bypass yield cache pi j fi two si j one query yield estimate object size si fetch cost fi access query query j two occur probability pi j yield j intuitively prefer object yield per unit cache space measure utility cache object table column view measure rate network save would realize cache object cache performance depend accurate turn require accurate yield estimate incoming query per object yield j function yield incoming query challenge cache present challenge environment implementation yield estimation technique estimation technique even accurate adversely affect performance term resource usage minimize overall network traffic describe main challenge limit space cache provide limit amount space overly large direct efficiency cache al consume storage space could otherwise use hold cache data therefore yield estimation must concise remote data cache act proxy place near far automatically create access barrier cache server management create privacy concern make difficult access collect statistics data data mostly access via web service interface cache may choose invest process collect statistics data variety query cache serve scientific consist complex query typical query contain multiple specify multidimensional range multiple join function yield estimation technique general specifically assume independence estimate yield result size feedback group query collect learn distribution regress figure two estimate yield cache four describe section yield estimation technique use cache query figure two group similar query together learn yield distribution group learn distribution use query query result input ie collect sample data learn distribution use machine learn classification regression result concise accurate model yield distribution yield model query arrive estimate yield use model query execute query result together update model result incremental model yield distribution section illustrate learn process use example astronomy order provide accurate estimate query occasionally prefer estimate favor estimate section happen one query enough train data collect learn distribution two query specific information give advantage uniqueness index estimate query yield group query group query template query function define set object mention clause query object imply table view tabular b set attribute select r ra one one two two top parameter space yield one one two two one fifty one one zero six zero fifty nine zero one zero three yield b c b c b c template b yield distribution c class distribution figure three learn occur predicate clause intuitively template like function prototype query belong template differ give template figure three predicate b use join criteria predicate c table value function predicate specify query use aggregate function select clause template define choice attribute select clause user query template feature query yield collect query query influence yield form vector figure three b show yield query template parameter space refer possible combination choose respective domain query belong template refer one correspond yield range zero ti ti maximum yield query give template ie size relation query single relation size cross product join query learn approximate distribution yield within template actual yield distribution template n query set pair yn pi parameter vector query correspond yield group query within template class learn approximate class distribution define c classification function classification regression receive n query template learn class distribution use decision tree decision tree partition parameter space axis orthogonal partition exactly one class majority exactly one class partition base information gain minimize depth recursion use decision tree natural mechanism learn class distribution parameter space independence among parameter value assume learn c ie class yield ie value yield lose information regain lose information construct linear regression function within class class specific regression function give yield value different query belong class finally use cluster classification function k number class dynamically tunable parameter several use wrapper find suitable k highest observe yield value choose base domain knowledge refinement use estimate serve query result size result use feedback feedback combine query refine learn class distribution update decision tree also update correspond linear regression function update learn model collect fix n number query template multidimensional example illustrate use example astronomy template particular show accurately estimate distribution data combination attribute use query result figure four depict data distribution relation call photo store spatial location astronomical body attribute photo ra photo spherical use locate astronomical body point figure correspond astronomical body spatial location give ra attribute table figure show relatively higher density astronomical body corner thus ra independent distribution word joint probability product individual ra possible represent distribution use combination single dimensional ra thus query estimate yield accurately query distribution describe learn distribution indirectly learn query data one popular query astronomy involve function function often use select photo p ra g ra supply user reality function take radius parameter well photo photo photo ra photo ra data distribution b query four fifteen one four four two fifteen five four h h h h h l l h h h h h h l h h l l ra ra c query yield yield class h h h h h l l h h h h h h l h h l l ra ra e decision tree split f regression function figure four data assume constant simplicity show example figure four b show query match template data distribution circle show neighborhood object fetch figure four c show query parameter space see cache knowledge distribution query also correspond yield show logarithm query result size function parameter ra high variance yield query template give yield distribution learn learn observe query high h yield logarithmic value greater low l figure four distribution use decision tree split specific value ra learn purely high density purely low density figure four e show initial split split ra decision tree use estimation improve upon use regression decision tree leaf node look original yield value query approximate distribution linear regression show pictorially figure four f show straight line although regression function plane fall back provide consistent yield estimation service cache identify provide accurate estimate choose estimate favor arise two one new query group exist estimate learn distribution query new template occur query estimate learn distribution learn estimation go experiment show case give number rapid rate learn due locality query two query better estimate include query index uniqueness learn specific information make accurate estimate many case produce exact answer would expend space time learn trivial distribution uniqueness case adopt simple policy detect query template schema information return control cache obtain estimate available estimate query heuristically example identity query key field always return one row case site invoke however may expose interface five implement describe identify large class query extract feature treatment detect extract feature general highlight case dominate template detection query submit often use follow template template query construct prepare statement query submit user program ie query particular template previously argue web form application derive query make prevalent template generator two infer incoming query b detect new query change user query convert predicate canonical form order detect similarity even query take exact form order two commutative term predicate expression reverse construct canonical form query first rewrite expression normal form order accord numerical label schema example attribute first attribute second table base canonical form predicate expression construct template signature use match query exist signature unique value derive attribute use predicate expression allow fast template match template detection build upon exist query match al construct parameter important parameter encode maximum information available query thus include syntactic semantic information transform input describe important common predicate witness predicate predicate form col constant relational operator col attribute represent feature vector constant form col represent two semantic information feature difference capture distance clause function whether table predicate clause use function feature vector ie transform include semantic information function aggregate function count min construct top select clause may change yield drastically associate single feature indicate presence query number query number query percent query top fifteen yield query percent yield top one table one astronomy concept col ie column general define single attribute relation b scalar function return value c bite operator b two j expression form b b constant give template change consider predicate form define previously system parse query string point generalize string like may take arbitrary string six experimental result system develop cache cache currently introduce mediation federation astronomy current sixteen federation consider correspond evaluate present two level experiment macro level show performance use along cache particular show effect yield estimate cache network performance important cost metric measure efficacy cache outperform preserve realize cache compare exact prior knowledge query yield subsequently conduct evaluation tool important query experiment explore accuracy estimate size data structure run time learn experimental setup characterization take trace query sloan digital sky survey major site national virtual observatory federation astronomy system actively use large community trace fourteen million query generate close two network traffic template number dimension available feature vector index query four six four three four five query semantics range query single table function query single table function query single table function query two join table equality query single table function query three join table one zero zero zero one zero table two six important query analysis trace reveal astonishingly small number query capture table one total different query occur fourteen million query top fifteen account query top account ninety total network traffic yield confirm intuition query generate either web form application correspond query iterative scientific program thus trace exhibit remarkable amount reuse trace consider include variety access pattern range query spatial search identity query aggregate query accuracy derive storage scale number capture minimal space also mean large number query appear template give good train data base learn query yield accurately use table total table store server cache provide prototype cache prototype implement cache algorithm maintain virtual cache total size equal thirty size case thirty cache size equal large enough accommodate table five cache space keep schema information internal data structure cache cache object need minimum cache size equal size object comparison compare use two selectivity estimation sample sample randomly sample data choose large sample mean cache allocate space random sample give space cache maximum think cache allocate also give small storage space substantial method use query method query estimate network cost model network cost save difference optimal cache prescient sample zero b save comparison figure five cache performance impact yield estimation obtain two reason choose first method occupy space cache estimate store server thus may best method cache second estimate store per object basis allow us compare sample two popular yield estimation use k three yield low medium high n error metrics use along cache use amount network save cache measure evaluate evaluate accuracy consider average relative error yield estimation cache principal result define performance cache environment experiment conduct specific deploy use extract compare sample method also compare prescient estimator knowledge query result size ie perfect prescient estimator give us well cache algorithm could possibly perform query result size know apriori yield estimator cache outperform dramatically approach ideal performance prescient estimator figure five show total amount data send across network serve entire template learn model use prediction query occur also include network save ie amount data serve cache compare network save ideal performance prescient base estimate cache serve save compare also compare well prescient reduce network save five choose network save metric correspond cache hit rate cache result also show sensitivity cache accurate yield estimate nearly benefit cache may lose lose network save sample lose eighty sample primitive technique provide better point comparison however sample illustrate sensitivity cache play important role subsequent experiment decompose template describe take six representative account query table two dimension feature vector indicate number attribute provide information gain decision tree attribute useful unused attribute prune away decision tree algorithm also include index available attribute reference query template use query presence index provide better estimate notable feature include one many important query index thus may hard estimate yield accurately two yield estimation dimensionality ie many attribute require three user define function play important role subsequent experiment examine performance detail use query six accuracy describe performance compare accuracy sample within different experiment evaluation static build model use train query use model make test use test query compare accuracy static evaluation provide lower bind accuracy system update system estimate even accurately model get update test query addition keep distribution test query train query measure error use absolute error average query occur template ti j q q j q two q q actual estimate yield query q absolute error correspond well notion cost accuracy cache network traffic save io avoid range query often estimate yield accurately even index available figure six show result two attribute range query single table template error arise overestimation selectivity low underestimation selectivity high relative error reduce size train set increase sample perform much worse query overcome large size underlie data sample subset represent true data one eight six four two r r r e e v l e r e g r e v zero ten one eight six four two r r r e e v l e r e g r e v zero ten one eight six four two r r r e e v l e r e g r e v zero ten one eight six four two r r r e e v l e r e g r e v zero ten fifteen twenty thirty forty fifty fifteen twenty thirty forty fifty fifteen twenty thirty forty fifty train data size query template train data size query template train data size query template random random random template b template c template random one eight six four two r r r e e v l e r e g r e v zero ten one eight six four two r r r e e v l e r e g e r g g fifteen twenty thirty forty fifty fifteen twenty thirty forty fifty train data size query template train data size query template random random zero ten fifteen twenty thirty forty fifty train data size query template template e template f template figure six error result distribution poorly hump twenty occur learn unseen data individual provide improvement operate user define function figure six b template six c template show function query single table opaque nature function query make yield estimation difficult sample function template look object circular region rectangular region respectively often specify small random sample suffer sample enough object small region specify query perform poorly semantic information construct estimate often return constant every invocation function function query dominate see high number query scientific query often use mathematical bite quite common figure six consider query template specifically predicate query add two attribute compare result constant predict poorly add two approximate thus propagate random sample perform better query high yield query template learn precisely learn dis perform well join template figure six e join imply accuracy limit number table involve true sample accuracy join know limitation exist selectivity start higher error low train data rapidly learn reduce error significantly experiment perform well even small train set artifact user access pattern possess locality seem draw stable distribution many possess locality distribution value feature space disperse figure six f show distribution template query give near accurate estimate equality query index random sample perform well object sample give yield zero query learn model value attribute space object access randomly domain query attribute query class dangerous may spend storage computational effort avail avoid classification query include set simple rule detect equality query e r e q f r e b n fifty zero zero fifty e r e q f r e b n two four six eight one twelve opt relative error four eight relative error six one twelve zero zero two b figure seven perform better large fraction query locate index rely schema information data access query send section show performance query detail figure seven compare absolute relative query choose template choose template presence index query attribute provide better chance perform well compare relative error one evaluate performance per query basis graph show give relative error number query witness method large number query relative error high unlike query low relative error show query trace perform far better space utilization run time decision tree data structure use occupy little space table three size decision tree tend tree overall template summarize result query low requirement comparison total space requirement five sample histogram construct every attribute query space requirement also grow decision tree necessary equality query template little information classification thus build small decision tree even though many query template however cache system would rely estimate template index available height decision tree define performance estimate yield take time h h height decision tree practice decision tree height range one seven also need construct decision tree train data give attribute n train decision tree construction take time template size height six six seven four seven three table three space performance size height decision tree template time second sample thirty one one table four time performance also exhibit good performance table four time make estimate negligible per query decision tree small easily fit cache estimate require memory access construction decision tree regression function consume almost time much second template incur substantially time except join function output constant sample perform poorly overall owe io cost conduct query sample subset experiment perform processor memory run red hat eighty different execution time profile invest time model construction produce estimate nearly instantaneously time sample include time estimate query yield charge build data structure sample index thus time directly comparable sample cost incur data load update contrast prefer update data structure occasionally capture change update may perform build new decision tree current still use build distribution class query result use query refine update distribution estimation model suit stringent access performance cache evaluate approach sloan digital sky survey experimental result verify efficacy accuracy seven learn yield estimation data dictate use appropriate learn yield estimation algorithm learn result size base multidimensional parameter space template give problem predict result size regression lend naturally learn function parameter space learn linear polynomial regression function parameter space lead underfitting complex query result size nonlinear function parameter space therefore adopt initial classification step use decision tree partition parameter space hyper create homogeneous parameter space use regression function estimate yield alternative approach use regression tree like decision tree directly output result size obviate need learn subsequent regression function however compare combination classification decision tree regression construct regression tree take longer update also slightly accurate take much longer learn opt use learn variety reason bay assume conditional independence among input assumption true astronomy data scientific data set general fact assumption also make lead inaccuracy input data render support vector machine inefficient finally nearest neighbor also slow prediction time compute nearest neighbor every query point time consume eight future work present novel approach use data mine classification regression estimation adaptive future interest applicability nonscientific many benefit derive compact different class query data complex join easily learn make estimate less accurate also astronomy static update major data release issue arise include management large number consistency update inclusion feature broaden applicability various note however general purpose estimation tool existence enhance undermine ability estimate accurately merge relate offer promise approach reduce number induce grow number different query relation share attribute describe similar merge general template reduce without compromise accuracy however create general merge result miss value within feature thus apply study miss value decision tree al example want understand yield join query interpret two exist correspond also work complex query nest query query fetch image also interest integrate query provide accurate estimate query challenge past specifically function multidimensional query key feature cache ability provide estimate without access data ie remotely however preclude use seem could deploy handle special case provide good estimate use would mirror use query yet learn yield distribution index available author sincerely thank gray help selectivity estimation propose query author thank give us idea multidimensional example thank wang help finally would like thank anonymous help us improve presentation paper reference g v c approximate multidimensional aggregate range query real attribute proceed conference management data g c learn k nip b shepherd j h h query size estimation use machine learn advance e history abridge proceed international conference large data base build without look data proceed international conference management data lim l wang j histogram string selectivity estimation proceed international conference large data base j l c flexible scalable query plan distribute heterogeneous conference artificial intelligence plan k park r scalable query containment check web semantic cache proceed international conference data engineer n exploit statistics query optimization proceed international conference management data n l multidimensional histogram proceed international conference management data p proxy cache proceed symposium technology k n r shim k approximate query process use proceed international conference large data base c n adaptive selectivity estimation use query feedback proceed international conference management data estimate block transfer join size proceed international conference management data h grave quality quantity second conference proxy cache scientific h k competitive symposium analyse computation r j query size estimation adaptive sample journal computer system science q j f proxy cache proceed web sit conference large data base q w proxy cache function proceed international conference advance malik r approach federate proceed conference innovative data research malik burn r c bypass cache make scientific good network proceed international conference data engineer machine learn hill c j cache synchronization source proceed international conference management data c loo b j adaptive precision set cache approximate value proceed international conference management data open extend efficient estimation number cluster proceed seventeenth international conference machine learn morgan san v e estimation distribution application load balance journal v e p j e j improve selectivity estimation range predicate proceed international conference management data j r program machine learn morgan san ca sloan digital sky survey p price access path selection relational management system proceed international conference management data l stockinger h stockinger k f query grid environment proceed international conference apply sheth p j federate manage distribute heterogeneous autonomous compute survey three g v learn proceed international conference large data base gray j r p z malik j c j public access sloan digital sky server data proceed international conference management data j wang approximate computation multidimensional aggregate sparse data use proceed international conference management data w sun ling n r instant accurate size estimation method join selection environment proceed international conference management data weka weka machine learn project z ling c x sheng miss useful miss value decision tree knowledge data engineer vol seventeen