rate allocation buffer management differentiate service department computer science university architecture may appear computer network special issue new abstract novel algorithm buffer management rate allocation present provide loss delay differentiation traffic class network router algorithm call job provide delay loss differentiation independently node without assume admission control police contrary exist schedule buffer management perform single step relative whenever possible absolute class support simulation include result heuristic approximation present illustrate effectiveness approach compare new algorithm exist loss delay differentiation one key word buffer management schedule service curve service work support national science foundation grant career lan version paper ninth workshop service introduction guarantee packet network often accord two criteria first criterion whether guarantee express individual flow group flow second criterion whether guarantee express reference guarantee give class relative whether guarantee express absolute bound absolute provision early result integrate service service model seven focus absolute guarantee due issue lag demand absolute interest eventually shift relative guarantee since late service five work group discuss several relative guarantee one exception expedite forward service current three sixteen relative discuss within context define service differentiation qualitatively sense class receive lower delay lower loss rate without ing differentiation recently research study try strengthen guarantee relative propose new buffer management schedule support relative six thirteen probably best know effort proportional service model thirteen fourteen attempt enforce delay loss rat successive priority class roughly constant two priority class service could delay class half delay class without specify upper bind delay paper express provision within formalism inspire network calculus two present rate allocation drop algorithm single output link buffer management schedule job capable wide range relative well absolute guarantee loss delay without assume admission control police job two unique one rate allocation link schedule buffer management approach together single step two job support relative absolute class job algorithm operate follow upon arrival prediction make delay currently traffic service rat allocation class adjust meet delay necessary traffic class selectively drop algorithm provide delay loss differentiation independently node delay loss rat thus dependent guarantee number traverse paper organize follow section two give overview work relative guarantee section three four algorithm buffer management rate allocation section five propose heuristic approximation algorithm section six evaluate effectiveness algorithm via simulation section seven present brief two relate work significant amount literature differentiation prevent us presentive comprehensive survey relate work schedule buffer management relative guarantee discussion section thus focus devise improve best service propose scheme two relate work relative service differentiation treat delay loss differentiation orthogonal issue common approach use schedule achieve delay differentiation use buffer management perform loss differentiation schedule majority work relative service differentiation suggest use schedule nineteen schedule relative delay proportional queue control mechanism rate five algorithm dynamically adjust service rate class meet relative service rate allocation base upon backlog class main difference method use calculate service rat scheme bear similarity schedule component job sense dynamically adjust service rate meet relative different discuss priority implement schedule algorithm dynamic packet arrive time r assign priority follow packet time r assign packet priority r si priority coefficient transmit order fifteen si class one delay delay proportional dynamic priority mechanism similar use estimate average delay class determine priority class thus priority packet set one estimate average delay class average entire link si ie finally thirteen use combination average experience delay determine priority give nine r one g one thirteen recommend set g contrast present section rate allocation present paper consider current state past history link addition use information make future delay order improve performance schedule conclude briefly discuss relation work recently propose score approach score provide delay guarantee flow without require state information network basic idea meet delay keep track delay experience along path source destination store experience delay packet store information use adjust priority meet architecture extension work couple proportional delay differentiation delay guarantee different present paper store state information buffer management key buffer management algorithm backlog controller specify time instance traffic drop dropper specify traffic drop refer recent survey article extensive discussion buffer management backlog initial buffer management active queue management network seven eighteen motivate need improve performance without consider service recent research three zero enhance initial order provide service differentiation among backlog network random early detection red probably best know algorithm red motivate goal improve throughput highly load network red operate drop traffic backlog node grow large red two threshold backlog node denote h ay red estimate compare estimate two q h red average queue size q drop arrival q red drop incoming traffic th red drop arrival probability p q zero p q r one function increase q several attempt improve extend red propose fourteen seventeen twenty thirty example blue seven use different metrics characterize probability drop arrival instead backlog algorithm use current loss ratio link utilization input g rio eleven red red aim service differentiation scheme different drop different class order ensure loss differentiation context idea use different threshold value pursue thirty use flow discriminate address pair random early mark four close spirit drop algorithm job since treat problem mark drop optimization problem objective maximize utility function subject constraint output link finite capacity four problem reduce algorithm mark probability exponentially dependent cost link cost directly buffer occupancy twenty propose replace red controller achieve faster convergence desire queue length increase robustness system widely use drop scheme discard full buffer long time discard think viable solution recent implementation study forty demonstrate complex drop scheme discard already present buffer viable design even high data rat technique call packet transmission queue discard comparison lower queue delay wait system note drop packet influence delay currently queue include lower priority first complete buffer partial buffer share always drop priority queue show fourteen provide mechanism loss differentiation assign dedicate amount buffer space class drop traffic dedicate buffer full use partition scheme similar decision drop make look aggregate backlog class static buffer suitable relative service differentiation since knowledge incoming traffic available fourteen proportional loss rate dropper fourteen specifically design support proportional differentiate service enforce ratio loss rat two successive class remain roughly constant give value two use last estimate loss rate class whereas memory average drop distance add six variant aim provide loss differentiation regardless choose compute loss rat two recent idea delay loss differentiation issue handle separate duplicate use service provide service differentiation two traffic class first class absolute delay bind second class lower loss rate delay guarantee first class enforce drop traffic exceed give delay bind recently propose try provide proportional delay proportional loss differentiation single algorithm time keep state information set k pair class represent number successfully transmit last k packet compute distance current state system failure state define state mi less desire value lower distance higher priority assign packet author conjecture set k si si select use provide proportional loss delay differentiation three approach joint buffer management rate allocation section introduce key job algorithm provide detail description first give informal overview overview assume output link perform buffer arrive traffic traffic transmit buffer use schedule algorithm dynamic service rate allocation class traffic class transmit order admission control police traffic set performance specify algorithm set example three class could form delay delay loss rate loss rate delay first two relative last one absolute constraint set mix relative absolute since absolute may render system infeasible may need relax assume give precedence order use determine relax case unfeasible system service rate allocation operate follow arrival prediction make delay traffic service rate allocation traffic class modify meet exist feasible rate meet traffic drop either new arrival current backlog view service rate allocation term optimization problem relative absolute bound loss delay give example paper consider guarantee statistical eight e f e f e l j time delay backlog b project input curve project output curve project delay figure l delay interval st one figure one b projection perform time time link buffer capacity system objective function aim minimize amount traffic drop secondary objective aim maintain current service rate allocation first objective prevent traffic drop unnecessarily second objective try avoid frequent service rate allocation solution optimization problem yield service rate allocation class determine much traffic must drop explore principal optimization assume sufficient compute available solve optimization problem arrival link later section approximate optimization heuristic incur less computational overhead formal description next describe basic service rate allocation drop link capacity c total buffer space b assume traffic mark belong one q traffic class general expect q small q four class mark index use convention whereby class smaller index require better level use r l denote traffic amount drop traffic class time use denote l traffic buffer r zero otherwise assume schedule l c least one class remark exception evaluation section take interpretation traffic throughout paper output link regard serve simultaneously traffic several class since actual traffic send interpretation traffic idealistic however schedule closely approximate rate guarantee available introduce arrival curve input curve output curve traffic class time interval zero arrival ai input curve class z define ar r r ni r jo one difference arrival input curve amount drop traffic output curve transmit traffic interval zero give e jo refer figure one illustration figure service rate adjust time packet drop occur time vertical horizontal distance input curve class z respectively backlog delay illustrate figure one time delay di delay arrival transmit time backlog delay time define r r mar r r r three upon traffic arrival say time new service rat amount traffic drop class set system meet time greater satisfy time relax predetermine order determine rate allocation make projection delay traffic purpose projection assume current state link change time specifically indicate project value tilde time assume one service rat remain ie two ie zero three packet drop ie li r zero project input curve project output curve backlog eight follow r r four refer project horizon class denote four time project backlog notation make become zero min zero delay time interval four w define project delay r r time delay sense project delay time delay encounter traffic element depart system time figure b illustrate project input curve project output curve project delay make time figure value indicate dash line figure include project delay time four service rate adaptation drop algorithm section discuss algorithm perform service rat allocation class decision drop traffic term optimization problem time arrival occur new optimization perform optimization variable vector x contain service rat amount traffic drop l optimization problem form minimize f r x zero j one x zero one six f objective function objective function present subsection choose amount drop traffic change current service rate allocation minimize optimization problem system optimization time do knowledge system state time know r r time ai f remainder section present optimization function optimization use reference system practical schedule drop compare system two type system describe output link define desire service differentiation system system specify physical output link first constraint state total backlog exceed buffer size b di b time second system constraint enforce schedule output link link c hold time f zero note ie link may idle even positive backlog undesirable network need achieve high resource utilization system enforce transmission rat loss rat also amount traffic drop bound current backlog obtain zero zero time consider two type relative absolute either delay loss rate number type limit since absolute may result infeasible system one may need relax certain time assume set assign total order relax give order system become feasible addition class simply ignore absolute delay enforce project delay class z bind di ti condition hold delay bind di never violate f relative delay proportional delay differentiation class example two class enforce relationship di di delay class two delay class constant absolute delay need present stringent relative differentiation useful differentiate traffic less stringent time resource contention thirteen since general several class likely different delay notion delay class need specify example delay class could specify delay packet head queue maximum project delay seven via measure choose measure call average project delay r time average project delay class average horizon seven eight j provide flexibility schedule decision enforce relative delay strictly allow slack use metric eight translate notion slack tolerance level write relative delay nine ten eleven twelve zero e one tolerance level specify class adjust accordingly note delay seven nine value exception optimization variable x know time next discuss loss rate similar delay several sensible define select loss measure denote express fraction lose traffic since begin current busy period time pi express fraction traffic drop time interval r li j dare last equation value except l know time definition absolute relative loss rat absolute loss constraint specify loss rate class z define never exceed limit li pi li relative loss desire proportional loss differentiation class similar provide certain slack within class one e form k one k seven e k one target differentiation factor zero l indicate level tolerance note seven nine eleven twelve system control time service rat r packet drop li refer expression define seven nine one one twelve function service rat packet drop objective function provide system satisfy objective function select solution x even though choice objective function policy decision select two specific believe general validity one avoid drop two avoid change current service rate allocation objective ensure traffic drop alternative way second objective hie hold feasible service rate allocation long possible give first objective priority second objective give sup b zero three traffic b r zero h zero find one nine subject ignore necessary relax obtain feasible solution l r figure two outline heuristic algorithm follow formulation objective function express term cost function aa f x f r n two l three c link capacity first term express change service rate allocation second term express time note time part optimization variable know value thirteen use quadratic form two since r r zero link backlog time scale factor front second sum thirteen ensure traffic drop dominate term objective function conclude description optimization process job structure objective function make nonlinear optimization problem solve available numerical five next present heuristic approximate optimization present previous section significantly lower computational complexity present heuristic regard first step towards router implementation approximate nonlinear optimization problem one present section four perform fuzzy neural network however expensive therefore choose different approach decompose optimization problem several less intensive heuristic algorithm present maintain feasible rate allocation buffer occur delay violation predict time heuristic pick new feasible rate allocation drop traffic unless buffer overflow test perform every packet arrival periodically ten set contain absolute may infeasible certain time need relax heuristic algorithm follow order system priority absolute turn priority relative system become infeasible heuristic relax relative yield feasible solution heuristic relax one absolute overview heuristic algorithm present figure two algorithm consist number small one situation require adjust service rate allocation drop next present associate computation buffer overflow arrival time cause buffer overflow one either drop arrive packet free enough buffer space accommodate arrive case satisfy fourteen heuristic pick solution li satisfy fourteen twelve set e zero obtain unique solution solution violate relax satisfy li determine algorithm continue test delay constraint show figure two algorithm specify amount traffic drop class however algorithm select position queue drop traffic algorithm assume drop policy heuristic present section buffer overflow algorithm make delay every l packet selection n represent complexity algorithm performance schedule respect ring simulation experiment describe section six perform value l exhibit good performance test use current service rate allocation predict future delay constraint viola heuristic distinguish three case case one violation case service rat unchanged case two violation violate heuristic algorithm determine new rate value define nine transform set e zero together property one obtain system algorithm pick solution solution violate relax satisfy case three violation resolve violation entirely trivial require recalculate traffic need drop meet l simplify task heuristic ignore relative violation occur hie absolute heuristic start conservative estimate delay backlog time heuristic use fact e seven eight verify refer figure one one b use big h write sufficient condition class z delay bind di one one di di fifteen heuristic algorithm select fifteen z initially rat traffic drop set li zero since least one violate least one class fi l p apply greedy method hie ale ho l zero simulation time figure three offer load redistribute rate one class do reduce class h one l class pi one feasible achieve p l class adjust li increase one z minimize number drop sixteen never increase point violate six evaluation present evaluation develop paper via simulation one determine well desire service differentiation achieve two determine well heuristic algorithm section five approximate optimization section four three compare algorithm exist proportional differentiate service four examine effect job flow evaluate follow four scheme job optimization refer optimization algorithm describe section four job heuristic heuristic algorithm discuss section five unless buffer overflow test delay every n packet fourteen drop schedule algorithm fourteen discuss section two since provide better service differentiation include result note support absolute guarantee traffic class present discuss section two since provide loss differentiation assume simple algorithm discard support absolute guarantee present three simulation experiment first experiment compare relative differentiation provide job optimization job heuristic without specify absolute single node second experiment augment set absolute loss delay highest priority class show job effectively provide relative absolute differentiation single node first two experiment take account possible effect protocol use effect job traffic third experiment examine effect job traffic network mix traffic six one zero six j x ten zero ten two four six eight ten simulation time four six eight ten twelve simulation job optimization b job heuristic l class class h two four six eight ten twelve simulation time zero two four six eight ten twelve zero simulation time c two four six eight simulation time e job optimization zero two four six eight simulation time f job heuristic three two one two four six eight zero two four six eight simulation time e simulation time h figure four experiment one delay differentiation graph show delay successive class absolute delay value h target value indicate dash line k four six four five zero six ten e ten thirteen h h h h one one simulation time job optimization simulation time b job heuristic simulation time c simulation time one two four six eight ten one four six eight ten simulation time e job optimization simulation time one job heuristic class one q one fourteen one zero two four six eight one two four six eight ten simulation time g simulation time h figure five experiment one relative loss differentiation graph show loss rat successive class loss rat e h target value indicate dash line two simulation experiment one relative differentiation first experiment focus relative service differentiation include absolute c seven class length experiment twenty second simulate time start empty system experiment incoming traffic compose superposition source average time number source active give time oscillate follow sinusoidal pattern source generate fix size six result offer load plot figure three time class contribute aggregate load yield symmetric load realistic environment one would expect less high priority traffic low priority traffic therefore symmetric load regard realistic occur burst traffic relative differentiation want ratio four delay two successive class ratio two loss rat two successive class thus job set k four two z tolerance level set e e job optimization e one job heuristic result experiment present figure four five graph delay loss rat respectively successive class job optimization job heuristic plot delay loss value average move time size one link load ninety link capacity time zero six ten fifteen provide desire service differentiation around target value job optimization job heuristic mostly due tolerance value e e selection tolerance value e e job present smaller value e e reduce incur work system load low time six ten sixteen job optimization manage achieve delay differentiation albeit far target value plot figure four provide differentiation system seem unstable particularly transient change load however link absolute value delay small class regardless schedule algorithm use show figure e h figure e h also show absolute value delay comparable scheme figure five five c observe job optimization show transient respect loss differentiation link change overload state job heuristic seem suffer problem much without offer explanation speculate transition overload system perfect relative loss differentiation achievable without violate without drop even buffer full exhibit transient since provide loss differentiation show figure five finally total loss rate interest scheme may provide excellent proportional loss differentiation overall high loss rate figure five e g prove loss rat job optimization heuristic similar job optimization heuristic average loss rat equal loss rate obtain policy plot figure five h show experiment scheme drop buffer overflow occur simulator use two describe c size fact multimodal two thus simulation simplify model fourteen fifteen thirty er one one one one one zero g one six eight ten simulation time r zero two four six eight ten simulation time b one remove simulation time c class class e zero one one l l figure six experiment two absolute delay differentiation graph show delay result job heuristic l class three l class four one class four class three class two class one l class four class three class one two four six eight simulation time two four six eight one two four six simulation time b one remove simulation time c figure seven experiment two absolute loss differentiation graph show loss rat class result job heuristic simulation experiment two relative absolute differentiation second experiment evaluate well algorithm satisfy mix absolute relative delay present result job heuristic support absolute guarantee main objective second experiment show compare scheme treat drop schedule orthogonally use joint buffer management rate allocation approach job allow satisfy absolute relative time drop traffic absolute delay constraint verge violate consider simulation setup relative delay experiment one add absolute delay constraint class one c replace relative loss constraint class two absolute loss constraint class call scenario give relative delay experiment l class implicit absolute delay four class two sixteen class three class four remove class one class two avoid implicit absolute class four call result constraint set one remove also include result job heuristic experiment l class replace class refer constraint set figure six plot absolute delay figure seven plot loss rat class average time length one discuss result three constraint set propose concern experiment figure six show heuristic maintain relative delay differentiation class thus enforce implicit delay class two three four large number absolute delay system easily become value e arc ge figure eight experiment three network topology number link denote link infeasible point follow two first figure seven show loss rat class two three four similar result heuristic relax relative loss meet absolute delay second figure six show absolute delay constraint sometimes violate however rare class delay less class packet delay always remain reasonably close delay bind experiment one remove figure six b show without class ratio delay delay exceed factor ten high load constraint set absolute delay constraint never violate figure seven b show consistently enforce packet drop finally experiment figure six c show without delay class high five experiment three multiple node simulation traffic finally present simulation see approach still able provide desire service context mix traffic multiple hop propagation delay also want examine level flow receive propose guarantee effect implement variant job heuristic network simulator one third experiment simulate network topology show figure b four connect three link source sink connect independent one zero link link propagation delay three link propagation delay one four class traffic composition traffic mix give table service guarantee give table two flow denote start transmit time zero flow transmit time ten flow consist size experiment last seventy second simulate time table one two class seven two three consist traffic class four consist traffic offer load asymmetric since initially class one contribute ten aggregate value class two three four figure six b c appear similar especially since emphasize arc consistent flow class type al protocol two j four two j four greedy greedy greedy exponential exponential exponential na na na na na ten shape na na nineteen na na na table l experiment three traffic mix traffic mix flow identical traffic mix describe flow source run congestion control shape characterize use class service guarantee l two one four four k four four na na one two j four experiment three service guarantee guarantee identical router class two contribute class three contribute contribute forty thus traffic simulation experiment expect actual network since traffic account less ten traffic two make choice could examine effect mix two type traffic easily graph queue delay loss rat first three figure nine start time zero give aggregate arrival rate router four always less total output capacity router four never backlog router four thus queue delay loss rat constantly equal zero exception figure nine c g k individual packet delay represent point figure nine represent average slide window size five figure nine show propose algorithm manage enforce propose service guarantee node couple absolute delay bind class router one algorithm seem respond appropriately transient change introduction additional traffic time ten finally present flow four flow traverse four router provide absolute delay guarantee two class one add delay guarantee propagation delay node one infer delay less four x loss rate encounter less one l four four eight v zero one six v zero e six e g twenty thirty forty fifty simulation time router zero simulation time b router one loss rat class two class three simulation time c router class one twenty thirty forty fifty simulation time e router two delay ten twenty thirty forty fifty sixty simulation time router one class one loss class two class three ten twenty thirty forty fifty sixty simulation time two loss rat ten twenty thirty forty fifty simulation time g router two class one seventy ten twenty thirty forty sixty simulation time h router two class one loss rat lass two simulation time router three delay simulation time router three loss rat five two g one thirty zero two one zero six j five three e six r zero two one g time k router three class one simulation time l router three class one loss rat figure nine experiment three node simulation traffic graph show delay loss rat encounter router class one traffic delay loss rat class four router absolute target indicate straight dash line e one l el ten e e one bo f twenty thirty forty fifty sixty simulation time packet delay thirty forty simulation time fifty b one twenty thirty forty fifty sixty simulation time c loss rat one simulation time end rat simulation time e throughput figure ten experiment three packet delay graph represent individual packet delay encounter flow one delay slide window size five b loss rat c ratio loss rat throughput obtain well aggregate throughput obtain four flow e implicit delay guarantee indicate dash line delay bind implicit loss guarantee also indicate dash line four eight seven six five four j two one eight one zero six five twenty figure ten present individual packet delay encounter flow flow delay indeed always nineteen see algorithm propose use conservative estimate delay enforce delay bound since flow one encounter total delay close fifteen figure b also suggest proportional delay differentiation hold respect delay class three four even relative delay enforce basis result explain fact propagation delay negligible compare queue delay encounter conversely propagation delay neglect compare queue delay case flow hence proportional differentiation close factor plot packet loss rat figure ten c see loss rate bind flow one respect even though load one however show figure zero proportional guarantee loss rat class translate guarantee flow loss rat consistently desire two result mostly due fact different flow present network probability suffer packet drop since greedy flow last figure ten graph throughput receive flow well aggregate throughput receive flow throughput guarantee class see flow consistently get throughput greater fifteen close three general result show strong guarantee loss delay class one realize expense low throughput readability purpose show throughput plot three flow present value close conclusion third show algorithm able provide desire service guarantee multiple node simulation mix traffic also show service guarantee could translate performance seven propose algorithm call job joint buffer management schedule relative absolute guarantee without information traffic time absolute guarantee satisfy simultaneously job selectively ignore guarantee job algorithm reconcile rate allocation buffer management single scheme thereby acknowledge schedule drop output link issue address together job implement desire service differentiation base delay traffic use update service rate class amount drop show set simulation experiment job provide relative absolute guarantee delay loss thereby demonstrate virtue approach combine schedule drop examine effect algorithm flow future work extend approach present paper congestion control point departure attempt express exist active queue management scheme red eighteen take account queue delay router four always due topology computation delay guarantee delay guarantee sixteen well topology loss four always guarantee offer four one three three computation loss guarantee get loss bind one also respect rio eleven controller twenty within formal framework paper additionally currently work router nine reference two packet size sequence may three g j j b j delay bind revision draft four low enhance random early mark algorithm flow control h proceed page te five blake black e w architecture differentiate service six create proportional loss differentiation predictability page june seven r clark integrate service architecture overview eight c chang performance guarantee communication network springer nine n j quantitative service differentiation network two zero one two eight ten n j f quantitative assure forward service proceed new york june appear one one clark w fang explicit allocation packet delivery service network six four august twelve r h g schedule quality service guarantee via service proceed fourth international conference computer network page las thirteen c proportional differentiate service thesis university fourteen c p proportional differentiate part loss rate differentiation packet drop proceed page pa june fifteen c p differentiate service delay differentiation packet schedule proceed page boston august sixteen b editor f baker j bennet k w v c expedite draft seventeen report university michigan eighteen v random early detection congestion avoidance one four nineteen v resource management model packet network network three four august twenty c v v w gong design improve support flow proceed volume three page anchorage ak p hurley p provide low delay within best effort three may see also k k expedite forward june l queue volume computer sons new york h kroner g p boyer priority management aim switch nod select nine three packet drop aim network three quarter survey drop front strategy aim proceed page san ca march j n buffer management schedule enhance differentiate technical report university august j n job joint buffer management schedule differentiate service proceed page june lin priority queue allocation traffic control aim integrate switch system journal select g nine thirty lin r morris dynamics random early detection proceed page three one proportional queue control mechanism provide differentiate service proceed international symposium computer information page turkey n r v delay differentiation adaptation core k v differentiate service architecture c r pan b k choke stateless active queue management scheme approximate fair allocation proceed page k r g generalize processor share approach flow control integrate network case network l three june p nain c v achievable service differentiation token bucket mark proceed page ca june k solve constrain nonlinear program research edit l provide guarantee service without management proceed page boston august g packet schedule delay loss differentiation computer io seven two three l j forty b ak buffer management scheme support queue journal select seventeen six l virtual clock new traffic control algorithm packet switch network nine two one one may one