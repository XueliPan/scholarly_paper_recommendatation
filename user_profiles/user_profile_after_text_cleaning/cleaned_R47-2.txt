interaction service n c shih institute information science abstract human crucial part many business process management data represent consequence many human task simply support create update data compliant schema propose interaction service generic web service use human task provide web interact update data addition visual interface design tool provide interface create web interaction service support subject office management information presentation user general term design experimentation user interface management one introduction many must interact human current implement nine deal process model user beyond scope hand adoption data model give rise challenge since sophisticate data represent pass engine human task large chunk program interface simplify however sophisticate data govern sophisticate thirteen fourteen impose stringent validity user develop user sophisticate data require advance program skill expensive motivate development web service eleven interaction service architecture eight undertake generic task interact human web interaction service simplify development human task since data represent many human task simply support create update data describe schema permission make digital hard copy part work personal classroom use grant without fee provide copy make distribute profit commercial advantage copy bear notice full citation first page copy otherwise republish post redistribute list require prior specific permission fee copyright user human interaction service maintain web server provide human task user accept request task communicate data provide web interact update data since web service support web general data human task communicate firsthand application data without unnecessary data hand server interaction service must able manage large amount uncompleted interaction request efficiently interaction service distinguish role management system management follow reference model client form fill interact central enactment service client application interface two pull function enactment service service approach enable enactment service concentrate process control interaction service open independent drive engine development human task simplify interaction service accompany interface generation component tool author develop interactive component generate user prescribe automatically six data produce component guarantee four five visual interface tool designer enable interface tailor user component generate two relate work point section one interaction service realize architecture distinct widely adopt reference model two hand approach consistent three white paper publish sap extension human user interaction service use support task define white paper implement people necessary support order use interaction service many management encompass form development tool form design form visually recent form development tool produce form convert form data application data seven provide support still rely make conversion guarantee schema compliance since form development tool may appear clumsy multiple dynamic form must form user interface sophisticate focus single rather static form though vocabulary contrast user generate less flexible guarantee schema compliance dynamic moreover support user intrinsically support interface target tool three interaction service application human task typically host human task server control engine human task may realize function obtain service service interaction service service provider provide web human interact human task major design goal interaction service generic independent use variety function depend service consequence service must cohesive objective provide web user exclude directly require objective instance support data management user notification user management task assignment support user authentication authorization use underlie security mechanism though system architecture interaction service show figure one human task may invoke interaction service issue user interaction request provide web user interface user create update data compliant certain schema accomplish interaction request interaction service drive ie enable server program behind web server refer interaction server actually perform task generate deliver web page web user service interaction server actually execute two distinct thread current implementation rely interactive component generate prescribe six component keep web server client whenever user complete web interaction submit request data interaction server interaction server complete interaction request call back human task pass result data user interaction service may accept interaction request multiple human task may come different process even drive different simply use identify interaction request independent involve task process engine process instance interaction server support four user command issue web client submit complete abort user select submit update data possibly update data update user begin data submit last time user interaction consider finish user execute complete abort complete cause current data submit final result use read mode finish user interaction without submit data abort exception fig one system architecture human task issue interaction request must provide operation interaction service return result submit operation trigger user command frequent operation trigger depend parameter four support tool develop mainly find control accept four input schema document compliant schema user interface file style sheet ten base schema file layout column layout form control element control label component generate hierarchy form user edit input document presentation style generate form specify give style sheet generate form dynamic ordinary form provide appropriate insertion user select work document always keep compliant schema work document yet valid component able generate require element slot prominent hint user produce valid document eventually support neighborhood element may insert neighborhood around insertion consequence user able make desire without locate exact position hand position interface design develop visual designer interface layout style user interface generate tool support user create edit file file associate schema see effect interface immediately invoke component sample document tool support invocation external custom control generate user interface custom control easy build support small fix set function order layout engine custom control also easy use associate element type thus build use interface program experience could make generate form twelve powerful form since component would exploit full power anyway favor high availability form power five bind control human task communicate interaction service sophisticate data data refer interaction server support association control generate web interface form load initially control initial value set current value associate parameter user issue submit complete form interaction server update parameter current value associate control call human task get update data submit user invoke operation appropriate time note interaction server put logical web page accept form must contain object control sophisticate data standard control associate issue command submit complete abort layout control form restrict thus flexible enough satisfy different simplify development form interact interaction server build tag library hide program detail client server tag library custom tag associate standard control form custom tag resemble correspond tag function support parameter bind additional feature moreover tag library custom tag associate component tag library implement convert custom tag associate tag parameter bind beyond need special treatment page convert form information regard parameter bind record generate form hide later submission interaction server similarly current interaction request also record hide variable data submit interaction server interaction server able update bind control six current status conclusion finish implement interaction service run apache tomcat axis use tag library create custom tag library use hibernate run store information regard uncompleted interaction request engine use one start use service sample purchase process institute author affiliate service management increasingly adopt web architecture research work aim exploit new make better management system term openness effort application development represent sophisticate application data help development interaction service take advantage fact bring additional benefit minimize effort program web user concentrate overall system application moreover open generic architecture service independent simplify seven reference one two reference model eleven three sap extension people four wang n c shih handle syntactic editor document engineer five n c shih wang avoid syntactic extreme markup august six n c shih generate user document engineer unite kingdom seven office eight oasis reference model service orient architecture ten official committee specification nine oasis web service business process execution language version twenty committee draft ten cascade style sheet level two recommendation may twelve eleven web service description language eleven note march twelve ten second edition recommendation march thirteen schema part one structure second edition fourteen schema part two second edition recommendation recommendation