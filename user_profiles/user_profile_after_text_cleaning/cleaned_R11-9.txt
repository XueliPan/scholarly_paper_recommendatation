navigation milo yam university milo abstract shop typically offer vast number product thereof useful often make navigation site identification ideal purchase notion ideal differ among confuse experience demonstration present shop system assist suggest effective navigation specify criteria continually adapt take navigate base set novel adaptive provably optimal query evaluation one introduction shop extremely popular nowadays millions purchase shop provide web interface common shop offer vast number product thereof fourteen eight useful time make shop rather confuse indeed often difficult find specific navigation path site ie flow user click action lead optimal result best suit need give user consider example store allow assemble variety component part store offer various screen consider user interest buy cheap computer processor inside suppose user get good price first register store club pass advertisement page provide discount finally buy certain set include certain processor purchase together yield overall price clearly user might interest know information deal best price alternatively user may prefer delivery time minimal may want use experience view popular navigation purchase research partially support project science foundation permission copy without fee part material grant provide copy make distribute direct commercial advantage copyright notice title publication date appear notice give copy permission large data base endowment copy otherwise republish post redistribute list require fee special permission publisher nine august copyright endowment zero thereof assemble computer instance propose cheap deal among user would carefully check quality deal present shop system assist suggest effective navigation specify criteria processor inside low price delivery time popularity user start navigation site may specify rank function interest system compute propose initial set rank navigation flow conform user continue navigation take account present may also make different propose system instance might propose purchase four processor user might nevertheless choose case new consistent actual make user automatically compute namely system dynamically propose new date user current navigation user may similarly modify selection criteria prefer rank several challenge arise development system first number possible navigation flow give large infinite may navigate back forth page hence enumerate rank relevant flow clearly option second critical maintain fast response time order provide pleasant user experience finally explain computation must flexible adaptive account user address need use novel dynamic adaptive query evaluation algorithm algorithm formally prove optimal six experiment show efficient practice demonstration scenario demonstrate operation web shop simulate store yahoo shop fourteen shop base data obtain yahoo shop reason use simulate version technical avoid commit actual purchase site first shall present audience original version yahoo store without component ask shop component like shall turn demonstrate simplify improve shop experience show specify interest rank correspond best navigation flow store present give initial illustrate different possible system specifically consider follow recommend flow contrast make different recommend dynamically change search criteria rank illustrate system continually adapt concrete make change also compare overall deal price obtain initial one obtain without emphasize also save time invest search deal last part demonstration allow look system specifically show graphical query construct user request possible match navigation flow illustrate main feature adaptive query evaluation algorithm two technical background provide section background model web query describe model serve basis application model web introduce two five abstractly model set nest dags direct acyclic graph intuitively correspond specific function service two four seven graph consist nod link edge detail execution order activity represent pair nod first stand activity activation point second completion point may either atomic compound latter case possible internal structure call also detail dags lead nest structure compound activity may different possible correspond different user link variable value capture logical user variable value guard possible application may recursive indirect implementation activity contain another occurrence example schematic partial description model store depict fig one possible activity depict bubble attach activity node customer start log system authenticate give credit card detail may choose product list parallel ie open new tab may review hot deal buy discount upon choice product type direct page different brand store offer product type list correspond select user next choose cancel selection search alternatively exit pay note recursive nature application restart search ie call unbounded number time time purchase another item navigation flow navigation flow give application correspond concrete compound instance possible navigation flow computer store one user first review possible deal choose purchase subsequently cancel choice buy discount coupon select note number possible navigation flow may extensively large even relatively fact recursive one depict example number possible flow may infinite bind number time user may go figure one application schematic representation rank rank navigation flow derive use two function namely function assign weight single implementation choice within flow depend course flow thus far objective user wish optimize monetary cost likelihood function aggregate weight single score entire flow example sum individual monetary cost compute total cost flow may multiply derive overall likelihood discount combine deal factor within function aware flow history place except satisfy standard notion query result search criteria model query use navigation pattern adaptation find exist query nest application dags two query evaluation algorithm get input schematic representation application user query choose rank metric efficiently retrieve qualify navigation flow highest rank algorithm operate two step first generate refine version original application representation describe flow relevant user request greedily analyze refine representation obtain flow reader refer six detail make user throughout navigation model additional original query efficient adaptive evaluation technique employ update query result relate work end section short review relate work already mention popular shop fourteen eight unlike rank mechanism rank separately distinct category base specific rank metric global effect full navigation flow may include registration club collection coupon discount specific user account variety recommender twelve thirteen appear literature however mention one provide rather low flexibility recommendation method fit user work also typically exception approach still consider open research problem figure two system architecture support multiple successful commercial tool eleven ten share similar often specialize specific music contrast propose flexible generic approach address common shop scenario identify navigation flow best match criteria importance recommendation recently recognize nine flexible system introduce context relational data possibly recursive shape introduce unique challenge computation find relational environment six stress demonstration scenario consider specific example computer store underlie recommendation system present generic adaptation require replacement retrieve application data yahoo shop different three system overview implement c use run figure two depict system architecture give brief overview main interaction store model abstract model store application eight information store first component namely application abstract model manually configure follow logical flow structure yahoo shop application note however general many specify declarative three standard business process extraction abstract model structure possible two information include compatibility relation well additional cost discount deal shipment time automatically retrieve via standard web interface provide yahoo eight function automatically derive reflect data query engine query engine compose two first query receive input user search criteria choose rank metric compute initial suggestion qualify navigation supply graphical user interface allow specify criteria search see example query section four specify criteria compile navigation pattern turn evaluate web application model second component adaptive recommendation engine figure three original application continuously inform user actual navigation change search criteria rank choice adapt offer accordingly design query engine accessible allow placement user query retrieval correspond general use incorporate within give virtual store interact virtual store wrap original store user action pass engine original store application obtain present user alongside result store screen see fig five recommendation consist sequence propose action click button x choose option box z accompany correspond weight total price likelihood house allow interference graphical interface like simulate yahoo shop store reorder screen reflect relative precedence ie rank best navigation flow participate four demonstration explain illustrate system operation consider specific store simulate store yahoo shop fourteen shop base data obtain yahoo shop public web interface store allow assemble base variety divide category filter base selection criteria vendor name may sort base certain attribute price figure three show sample screen original store describe available sort price first three fairly old cheap follow hence expensive assembly reasonably price functional computer task compatible cheap force selection highly price compatible instance first three old example support memory expensive also support cheap memory furthermore even specific combination may several ways purchase without club membership certain discount package find best deal easy demonstration show challenge task demonstrate user interaction system well happen hood demonstration structure follow figure four user query store first show original computer store many possible navigation variety purchase order demonstrate information overload experience typical face enormous number specifically shall allow navigate freely web store use standard search mechanism assemble computer like turn demonstrate simplify improve shop experience analyze various view search criteria identify appropriate first illustrate store represent abstract model show graphical view weight nest dag representation proceed demonstrate system operation first show user specify search criteria specific set request full compatible computer possibly certain inside select prefer rank price popularity delivery time combination search criteria may place requirement specific product entire flow show deal total cost figure four depict example search criteria user seek deal comprise full computer contain ram technology supply overnight user request deal order overall price give user system compute navigation present alongside refine original shop screen order accord current precedence two result depict five six respectively fig five user ask rank base overall price fig six show rank base popularity overall deal see old cheap fig three longer appear since entail high overall price unpopular flexibility next demonstrate flexibility system actual take user consist sequence navigation step would lead ideal outcome user either accept full recommendation one click first demonstrate do start follow propose navigation sequence step step demonstrate next navigate user may either follow take different propose example illustrate scenario recommend assembly computer user nevertheless choose case new consistent actual make user automatically compute present also illustrate figure five rank price figure six rank popularity user may dynamically change search criteria prefer rank instantly adjust end process present comparison navigation without assistance term overall price deal time search demonstrate system effectiveness conclude demonstration explain novel rank mechanism underlie pick one base previously mention abstract model explain computation five reference one g toward next generation recommender survey possible seventeen six two c milo query business process three business process execution language web service four g de f automatic service composition synthesis model data bull three five milo type check type inference query business process six milo n yam optimal query evaluation weight submit seven l v verification communicate web service pod eight nine g b h express combine flexible appear ten eleven twelve b g j j collaborative filter recommendation thirteen l foster cluster collaborative filter workshop recommendation fourteen yahoo shop