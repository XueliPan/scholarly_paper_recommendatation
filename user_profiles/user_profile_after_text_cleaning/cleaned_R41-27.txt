cost participate network school information management university ca technical report university abstract paper model cost incur peer participate network cost model allow gauge potential peer collaborate provide measure total cost network possible distinguish characterize cost impose node function experience load node connectivity show model apply propose rout distribute hash table outline number open question research raise four zero zero two n j four one n c one v zero one zero one zero four zero c v x r research support part national science foundation grant one introduction key factor efficiency overlay network level collaboration provide peer paper take first step towards quantify level collaboration expect participant propose model evaluate cost peer incur part overlay cost model several useful among one provide use compare different complementary recent work compare topological various overlay seven twelve two allow predict design ensure protocol sixteen three facilitate design load balance work first attempt characterize cost participate network nine propose cost model analyze formation social economic network recent study four six model overlay network formation game study assume node freedom choose link maintain whereas assume overlay topology constrain protocol moreover approach extend previously propose cost model four six nine consider load impose node addition distance nod degree connectivity remainder paper introduce propose cost model apply several rout use recently propose distribute hash table ten twelve eighteen nineteen conclude discuss open research uncover two propose cost model model propose apply network nod request serve serve request nod include one network five service eighteen stream eight overlay two three eleven name simplify presentation assume structure define quadruplet v e k f v set vertices network e set edge k set key network f k v hash function assign key vertices denote k k f k set key store node v k assume without loss generality set characterize request two independent random x v k denote node x make request key request respectively consider give node v every time key k request entire network node one four cost request one node hold request k rout path request node subject key store several nod replication consider different key exact probability two two node hold key k pay price si k serve request define service cost si incur expect value si k possible request si si k three node request key k pay price look retrieve k model price ai j ti j number hop node j hold key k ai k positive proportional factor define access cost suffer node ai sum individual cost ai j multiply probability key k request ai ai k one ti j path node node j ti zero four hold request k forward request k thereby pay price k overall rout cost experience node average possible key k value k path request consider binary function one path j l j l exclude j l zero otherwise express x j k j l two addition node keep state information protocol govern operate correctly node maintain neighborhood table grow linearly deg node result maintenance cost mi give mi zero denote cost keep single entry neighborhood table node last total cost impose node give mi mi deg si ai mi topology minimize use compute total cost network c c social optimum generally trivial particular social optimum full mesh mi zero empty set ai k zero k p three three case study next apply propose cost model select rout define rout geometry seven collection edge topology associate route selection mechanism unless otherwise note assume path rout distinguish different derive various cost experience node geometry illustrate result numerical analysis imply consider network n zero nod simplicity assume k si k ai k k r mi analysis section also assume node hold number key key popularity result regardless geometry consider also assume request uniformly distribute set nod node last assume node act maliciously star network star frequently appear equilibrium network formation study use cost model base graph connectivity four six nine use zero denote center star rout traffic peripheral nod j l zero one j six l j zero l zero substitute two get center node locate distance one hop n one nod thus addition deg zero n one imply cost incur center star n one n n n one r n one n two n two three peripheral nod route traffic ie zero zero locate distance one center star distance two n two nod give k one n si n x one n r n one n two n two n one n ai three n four furthermore deg one peripheral nod thus mi total cost impose nod zero three n four difference quantify dis incentive center star express follow two dis incentive center star vast majority case theorem one number nod n n zero variable six unless zero proof assume zero n six zero zero equivalent n two zero use give three four rewrite condition n two zero polynomial n obtain three r n two n zero factor n two obtain n two two r n r zero five polynomial n constantly equal zero polynomial equal zero thus five hold value n zero zero r zero system zero hence zero n nod pay arbitrary price serve data state maintenance traffic forward key retrieval come free theorem two number nod n n zero hold fix least one r different zero n two n positive integer must satisfy r ra ar zero r six two ar r six zero additionally six n six two zero q proof recall proof theorem one zero equivalent five clearly set n two satisfy five value r assume n six two zero need two r n zero since least one r equal zero seven two real distinguish possible case r least one r different zero six seven five zero r seven reduce zero imply zero thereby contradict hypothesis least one r different zero therefore seven admit solution ie dis incentive center star regardless n zero r six solution seven r note zero feasible number nod positive six zero seven admit two real root double root zero give however zero zero potentially feasible give r r two r r r two zero r r r two r eight nine combine eight nine yield expression give six note expression give six necessary condition addition integer set number nod n n de graph de graph use ten fifteen twelve extensively discuss twelve twenty de graph node represent identifier string id take alphabet size node represent id link node represent id x possible value x alphabet result direct graph fix diameter denote v set nod identifier node v form h h h nod v link mi one v nod v maintenance cost mi mi next two allow us show rout cost node also depend position node graph lemma one rout nod v route traffic zero proof contradiction consider node v identifier h h h suppose rout traffic node j node k nod link nod identifier form x h h six value x alphabet nod link nod form h h value alphabet therefore exist traffic node j node k follow path p h h h h h h h de graph edge h h h h traffic use path p j k follow path arrive contradiction prove route traffic lemma two number rout li pass give node bound li one one two two one two bind tight since reach node zero one two one proof proof follow spirit proof use twenty bind maximum number rout pass give edge de graph construction node map identifier string length path length k hop map string length k consecutive correspond different hop twelve thus determine upper bind number length k pass give node equivalent compute maximum number string length k include node identifier id string length k correspond include neither source destination path start one k one position two k possible k string length k part result k one k path rout set go node include length k k one li k one k one two one two ten improve bind give ten consider string length form string length string form denote cycle path de graph hence subtract number string bind ten id length circular permutation instance id since route traffic source traffic six thus one one string subtract one bind ten yield seven one two infer de graph j k zero j k one two j k binary function j k one e j finally obtain zero n two next compute upper lower bound access cost derive tight upper bind ai consider node v node link one neighbor neighbor neighbor one nod k ti k two iteration substitution one get simplification ai one one n one ai nod v consider node neighbor node two nod distance k nod two three nod distance three forth hence least maximum distance node get p ai n k reduce ai amin amin n one one one two show ai amin node zero one one note amin simplify n identifier space fully populate next consider eighteen node represent neighbor maintenance cost mi rout node implement greedy forward neighbor distance destination assume node charge equal portion n dimensional space eighteen know average length rout path assume torus equally partition conclude symmetry determine rout cost compute number rout pass give node node load function li dimension assumption equally partition li symmetry next compute li induction dimension al twelve refine result distinguish odd even value n ai n four eight zero two zero one six two five one one two six one two five one zero four zero three zero four zero three one four one three zero two two five two two zero two zero six one one figure one rout ring number parentheses represent number rout originate black node pass node base case one one ring depict figure one n seven diagram figure correspond case source request represent black node hold fix number node zero six represent node different line style represent different rout number parentheses denote number rout originate fix source pass nod show figure shift source request zero one six result shift number rout pass node hence node load node equal sum number rout pass node source hold fix figure n seven zero one two two one zero six generally n odd sum number rout pass node equal two one two n one n three four n one two one n even give one two one one two two n two n two n two two four express eleven twelve compact form hold n one one n two n two eleven twelve thirteen general case one key observation compute number rout li pass node one several equivalent along nine forty figure two rout correct one time first along horizontal axis along vertical axis finally along diagonal axis two consecutive nod path differ one dimension consider instance two go node zero node eleven zero zero one zero one one zero zero zero one one one equivalent therefore always pick path correct successively start first ie example consider represent three figure two n nod represent dot figure illustrate request rout correct successively example three different two three two three one two two two two zero four zero two one three four zero four node k compute number rout pass k denote source route node destination route node j six j six k denote j k id distinguish three k allow rout scheme correct one time one node k source destination j ie id word route p j entirely contain within one torus case illustrate figure route represent solid line go two three two j three one two k three two two correspond one torus contain j k denote shade box definition node load node load result possible p contain one torus equal li n different one consideration one possible value id total load incur node remain contain within one torus equal two nod j k differ ie id six six ten correct one time l one one must case illustrate figure route represent dash line go two two two j zero four zero k zero four one since nod j k belong ring vary ring represent figure dot curve node k perspective rout traffic j equivalent rout traffic nod j node satisfy l l one one id figure node zero four two hypothesis six id six imply k six therefore compute number rout pass node k come equivalent compute number rout pass node k originate node sum possible destination nod j computation rout pass k originate nod ring j k identical computation node load base case one load impose node k equal sum possible nod equivalent sum possible ring vary ring conclude total load incur node k go j satisfy id six six equal three node k node different destination j word id six id situation illustrate figure route go two one three j four zero four pass k four zero three represent thick dot line configuration n one possible destination node j six l one one possible source node id six j hence configuration total n one one rout pass node k sum node load obtain three possible case obtain li n one one replace expression give thirteen use n n remove recursion relationship obtain node li n one one n one n two one one n two one one n one immediately follow li tree next consider variant tree seventeen use pastry nineteen tapestry nod represent string id base node connect one r li n two eleven distinct neighbor form x l one x six zero one three result maintenance cost mi one among different remain generally select node nearby accord spatial proximity metric assume spatial distribution nod uniform identifier space fully populate ie n enable us pick id thus two nod j distance k hop differ k ways choose different digit take one one k nod distance k multiply value give node total number nod n divide total number n two infer j k k k j ti j l rout unique exactly l one different nod path j probability node k pick random path j ti j k k one k n j k j l l one n fourteen fifteen total probability theorem tell us j k one j k j l ti j l substitute obtain ti j l j k j l fourteen fifteen give j k one l one one l sixteen one n two l simplify follow write l one one l one two l one one l rewrite term function derivative series l one one l one two l one equivalently l one one l one two one one l one l two geometry reduce hypercube l l l twelve l binomial theorem allow us simplify l l one one l one two one one one one one make partial derivative explicit become l one one l one two one one one two l l one one l one one j k one one one n two reduce substitute sixteen give multiply r obtain one one r n two seventeen compute access cost ai use relationship ai ae ti j use expression ti j k give fourteen imply express term derivative classical series e ti j ti j k e ti j one k k k n k e ti j one n one k use binomial theorem series side collapse yield compute partial derivative obtain n multiply obtain ai eventually get simplify use n e ti j one n one e ti j one ai n ai ad one thirteen eighteen amin two nine three six four four five four six three amin r min r min table one asymmetry cost de graph one r c g n r eight seven six five four three two one zero zero zero min node id r min r min node id access cost one b rout cost figure three cost de network five four n c e c c chord ring nod represent use binary string ie two ring chord ring fully populate node connect set neighbor zero one analysis identical yield ai seventeen eighteen two note eighteen two confirm experimental numerical result illustrate analysis numerical result table one consider five de graph different value x uniform random table one show access cost nod comparable ratio second best case rout r min general thus incentive nod defect instance nod may leave network immediately come back hop assign different identifier six incur lower cost additional enforce cost entry network may require prevent graph access rout cost case five four n figure three plot access cost node function node identifier figure three rout cost node function node identifier minimum value nod nod v zero fourteen c e c c twenty fifteen ten five zero model de upper bind de average model de lower bind model star average c g n r ten one de upper bind model de star average model model number nod access cost one number nod b rout cost figure four access rout cost curve mark present simulation result figure three b figure three illustrate asymmetry cost evidence table one exhibit different nod generally different access rout cost therefore de graph potentially large number nod defect turn may result network instability defection characterize leave immediately rejoin network next provide illustration simulation cost different choose two result tree chord ring identical choose two six log n point select value common may inadvertently bias one geometry another emphasize illustrate specific example without make general comparison different vary number nod n ten n value n run ten differently seed consist request x uniform random plot access rout cost average nod request figure four graph show analysis validate simulation star provide lower average cost word centralize architecture appear desirable community whole distribute solution however stress consider robustness attack potential performance bottleneck factor pose practical challenge centralize approach offer mechanism create incentive center star cost model propose use quantify cost incur add link higher resiliency defer study future work four discussion propose model base experience load node connectivity cost incur peer participate network argue cost model useful complement topological performance metrics seven twelve allow predict collaborate peer refuse serve fifteen reference one annotate protocol specification june request reduce cost discover possible network peer leave rejoin hop lower cost identify hot spot peer high rout load characterize efficiency network whole believe however paper raise question provide answer first analyze handful rout even omit interest butterfly thirteen base metric fourteen apply propose cost model deploy could yield insight regard user behavior furthermore mathematical analysis use strong identical popularity uniform spatial distribution relax necessary evaluate performance geometry realistic set also obtain meaningful set value r give class file share rout sensor remain open problem finally identify minimal amount knowledge node possess devise rational strategy study network formation propose cost model promise research two b c scalable application layer proceed two page pa august three h case proceed zero page ca june four chun r j characterize selfishly construct overlay network proceed four hong march appear five c ad network boston six e c network creation game proceed three page boston seven k r gribble impact rout geometry resilience proximity proceed three page august eight b b promise media stream use collect cast proceed three page ca nine strategic model social economic network journal economic theory one ten f simple distribute hash table proceed international workshop three page ca sixteen eleven j w si journal select twenty eight twelve v analysis structure rout distance fault resilience proceed three page august thirteen viceroy scalable dynamic emulation butterfly proceed two page ca fourteen p information system base metric proceed international workshop two page fifteen novel approach pro three page san ca june sixteen c park compute party proceed workshop economics ca june seventeen c g r access nearby copy replicate object distribute environment theory compute three june eighteen p r scalable network proceed one page san ca august nineteen p pastry scalable decentralize object location rout large scale proceed international conference distribute platform one page twenty k r network base de graph network two one r morris f h chord scalable protocol network eleven one b l j rhea j tapestry resilient overlay service deployment journal select appear seventeen