electronic note theoretical computer science distribute framework adaptive explanatory visualization department information university pa department computer science college new jersey n department computer science college new jersey peter department information university pa abstract educational tool design help understand program learn program important component many academic curricula paper present architecture distribute visualization system describe specialize content provision visualization service present two communication attempt explore possibility standardize language explanatory visualization program visualization visualization framework distribute architecture one two three four see front matter right reserve al electronic note theoretical computer science one introduction research team work modern algorithm program visualization explore wide range new answer challenge make visualization effective useful graphically rich decrease effort require maintain high quality example interactive question engage work visualization five turn passive active explanatory two three seven help understand present visually adaptive visualization help focus student attention individual least understand one multitude research lead situation typical field team modern visualization exist tool support desire situation traditional method produce visualization monolithic work specific platform restrict progress field high price develop desire functionality combine inability integrate already develop different team make impossible team explore possible solution decompose monolithic visualization several communicate solution propose work group six architecture suggest group separate production visualization trace interactive render possible enhancement question narration set provide connection identify research group university college fully support vision current project focus increase value visualization adaptation distribute architecture could significantly help us disseminate result research since virtually open visualization environment enhance personalization support work newly distribute architecture group attempt work adaptive explanatory visualization term new architecture paper present first attempt implement explanatory visualization distribute framework follow six start present original implementation explanatory visualization foundation work present distribute architecture focus communication paper conclude discussion current future work two visualization core concept behind propose distribute framework visualization flow interest produce program algorithm interest event simply event important understand concept present visually example variable assignment al electronic note theoretical computer science removal item link list increase pedagogical value visualization event could extend explanation narration question challenge student predict result ability represent flow interest standardize format allow decompose monolithic visualization application system several independent within flow three architecture follow proposal work group six implement architecture distribute model communication content content figure one idea behind straightforward content provider output stream contain code content visualizer expect object orient service provider translate enrich stream pertinent question capable present fig one intermediate component take care format translation propose architecture content provision presentation service separate two format involve originate different represent experience content provision orient approach shape best suit presentation purpose current work attempt explore possibility one format format translator optional component framework time presence depict scenario system already capable generate visualization specification comply standard format enable system become part distribute framework use nonnative visualization engine choice even multiple time four content visualizer end user point view implement system name improve educational application supplement learn program visualize explain execution code give program language user interface divide five code visualization output navigation figure two system interactive student navigate execution program forward backward jump specific line code also possible question encounter way line execution stop student present prompt prevent student al electronic note theoretical computer science miss question student go program execution current line highlight output program update relevant present currently many step also involve present textual system capable ask question four type currently support radio button one line text control multiple line text control question post student skip attempt answer say know certain system restrict skip question system work one four exploration free navigation question ask challenge free navigation question ask skip feedback present answer evaluation navigation question skip feedback present answer quiz navigation question skip feedback present answer first two let interact material basis two last design use administer quiz without feedback fig two user interface improve visualization engine system work quiz mode wait student answer question visualization engine treat everything action event visualization paradigm engine distinguish two type first type execute instantaneously consist single step example action would second type action take give amount time execute consist number step example could would change object location animate manner oppose time visualization engine support follow nine action print wait improve system available al electronic note theoretical computer science five content provider tutor program traditionally generate feedback visualization within monolithic system point research test whether feedback visualization generate could render nonnative visualizer improve end develop figure one convert application service b translate output program problem randomly generate program annotate line code line number execute program use custom interpreter three automatically generate narration execution program four index line explanation line number program object program contribute explanation finally provide learner interactive control visualize execution program use explanation drive visualization figure one convert explanation generate event stream obtain visualize distribute client information available six communication protocol vision future involve many specialize content provision content visualization service service could possibly appear disappear basic dynamic framework delegation base standard communication protocol one important research move towards define protocol section present visualization specification expect visualization engine section present content generate content provider purpose illustration use c language code snippet print hello world console translation two format base language transform document document eight translation process discuss section visualization specification format expect side consist five part present first define object action take object action drive execution sequence item id hello world item one line code two item id item code code function display code hello world code al electronic note theoretical computer science three question question item id type short text display current line text answer hello world answer hint code code function take several hint feedback code code function instruct display string case string code hello world code feedback item question four output output output item id hello world item five action execute execution sequence action type action type action type action type print action type wait content specification format generate side consist four part present drive execution sequence line id one indentation one hello world line event one context variable function display hello world one line code two explanation event explanation three output output output four one text hello world text twenty dangle pointer pointer format translation question generation translation line code program output essentially element provide question action execution sequence complicate generate explanation every line order program execution order use infer program execution sequence provide server also process identify action take attribute element use output element provide server contain text al electronic note theoretical computer science print console program execute text translate question output particular line generate use element moment therefore discard translation process element may use future generate question bug provide code seven future work system order extend cover program construct plan identify object interest various program build dynamically link list b design general flexible extensible protocol transmit information plan extend protocol adapt need learner ie focus visualize part material yet well understand plan represent learner progress term assign interest event set would task would consult student model service retrieve information learner progress within presentation side learner interact visualization ie observe read answer question would record progress student model service another direction would develop author tool help create easier direct author alternative create content provision service handcraft could access repository present material base upon work support national science foundation grant reference one peter adaptive visualization component distribute adaptive educational system intelligent tutor two g n tutor loop evaluation education conference fie three n reason domain model intelligent tutor system help learn c program intelligent tutor page four n explanation execution feedback program analysis generation tutor instruction cognition learn journal page appear five l nap j r l l environment actively engage algorithm bulletin one al electronic note theoretical computer science six l nap peter j v c r j ross j development tool support user interaction algorithm visualization bulletin four seven h shah n tutor system parameter pass program bulletin three eight version ten