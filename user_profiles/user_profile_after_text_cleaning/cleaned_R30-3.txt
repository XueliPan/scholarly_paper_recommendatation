divide conquer partition social network research tide research tide pablo research tide nine zero zero two nine two n c one v eight one nine four five zero nine zero v x r abstract social network explode term scale scope last unprecedented growth network present challenge term system design maintenance one way cope partition large network assign partition different machine however social network possess unique make partition problem main contribution paper understand different social network guide choice partition algorithm use large scale represent real first characterize different social network evaluate qualitatively different partition cover design space expose different involve understand light social network show judicious choice partition scheme help improve performance one introduction last see proliferation social network accord recent study become popular sixteen popular like millions active add day twitter instance grow remarkable one month nine seventeen growth pose unique challenge term scale management maintenance network eight addition service move towards increasingly distribute cloud paradigm thirteen six four bring forth challenge since smaller geographically spread data center six increase network cost one obvious solution deal scale issue would partition social network graph assign partition different however give unique social network graph presence cluster skew degree geography entirely clear partition graph underlie social network graph need take account involve partition understand design space help make inform main contribution paper provide understand problem social network partition rely take two large popular social network twitter state problem social network partition along performance highlight involve discuss different social network graph impact design partition particular use data obtain twitter network measure strong geographical locality well heterogenous traffic pattern base performance social network select follow partition evaluate first choose metis ten draw traditional graph partition nine ten intuitive choice design produce partition reduce traffic across partition balance number nod across partition since widely know social network consist community structure fourteen next method evaluate rely extract use partition however certain issue particular arbitrary number skew partition size lead us augment exist community detection scheme deal issue evaluate different performance metrics expose various particular balance load across different partition reduce traffic partition evaluate different find augment community detection devise well term balance involve interpret result light social network possess two relate work graph partition propose deal scale issue social network eight seven well handle large however best knowledge study different social network graph impact possible different partition al one different partition perform real data along quantify different involve aim address concern paper concert effort characterize understand social network last eighteen three twelve nineteen include flow information eleven existence social fourteen well evolution network eighteen one focus understand social network impact partition towards end rely certain result like existence social fourteen twenty report past also report existence certain like geographical locality heterogenous traffic distribution one network study twitter twelve better inform system interest social network well design partition scheme order understand involve rely different partition scheme span range design first focus method draw classical graph partition nine ten rely find minimum edge cut graph roughly cluster also draw work do aim extract socially relevant two however give desire size give equal size partition present scheme paper yield desire number equal size three methodology section pose problem social network partition along explore social network graph could impact design choice different partition scheme end section brief description explore study first describe collect use data order carefully understand different social network graph impact partition rely data exist large social network publicly available nineteen however look include location information well information traffic exchange since aware publicly available collect crawl twitter twitter site become popular late detail twitter along information link form find twelve collect data twitter four collect information comprise two nod edge although twitter direct edge report total edge use edge undirected unless otherwise state addition also collect location information form order glean filter junk information basic obtain different location text meaningful use yahoo map web offer yahoo map functionality standardize could test different obtain country available state city finally obtain standardize also collect traffic twitter form tweet total tweet use twitter tweet mine follow relevant field tweet id user id location content information allow us get traffic information every user traffic distribute across give us volume social approximately population generate least one tweet rest twitter return tweet period examination fig one b show skew distribution number link per user well volume traffic send per user intend make data public also use graph represent social network include take closer actual social network edge graph probably represent actual social consist three nod edge data collect three eleven information find nineteen present result twitter paper space reason although analysis graph nineteen bear similar result social network partition represent social network graph g v e edge undirected problem partition v k cluster k one six j v objective function decide obtain k partition differ performance first objective function partition scheme would reduce edge traverse partition refer edge external inter edge metric represent amount traffic could traverse partition reduce metric therefore direct bear reduce cost cost bigger concern social network graph host across geographically distribute thirteen second objective function relate keep utilization high balance across host different partition ideally partition two zero ten two ten f c c four ten six ten eight ten zero ten zero ten f c c two ten four ten four x ten r h r e p e e w five four three two one zero zero four two ten ten per user six ten ten six zero tweet per user five fifteen time days start zero ten b c figure one twitter b tweet message per user c tweet per hour equal size lead balance utilization across machine note give cost server installation limit lifetime keep run optimize work per investment dollar six assign nod different equivalent assign partition inform manner help achieve goal belong nod within us compare number relative size partition realize high partition percentage link local higher would case connectivity purely random instance case us would factor locality property could yield performance benefit specially partition assign distribute geographically six four strong locality thus reduce traffic considerably balance load across reduce traffic often odds hence need study design space partition scheme characterize involve addition social network slightly different underlie compare regular communication network exploit design partition scheme discuss next section social network relevant problem par structural social network know skew degree twenty small world well strong cluster community structure fourteen partition uncover social network intuitively appeal volume interaction much higher intercommunity interaction social network show strong geography probability new link form correlate distance fifteen observe similar strong distance twitter table one present locality result top five us state size consider direct link second column show size distribution different instance us total nod also find percentage edge closely correlate size network instance total edge total edge belong us next two represent percentage come country instance eighty us come nod belong us us also three addition rely semantic information like geographical location partition appeal due simplicity one need global information structure social network issue like churn social network handle effectively efficiently propose scheme base geographical locality paper leave future work however note community structure embed information locality fifteen traffic traffic social network consist message content status update exchange nod analysis traffic twitter observe traffic network like diurnal pattern c however make traffic social network unique hence worth pay special attention first traffic social network inherently local traffic confine distance secondly traffic social network multiplicative effect due broadcast nature certain message like status update illustrate point consider b figure show skew nature number social contact user twitter well skew nature number message tweet send per user give broadcast nature status update twitter unique tweet couple skew distribution number actual number tweet excess message addition also extract use content tweet establish link user j appear content country size us ca thirty eighty state size ca twenty nineteen twenty table one presence strong us state twitter least one tweet j obtain link people maintain conversation clearly less link people accord information capture social network finer level social network give simple contact list people contact list may actually know three imply social relation therefore use validate accuracy partition preserve strong social algorithm one mo input g social network graph input k number final partition input f optimization algorithm output p partition set pi set nod partition p k six g c f g partition algorithm c c sort best partition size c v k else p six v k end end end end end partition order explore design space partition quantify involve study follow graph partition objective function rely reduce edge reduce number edge incident vertices belong different cluster addition partition balance four lar size hence natural candidate study performance problem address spectral partition rely find minimum cut ensure minimum number edge cross partition nine many different propose rely partition method also call metis ten show produce high quality cluster fast efficient manner optimization mo graph intuitively different random graph term structure twenty difference capture via metric call q define difference number edge within expect number edge mathematically q actual number edge traverse two di di degree node metric zero one lower value signify structure closer random graph higher value signify strong community structure develop community detection therefore rely find partition maximize metric purpose study optimization scheme use propose two suit purpose capable handle large graph quickly however couple unequal size closer reality seldom equal size problem arbitrary number objective find natural number rather find number run algorithm get twitter respectively highly skew community size size community total number nod make scheme amenable use optimization enhance mo order obtain fix number community fix size modify result obtain optimize algorithm order obtain number partition equal size devise algorithm mo one apply step result optimization algorithm mo high level start group partition size sequentially partition eight sixteen number partition eight sixteen number partition b figure two partition result edge partition twitter b one nine eight seven six five four three two one zero one nine eight seven six five four three two one zero e g e n r p r n e g e n r p r n random mo mow random mo mow e g e n r p r n one nine eight seven six five four three two one zero one nine eight seven six five four three two one n r e v n c n r p r n zero eight random mo random mo mow eight sixteen number partition sixteen number partition b figure three partition result traffic edge partition twitter b full move next available partition case community fit apply mo subset graph scheme extremely simple naive purpose suffice random partition scheme also consider partition randomly random partition advantage addition simple implement randomization balance load hence concern balance load random partition give best result however scheme may well reduce traffic four experiment try include random r graph partition optimization mo twitter mow stand weight mo weight represent traffic edge use average number tweet exchange case edge weight zero set weight one avoid disconnect graph study effect weight edge twitter since access traffic communication across partition first evaluate different partition scheme perform term number edge b message c exist within partition note higher lower network traffic machine edge fig two depict percentage edge first metric low random decrease k number partition scheme decrease much rate show able maintain structure underlie social network network traffic term random partition result mere four edge mo produce ten thirty edge twitter reduction network traffic even higher mo produce around fifty edge mo yield similar result twitter partition however mo weight counterpart mow seem consistent across different number partition message next set result use actual actual traffic form five zero ten two ten f c c four ten six ten ten eight zero random mo percentile zero ten two ten f c c four ten six ten ten eight zero random mo percentile random mo percentile zero ten two ten f c c four ten six ten ten eight zero fifty write request per minute fifty write request per minute fifty write request per minute b c figure four distribution peak load eight b c sag exchange message report sec run partition produce use direct edge note qualitatively different merely count number edge fig three show message result qualitatively similar result fig two mo give better partition number partition increase perform better random link people likely social relationship therefore susceptible consume user generate content five picture thus extrapolate link generate additional traffic besides message capture conversational link also serve expect social network base partition scheme able retrieve majority strong link fig three b show percentage higher edge mo retain fifty social link even number partition stress importance use scheme aware underlie social structure partition balance load show partition base network structure mo significantly reduce network traffic compare random however also need study effect scheme load distribution across machine host partition extract distribution arrival tweet per minute trace three partition single machine dimension memory io deal average write rely provision order perform analysis extract percentile traffic rate come word without partition tweet write request store distribute read common require much less since design faster read common practice read request write order magnitude higher ing would peak traffic single machine would handle fig four plot write request tweet arrival per min across partition different partition size respectively eight machine fig four percentile peak traffic random mo respectively partition machine need deal reduce load peak partition machine fig four c load peak random mo picture emerge experiment follow scheme base optimization good reduce network traffic competitive random term load balance across partition hence reduce cost balance load still present find mo base scheme promise interpret result light make sec specifically existence social community structure five discussion social network increase high rate put strain exist infrastructure demand new architectural get push highly distribute cloud infrastructure problem find intelligent scale issue exacerbate paper explore problem partition space different use different scheme use data real twitter measure impact different partition scheme network traffic peak load find traditional graph partition effectively apply reduce network overhead typical random partition would generate maintain acceptable peak load distribution also show optimization even better suit social network partition problem give base find community structure network scheme however present problem produce arbitrary number propose algorithm mo handle issue six social network eight proceed first workshop social network page new york nineteen k p p b measurement analysis social network seven proceed conference measurement page new york twenty j park social network different type network rev e e j community structure network j oh tan examine diffusion content social network sh teng time graph partition graph solve linear four proceed annual symposium theory compute page new york sh teng local cluster algorithm massive graph application time graph partition r w beyond friendship graph study user nine page new york network dynamics small world phenomenon journal sociology two f q e large scale detection nine proceed symposium network design implementation ca association six reference one l j x lan group formation large social network membership growth evolution six proceed international conference knowledge discovery data mine page new york two v r e fast unfold large network page three h chun h moon h comparison social volume interaction case study eight proceed conference measurement page new york four k church j deliver embarrassingly distribute cloud service five golder b social interaction message within massive network cite six j p patel cost cloud research data center network rev one seven j eight j scale nine r cluster good bad spectral j three ten g v fast high quality scheme partition irregular graph j twenty one eleven g j structure information social communication network eight proceed international conference knowledge discovery data mine page new york twelve b p gill chirp twitter eight proceed first workshop social network page new york thirteen n p l echo edge capacity host overlay data center rev one fourteen j k j w community structure large network natural cluster size absence large cluster fifteen j r p geographic rout social network proceed national academy august sixteen n media global face network place seventeen n media growth twitter mobile eighteen h k p p b growth seven