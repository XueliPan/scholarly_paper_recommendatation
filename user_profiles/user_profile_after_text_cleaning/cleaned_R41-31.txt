job joint buffer management schedule differentiate service computer science department university f g abstract novel algorithm buffer management packet schedule present provide loss delay differentiation traffic class network router algorithm call job joint buffer management schedule provide delay loss differentiation independently node without assume admission control police novel propose algorithm one schedule buffer management perform single step two relative whenever possible absolute class support numerical simulation include result heuristic approximation present illustrate effectiveness approach compare new algorithm exist loss delay differentiation one introduction guarantee packet network often accord two criteria first criterion whether guarantee express individual traffic flow group flow second criterion whether guarantee express reference guarantee give class relative whether guarantee express absolute bound absolute provision early result integrate service service model three focus absolute guarantee however due issue lag demand absolute interest eventually shift relative guarantee since late differentiate service two work group discuss several relative guarantee four seventeen exception expedite forward service eleven relative discuss within context define service differentiation qualitatively sense class receive lower delay lower loss rate work support part national science foundation grant career c two without quantify differentiation recently research study try strengthen guarantee relative propose new buffer management schedule support relative six seven fifteen sixteen probably best know effort proportional service differentiation model six seven attempt enforce delay loss rat successive priority class roughly constant two priority class service could specify delay class half delay class without specify upper bind delay paper express provision within formalism inspire network calculus five present rate allocation drop algorithm single output link call joint buffer management schedule job capable support wide range relative well absolute guarantee loss delay without assume admission control traffic police algorithm operate follow upon arrival prediction make delay currently traffic service rat allocation class adjust meet delay necessary traffic certain class selectively drop unique feature present algorithm rate allocation link schedule buffer management approach together single step job algorithm provide delay loss differentiation independently node delay loss rat thus dependent guarantee traffic number nod traverse paper organize follow section two give overview current work relative guarantee section three four specify algorithm buffer management rate allocation section five propose heuristic approximation algorithm section six evaluate effectiveness algorithm via simulation section seven present brief two relate work due space limit relevant work schedule buffer management relative service differentiation schedule majority work relative service differentiation suggest use seventeen schedule nine schedule specifically design relative delay differentiation proportional queue control mechanism fifteen rate six algorithm eighteen scheme use backlog class determine service rate allocation bear similarity schedule component job sense dynamically adjust service rate meet relative different discuss priority seven implement schedule algorithm twelve likewise proportional sixteen use dynamic priority mechanism set base average experience delay finally hybrid proportional delay appear proceed three six use combination average experience delay set priority give packet alternative service ten provide service differentiation two traffic class first class provide absolute delay guarantee second class guarantee lower loss rate delay guarantee first class enforce drop traffic exceed delay bind contrast present section schedule algorithm present paper consider current state past history link addition make future delay improve performance schedule buffer management discussion buffer management refer recent survey article thirteen many buffer management network motivate need improve performance red eight one specifically target service differentiation include rio four red nineteen scheme spirit drop algorithm present paper since treat problem mark drop optimization problem proportional loss rate dropper seven specifically design support proportional differentiate service enforce ratio loss rat two successive class remain roughly constant give value two estimate loss rate class whereas use last memory one possible exception ten work relative service differentiation generally consider delay loss differentiation orthogonal issue handle separate three approach joint buffer management schedule section introduce key joint buffer management schedule job provide detail description first give informal overview overview assume output link perform buffer arrive traffic traffic transmit buffer use schedule algorithm dynamic service rate allocation class traffic class transmit order admission control police traffic set performance specify algorithm set example three class could form delay loss rate delay two five delay one loss rate ten four first two relative last one absolute constraint set mix relative absolute since absolute may render system infeasible may need relax assume order provide relax case system infeasible service rate allocation operate follow every arrival prediction make delay traffic service rate allocation traffic class modify meet feasible rate allocation meet exist traffic drop either new arrival current backlog find convenient view service rate allocation term optimization problem optimization problem relative absolute bound loss delay give example link buffer capacity system objective function optimization primarily aim minimize amount traffic drop secondary objective aim maintain current service rate allocation first objective prevent traffic drop unnecessarily second objective try avoid frequent service rate allocation solution optimization problem yield service rate allocation class determine much traffic must drop explore principal optimization first assume sufficient compute available solve optimization problem arrival link later section approximate optimization heuristic incur less computational overhead formal description c b q q q four total buffer space traffic class general expect next describe basic service rate allocation drop assume traffic link capacity small mark belong one class mark index use convention whereby class denote traffic denote otherwise assume least one smaller index require better level use amount drop traffic class service rate allocate class backlog class time remark throughout paper take interpretation traffic output link regard serve simultaneously traffic several class since actual traffic send interpretation traffic idealistic however schedule closely approximate rate guarantee available eighteen time assume traffic buffer use time zero p c zero r r r r l introduce arrival curve input curve output curve input curve time interval arrival curve traffic class zero r appear proceed five c f f r c l drop di rout c f f r c l time di di rout ti time delay backlog b project input curve project output curve pro delay fig one delay backlog figure one b projection perform time time interval class define x r l x z z zero zero difference arrival input curve amount drop traffic output curve give transmit traffic interval class r zero r r x z zero refer figure one illustration figure service rate adjust time packet drop occur time one two four two three vertical horizontal distance input output curve illustrate delay delay arrival transmit respectively backlog delay time b class ure one time time backlog delay time define b r r x r r x f j g x upon traffic arrival say time traffic drop meet time greater relax predetermine order amount class set system satisfy time new service rat r l determine rate allocation make projection delay traffic purpose projection assume current state link change time specifically indicate project value assume one service rat remain ie tilde time three two ie r r zero packet drop ie l zero one two three six define project input curve r project output curve project backlog r b follow r r r r r b r r refer project horizon class project backlog become zero ie notation make delay time interval define project delay denote time min x b x f zero j four time x x r r x f j g x five time delay correct figure one b illustrate project input curve project output curve project delay make time indicate dash line figure include project delay time figure value five six four service rate adaptation drop algorithm section discuss algorithm perform service rat allocation class decision drop traffic term optimization problem time arrival occur new optimization perform opt amount traffic drop variable vector x contain service rat optimization problem form r l q q r r one one l l minimize subject f x x x g j j zero one h j n j zero one six j j g h f objective function objective function present subsection choose amount drop traffic change current service rate allocation minimize optimization problem system optimization time know remainder section discuss optimization function optimization use reference system practical schedule drop compare do knowledge system state time time time r r system two type system describe output link define desire service differentiation appear proceed seven system system specify physical output link first constraint state total backlog exceed buffer size second system constraint enforce schedule output link link system enforce transmission rat loss rat also amount traffic drop bound current backlog obtain hold time time p p p b b b b c zero r r l b zero zero time consider two type relative absolute either delay loss rate number type limit since absolute may result infeasible system one may need relax certain time assume set assign total order relax give order system become feasible addition class simply ignore absolute delay enforce project delay class bind satisfy two condition hold violate relative delay specify proportional delay differentiation class example two class enforce relationship delay bind never one two delay class two delay class one constant since general several class likely different delay notion delay class need specify example delay class could specify delay packet head queue maximum project delay seven via measure choose measure call average project delay time average project delay class average horizon obtain x one z provide flexibility schedule decision enforce relative delay strictly allow slack use metric define eight translate notion slack tolerance level write relative delay k k one one one seven eight nine eight one k zero one constant define proportional differentiation desire indicate tolerance level relative specify class adjust accordingly note delay seven nine value exception optimization variable x know time next discuss loss rate similar delay several sensible define loss select loss measure denote express fraction lose traffic since begin current busy period time express fraction traffic drop time interval one p p zero zero l x r l r zero p one x zero zero r zero r last equation value except know time specify absolute relative loss rat absolute loss constraint specify loss rate class never exceed limit l l definition define relative loss specify desire proportional loss differentiation class similar provide certain slack within class form one p l ten eleven twelve zero zero zero zero p one k k one one p target differentiation factor zero zero indicate level one zero one zero tolerance k objective function provide system satisfy objective function select solution x even though choice objective function policy decision select two specific believe general validity one avoid drop traffic two avoid change current service rate allocation first objective ensure traffic drop alternative way satisfy second objective try hold feasible service rate allocation long possible give first objective priority second objective follow formulation objective function express term cost function x q q two two f r r c l thirteen x one x one one busy period time interval positive backlog traffic time begin busy period give b zero sup f x p two infinitesimally small h h zero p x b x appear proceed nine packet arrival yes buffer overflow find li subject fourteen buffer overflow n arrive since last test violate yes yes violate yes violation find li subject ignore violation find subject necessary relax obtain feasible solution r li do fig two outline heuristic algorithm c link capacity first term express change service rate allocation second term express time know value thirteen part optimization variable quadratic form conserve link backlog time two front second sum thirteen ensure traffic drop dominate term objective function two since scale factor note time zero p c r r r r r r conclude description optimization process job structure objective function make nonlinear optimization problem solve available numerical twenty five heuristic approximation next present heuristic approximate optimization present previous section significantly lower computational complexity present heuristic regard first step towards router implementation approximate nonlinear optimization problem one present section four perform fuzzy neural network however expensive high accuracy approximation desire therefore choose different approach decompose optimization problem several less intensive heuristic algorithm present maintain feasible rate allocation buffer overflow occur delay violation predict time heuristic pick new feasible rate allocation drop traffic unless buffer overflow test perform every packet arrival periodically set contain absolute may infeasible certain time need relax heuristic ten algorithm follow order system priority absolute turn priority relative system become infeasible heuristic relax relative yield feasible solution heuristic relax one absolute overview heuristic algorithm present figure two algorithm consist number small one situation require adjust service rate allocation drop next present associate computation buffer overflow arrival time cause buffer overflow one either drop arrive packet free enough buffer space accommodate arrive case satisfy l x x fourteen zero l zero satisfy fourteen heuristic pick solution obtain unique solution solution violate twelve set relax satisfy determine algorithm continue test delay constraint show figure two algorithm specify amount traffic drop particular class however algorithm select position queue drop traffic present paper assume drop policy l buffer overflow algorithm make delay every represent complexity algorithm performance schedule respect satisfy simulation experiment describe section six show value packet selection provide good performance n n n test use current service rate allocation predict future delay constraint heuristic distinguish three case case one violation case service rat unchanged case two violation violate heuristic algorithm determine new rate value define nine transform set together property one obtain system algorithm pick solution solution violate relax satisfy case three violation resolve violation entirely trivial require traffic need drop meet recalculate simplify task heuristic ignore relative zero r l violation occur try satisfy absolute class backlog time heuristic start conservative estimate delay verify refer figure one one b write sufficient condition heuristic use fact two b x x r b b l use appear proceed eleven l e r e f f c p c k n l e h f n eighty sixty forty twenty zero zero two four eight six fourteen simulation time twelve ten sixteen eighteen twenty fig three offer load satisfy class delay bind time one b l r one fifteen l r z initially rat traffic drop set heuristic algorithm select fifteen satisfy since least one violate least one class define fifteen apply greedy method try redistribute rate increase class adjust minimize number drop never increase point violate class feasible achieve class do reduce increase class zero one one one one one one r r r r r l l l six evaluation present evaluation develop paper via simulation one determine well desire service differentiation achieve two determine well heuristic algorithm section five approximate optimization section four three compare algorithm exist proportional differentiate service present two simulation experiment first experiment compare relative differentiation provide optimization algorithm describe section four job optimization heuristic approximation section five job heuristic seven provide uniformly best result among previously propose scheme relative service differentiation second experiment augment set absolute loss delay highest priority class show job effectively provide relative absolute differentiation one experimental setup consider single output link capacity assume buffer size class length experiment twenty second one c q four l e f r six five four three two one zero five four three two one e r l f r l e f r six five four three two one zero five four three two one e r l f r l e f r six five four three two one zero five four three two one e r l f r twelve class one class two class three class one class two class three class one class two class three zero two four six eight ten twelve fourteen sixteen eighteen twenty zero two four six eight ten twelve fourteen sixteen eighteen twenty zero two four six eight ten twelve fourteen sixteen eighteen twenty simulation time job optimization simulation time b job heuristic simulation time c one fig four experiment one relative delay differentiation graph show delay successive class target value k four class one class two class three class one class two class three class one class two class three zero zero two six four simulation time twelve fourteen sixteen ten eight eighteen twenty zero zero two six four simulation time twelve fourteen sixteen ten eight eighteen twenty zero zero two six four simulation time twelve fourteen sixteen ten eight eighteen twenty job optimization b job heuristic c one fig five experiment one relative loss differentiation graph show loss rat successive class target value zero k two simulate time start empty system experiment incoming traffic compose superposition source average time number source active give time oscillate follow sinusoidal pattern source generate fix size result offer load plot figure three time class contribute aggregate load yield symmetric load realistic environment one would expect less high priority traffic low priority traffic therefore symmetric load regard realistic occur burst traffic one two simulation experiment one relative differentiation first experiment focus relative service differentiation include absolute relative differentiation want ratio four delay two successive class ratio two loss rat two successive class thus job set zero k k four two zero tolerance level set job optimization job heuristic result experiment present figure four five graph delay loss rat respectively successive class job optimization job heuristic plot delay loss value average move time size one zero one five one one zero zero link load ninety link capacity time provide desire service differentiation around target value job optimization job heuristic ten fifteen zero six l e ten one one one one ten one e r l one zero appear proceed thirteen class four class three class two class one l e ten one one one one class four class three class two class one class four class three class two class one l e ten one one one one ten one e r l one zero six eight ten twelve fourteen sixteen eighteen twenty six eight ten twelve fourteen sixteen eighteen twenty six eight ten twelve fourteen sixteen eighteen twenty simulation time simulation time b one remove simulation time c fig six experiment two absolute delay differentiation graph show delay result job heuristic class two class three class four class one class four class three class two class one ten one e r l one zero class four class three class two class one two four six eight fourteen simulation time twelve ten sixteen eighteen twenty two four six eight fourteen simulation time ten twelve sixteen eighteen twenty b one remove four six two eight ten twelve fourteen simulation time c sixteen eighteen twenty fig seven experiment two absolute loss differentiation graph show loss rat class result job heuristic zero selection tolerance value mostly due tolerance value zero job present smaller value zero reduce incur work system load low time manage achieve delay differentiation albeit far target value however link absolute value delay small class job optimization sixteen ten twenty one six finally one note total loss rate interest scheme may provide excellent proportional loss differentiation overall high loss rate additional plot provide fourteen show loss rat absolute value delay similar scheme simulation experiment two relative absolute differentiation second experiment evaluate well algorithm satisfy mix absolute relative delay present result job heuristic support absolute guarantee one one consider simulation setup relative delay experiment one add absolute delay constraint class one one replace relative loss constraint class one two absolute loss constraint class one one call scenario give relative delay experiment one class implicit absolute delay four class two sixteen class three class four remove l one three due tolerance value exact value fourteen one two class class avoid implicit absolute class two three four call result constraint set one remove also include result job heuristic experiment one class one replace class one two refer constraint set figure six plot absolute delay figure seven plot loss rat class average time length one discuss result three constraint set propose concern experiment figure six show heuristic maintain relative delay differentiation class thus enforce implicit delay class two three four large number absolute delay system easily become infeasible bring two first figure seven show loss rat class two three four similar result illustrate heuristic relax relative loss meet absolute delay second figure six show absolute delay constraint sometimes violate however rare pack packet delay always remain reasonably delay less close delay bind experiment one remove figure six b show without class one two ratio delay delay exceed factor ten high load constraint set absolute delay constraint never violate figure seven b show consistently enforce packet drop finally experiment figure six c show without delay class one high five one one one seven propose algorithm call job joint buffer management schedule relative absolute guarantee without information traffic time absolute guarantee satisfy simultaneously job selectively ignore guarantee job algorithm reconcile rate allocation buffer management single scheme thereby acknowledge schedule drop output link orthogonal issue address together job implement desire service differentiation base delay traffic use update service rate class amount traffic drop show set simulation experiment job provide relative absolute guarantee delay loss future work extend approach present paper congestion control point departure attempt express exist active queue management scheme red eight rio four within formal framework introduce paper four delay value class two three four figure six b c appear similar especially since use emphasize value identical result consistent appear proceed fifteen reference one low enhance random early mark algorithm flow control proceed page two blake black e z wang w architecture differentiate service three r clark overview integrate service architecture four clark w fang explicit allocation packet delivery service network six four august five r h g schedule quality service guarantee via service curve proceed international conference computer network page las six c proportional differentiate service thesis university seven c p proportional differentiate service part loss rate differentiation packet drop proceed page pa june eight v random early detection congestion avoidance network one four nine v resource management model packet net work network three four august ten p hurley p provide low delay service within technical report eleven v k k expedite forward june new york twelve l queue volume computer sons thirteen packet drop network survey two three quarter fourteen j n buffer management schedule enhance differentiate service technical report university august fifteen proportional queue control mechanism provide differentiate proceed international symposium computer information service page turkey sixteen n r v delay differentiation adaptation core stateless network proceed page seventeen k v l differentiate service architecture eighteen k r g generalize processor share approach flow control integrate service network case network one three june nineteen p nain c v achievable service differentiation proceed page token bucket mark ca june twenty k solve constrain nonlinear program ming annals research l virtual clock new traffic control algorithm packet switch network nine two may