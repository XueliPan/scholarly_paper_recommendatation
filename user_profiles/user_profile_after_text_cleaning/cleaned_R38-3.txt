combat identity snowball attack use machine learn combinatorial optimization attack graph research x research r abstract become ever interconnect complexity security configuration explode management tool keep pace show make identity snowball attack critical danger identity snowball attack leverage log first compromise host launch additional attack privilege host combat attack present system combine machine learn combinatorial optimization attack graph scalably manage security configuration evaluation organization several hundred thousand machine show allow reduce number machine use launch identity snowball attack subject operate security protection access control authentication management compute information security protection general term security management access control authentication identity snowball combinatorial optimization cut machine learn support vector machine attack graph one introduction past decade witness plague remote exploit could launch machine machine give vulnerability forty combat attack research community develop large number defensive permission make digital hard copy part work personal classroom use grant without fee provide copy make distribute profit commercial advantage copy bear notice full citation first page copy otherwise republish post redistribute list require prior specific permission fee nine big sky montana copyright address space randomization five stack thirteen compartmentalize web nineteen alert twelve dynamic analysis many despite advance seem unlikely machine compromise completely eliminate computer system must expect small fraction machine compromise either due insider attack social engineer traditional vulnerability period time become ever interconnect commonplace today run identity service use identity service support millions live id thirty emerge federation expand scope identity service example cloud run fifteen already recognize user accord user bob accord yahoo implement access check involve unfortunately ability authenticate set access far outpace ability manage security show paper aggregate complexity security configuration make identity snowball attack press danger introduce term identity snowball attack describe attack launch initial machine compromise attacker leverage currently log first compromise machine compromise additional machine currently log administrative privilege machine additional compromise likely trivial attacker attacker may iterate process successive compromise explain mechanics attack detail section two iterative use obtain compromise host date back first worm fifty recently use compromise machine across number however best knowledge prior work analyze potential identity snowball attack within large threat identity snowball attack magnify single initial compromise lead large number compromise machine quantify threat section eight analyze security single large organization contain several hundred thousand machine show attacker compromise almost machine organization proceed compromise many machine give figure one administrator use iteratively identify desirable security configuration change expectation small fraction machine within organization compromise absolutely unacceptable analyze one organization detail sensitivity need data map compromise machine however expect many similarly vulnerable follow reason grant additional privilege frequently easy way enable administrative task eight prevalent many large industry white paper also describe similar issue large tool understand aggregation locally reasonable grant additional privilege lead unacceptable global risk although best knowledge identity snowball attack launch internal network large potential damage attack motivate development defensive measure end present system design empower manage security configuration large operation depict figure one periodic basis present small number high impact security configuration change administrator administrator select change want make change prefer make incorporate feedback learn change acceptable administrator process repeat propose additional security configuration change administrator satisfy new security configuration figure two show desire result identify desirable set configuration change iteration combination machine learn combinatorial optimization attack graph section three explain attack graph capture potential attacker compromise one machine compromise additional machine configuration change map remove edge graph section four describe integrate system scalably collect data need create attack graph section five describe apply cut combinatorial optimization technique relate find small set high impact configuration change show section eight cut configuration change impact security organization whole significantly outperform propose configuration change base purely local section six describe use support vector machine technique machine learn address one final challenge propose configuration change figure two use initial compromise longer result identity snowball attack high impact configuration change one prevent accomplish job example remove administrator ability upgrade certain server likely change due scale attack graph impossible explicitly label potential configuration change instead treat administrator decision accept reject propose configuration change implicitly indicate configuration change machine learn use generalize implicit feedback potential configuration change revise estimate incorporate cut algorithm new edge cost attack graph cause future cut algorithm better job select configuration change high impact administrator finally section seven describe group relate configuration change together rank reduce burden administrator still best knowledge first system defend identity snowball attack large prior work improve security configuration network machine require substantial manual effort administrator two particular may repeatedly propose configuration change may require administrator specify particular machine must defend manual burden render difficult apply large contrast show section eight allow administrator spend modest effort time identify desirable configuration change organization several hundred thousand machine identify configuration change reduce number machine use launch identity snowball attack reach large fraction organization two identity snowball attack mechanics explain mechanics identity snowball attack context widely deploy identity service however attack define exploit weakness typical modern identity service entrust computer authority make figure three machine authenticate user behalf figure four identity snowball attack request behalf log user trust grant available attacker machine compromise figure three depict mechanics step one provide machine secret either enter password use method machine use secret obtain ticket grant ticket key distribution center grant machine right perform action behalf step two machine store locally avoid need repeatedly ask secret step three machine present obtain service ticket st step four machine present st bob machine part request behalf write file bob machine mark writable st prove bob machine machine authority perform action behalf cryptographic prevent bob machine later use st convince machine authority perform action behalf figure four depict identity snowball attack step one attacker compromise machine already log arrive work log store somewhere computer attacker use generate step two attacker attempt compromise every machine administrative privilege great variety possible design privilege allow arbitrarily modify machine enumerate include find machine might administrative privilege attacker might query organizational directory service scan machine name scan file snoop local broadcast traffic simply monitor outgo incoming figure five attack graph capture security group administrative privilege allow attacker launch identity snowball attack perform action st attacker might read memory start new process login session possibly modify system call execute os behalf action perform st could include try write security critical file registry key remote machine new application configure system service insecurely become backdoor verify subset approach control environment similar approach also describe previously although individual may sometimes prevent compromise network segmentation many available suggest case safe assume attacker difficulty exploit additional machine step three attacker repeat process attacker scan newly compromise machine perhaps lie wait additional log attacker use new compromise still machine three attack graph attack graph provide convenient representation security configuration network machine may vulnerable attack attack graph general formalism capture wide variety purpose suffice nod machine account security group figure five depict example attack graph direct edge graph mean control speak example machine perform action available account log edge represent type control perform action available member security group perform action available administrative privilege machine similarly security group administrative privilege attack graph analyze consist exactly four type edge detail section four login edge collect brief observation window edge largely static across observation window consider attacker compromise machine look attack graph identity snowball attack describe section two correspond first traverse edge traverse additional edge arrive illustrate attack graph capture identity snowball threat path first node second node attack graph attacker compromise first node also compromise second node remove figure five also illustrate change security configuration prevent attack suppose account group prevent attacker compromise continue compromise attack graph change correspond remove edge attack graph representation appropriately reflect longer reachable security correspondence change security configuration remove edge attack graph allow apply combinatorial optimization machine learn example cut algorithm section five apply attack graph calculate remove certain edge decrease number nod reach various start nod map back security configuration model attack graph remove edge correspond configuration change furthermore decrease number nod reachable various start nod mean attacker compromise machine correspond initial start node unable compromise many machine similarly machine learn section six use estimate cost remove various edge attack graph edge removal correspond configuration change learn technique actually estimate configuration change configuration change design uncover high impact security configuration change easily mention introduction consider change interfere accomplish work attack graph change correspond edge remove way contrast edge figure five may necessary perform job example may need administrative privilege order install upgrade work study organization several important class edge easily remove remove privilege time organization change move administrator one set administrator another set sometimes privilege old set never revoke easy configuration change remove privilege remove group privilege sometimes machine may consider one everyone need access example consider machine use present new technology presenter yet decide administrator might grant privilege machine exist large security group forget remove privilege later easy configuration change remove privilege presentation create smaller target security group presentation still pending prevent unnecessary powerful account account administrative privilege large number machine may important retain privilege case need deal unforeseen however powerful account careful log lest powerful expose insecure machine sometimes expose part accomplish task would trivial perform secure manner example administrator log machine update local security group machine could easily modify security configuration use st would secure use standard remote management tool easy configuration change powerful account owner pick small number secure machine typically use modify configuration forbid powerful account securely enforce policy already exist many powerful account take care log already know responsibility secure script execution task mention previous example modify local security group membership easy perform use st many elaborate task encode script need run large number target machine script task often design execute part login target machine also require administrative privilege script task upgrade audit security critical file straightforward way task log every machine powerful account administrative privilege however highly insecure single one machine compromise machine compromise use powerful account fortunately secure approach task powerful account create temporary local account machine grant local account administrative privilege respective machine log remote machine use temporary account execute script task delete temporary account st powerful account though slightly involve configuration change successfully run task without ever expose powerful account machine verify change exist script manner require less twenty line new code exact amount work may base formulate simple set evaluate change propose expect similar work initially remove group privilege add back privilege account actually log machine also secure use mechanism describe script log many machine step judge account still administrative right many powerful account reasonable ask log single secure machine always clear attack graph whether account login due script use heuristic account log ten machine part script work also encounter small number case could apply particular powerful account log machine underscore importance combinatorial optimization machine learn sheer amount configuration large organization make difficult sift manually furthermore best practice security configuration often either imprecise unnecessarily burdensome example limit account log machine leave open interpretation limit account single machine highly restrictive actually necessary show section eight restrict relatively small number powerful account significantly reduce number machine use launch identity snowball attack also even trivial change require investment time reason check relevant party apply standard management tool combinatorial optimization automatically select small number configuration change offer large improvement minimize require investment time similarly easy understand context give change however context may hard represent explicitly without add burden administrator keep describe every account security group script task machine learn allow estimate change without detail thereby avoid administrative burden model issue model security configuration use attack graph necessarily involve model example particular login occur point time destroy user log edge represent exist time window use estimate rate identity snowball attack proceed however estimate future benefit prevent login require prediction whether login happen treat issue conservatively discard time login attack graph intuitively assumption people repeatedly log machine part work machine compromise user log eventually see user future reduce threat identity snowball attack assumption guarantee also improve actual case repeat elaborate predictive model future login behavior might yield greater reduction identity snowball threat give amount effort change security configuration however section eight show identity snowball attack would threat even figure six integrate data collection system never repeat outside time window evaluate practice potential configuration change include edge addition removal example desirable configuration change might modify machine remove administrative privilege security group contain many account add back administrative privilege small number account deal focus select edge propose removal allow administrator add back edge part approve propose edge four collect data system analysis rely external provide need data security configuration implementation external provide complete security configuration organization may contain attack attacker would discover use describe section two secure manner similar data collection provide data security configuration however administrator rely attack hard discover would security obscurity must defend potential attack external supply three data collection show figure six develop study organization note commercial security also help collect information eighteen first source data audit collection service audit collection service collect event information implement active directory application event information include grant give period time st include machine name account ticket grant time grant make second source data system audit service tool scan machine within organization report back account security group administrative privilege machine log also contain mac address machine name time scan do third source data network correlation service service collect address resolution protocol log seventeen log allow address audit collection service log correlate mac address machine name system audit service log current data collection system collectively represent multiple engineer effort validation assure accuracy data collect however several place inaccurate might arise current data collection architecture correlation mac address address may incorrect common network time service use fail synchronize administrative privilege machine poll periodically may always reflect recent enumeration account security group do data insert may change time individual machine may multiple mac address possibly cause describe ambiguously data finally computer compromise may spoof mac address may provide incorrect information account administrative privilege compromise machine data collection system currently leverage example correlate mac address use network correlation service could entirely avoid audit collection service additionally record mac address problem miss change various security group could solve record change active directory feed change fortunately issue problem current system indeed surprise network time synchronization within single organization generally quite accurate security group membership change rarely client machine tend connect network use one mac address time observe either use wire wireless interface time problem compromise machine misrepresent security configuration fundamental problem prevent accomplish goal design prevent uncompromised machine become compromise regardless compromise machine report configuration still try remove edge point compromise machine account ie edge due report directly audit collection service grant thus data expose tamper compromise machine work do also serve validation part input data edge remove independent confirmation edge exist hence part data correct five apply cut design scale massive attack graph need model large graph nod millions edge find high impact edge graph model problem instance cut problem combinatorial optimization cut find set edge attack graph whose removal split graph two large visually depict figure seven figure seven sparse cut small set edge whose removal separate graph two large figure eight algorithmic iteration strive identify edge set remove thereby split graph many small overall role cut algorithm show figure eight cut algorithm approximate every edge distance benefit term define later section use rank group edge presentation administrator base administrator feedback edge weight attack graph update use machine learn algorithm next iteration cut integer program version cut large body work theoretical computer science community look efficiently compute approximate linear relaxation problem discuss relate work detail section nine solve linear relaxation take approach similar young algorithm remainder section describe exploit particular problem domain deviate young algorithm sake brevity assume reader already familiar young algorithm work cut paper follow section read without detail present remainder section define direct cut problem precisely use notation show figure nine input vertex set v edge set e edge cost c e demand set context unit demand every pair machine si ti refer set connect v output optimization set edge distance e integer program version edge distance one indicate edge cut edge distance zero indicate edge cut linear relaxation edge distance e allow take fractional value zero one x v force optimization equation three take path distance v equation four constrain distance positive equation two represent normalization relative size separate portion graph feasible solution either separate many pair si ti small distance x si ti separate pair large distance edge cost initially set minimize subject e e si ti one v v v e x v e zero x v zero one two three four figure nine cut formulation one update subsequent describe section six young algorithm solve linear program iteratively find vertices increase edge distance e amount proportional edge cost deviate young algorithm need faster design interactive use thus need complete within even graph millions edge fortunately significantly flexibility goal young algorithm need estimate actual optimal value objective function settle estimate relative importance edge objective function example edge many account able compromise many machine bad long edge identify important cut exact value objective function important allow compute looser approximation young algorithm exploit additional flexibility two ways initially describe high level first apply stochastic gradient descent rather classic gradient descent allow use sample dramatically reduce time compute gradient cost accuracy second use change eliminate inequality present young formulation turn eliminate step size gradient descent make problem nonlinear make convergence guarantee complicate however reduce need accuracy mean need run convergence avoid expensive around step size perform change two step first make problem nonlinear move constraint equation two objective function revise formulation show figure ten note reformulation change underlie model optimal solution reformulate problem trivially convert optimal solution original problem scale vice second substitute use new e original e give equation five new e leave unconstrained use substitution e drop e e eu e one e one e one five deal three nine way young algorithm rather represent x v directly simply compute minimize subject v v v e e si ti e x v e zero x v zero six seven eight nine ten figure ten cut formulation use e involve e change young algorithm begin initial uniform assignment edge distance iteratively refine assignment use step gradient descent estimate gradient use sample choose small number nod node conduct search forward backwards use algorithm fourteen tree construct algorithm interpret set purpose estimate gradient particular path yield distance x si ti contribute numerator objective function number edge e appear yield contribution denominator objective function interpret benefit b e assign linear program cut edge b e cross e avoid multiple distance two give nod perturb edge distance small random multiplicative factor path computation algorithm use number future work hope explore among thoroughly however find follow parameter value suffice purpose gradient descent step size ten bind one number bind size tree bind number tree algorithm cut complete minute server ten ram contrast run implementation path configuration require young algorithm ie without sample start nod path tree would require four order magnitude run time simply many nod visit graph six learn edge cost mention section three remove different edge attack graph vary dramatically cut algorithm incorporate different edge cost number edge graph make infeasible set cost manually consider set edge cost instead decide use machine learn algorithm derive support vector machine learn cost base feedback administrator willingness make security configuration change application cut present administrator list propose edge cut administrator label edge cut keep opinion give us implicit feedback relative magnitude cost edge mark worth keep cost must benefit cut edge mark worth cut cost must less benefit machine learn algorithm generalize feedback individual edge cost edge every iteration way learn time propose primarily configuration change administrator interest implement learn approach advantage tailor organization require give usage pattern correlate edge cost whether mostly unused administrative privilege must keep around unusual section five paper follow section read without detail present remainder section define set feature edge try learn best approximation true edge cost set feature twelve basic graph edge number account security group machine point start node edge three feature number account security group machine start node point three feature correspond number end node edge six feature let fe denote feature vector edge e edge cost c e model linear function feature ie c e fe vector w learn use edge label generate cost function satisfy certain margin every edge mark cut create constraint edge cost less benefit assign cut linear program cut edge every edge mark keep create constraint edge cost greater benefit assign linear program cut edge thus set label edge translate set linear cost b e c e one e keep b e c e one e cut eleven twelve use linear framework eleven learn cost function eleven twelve translate classification problem follow let ye encode label edge e ye one edge cut ye one keep problem learn cost function boil learn separate hyperplane specify normal vector w w cost label edge fall correct side benefit b e approach problem via principle aim find separate hyperplane one provide margin separation positive negative class case impossible find linear hyperplane separate data version allow slack translate follow optimization problem zero one ye b e c e w thirteen min w e value choose minimize error function zero one ye b e c e call hinge loss zero cost estimate edge e fall correct side benefit otherwise equal error however hinge loss function difficult optimize instead apply scale logistic loss differentiable everywhere closely approximate hinge loss iteration obtain label edge administrator incorporate train set feature keep edge update subsequent cut edge freeze value iteration cut since henceforth disappear graph optimal value w find via gradient descent use cost every edge next iteration linear program section five seven propose edge group cut early development discover commonly want apply single action entire group edge common start end node example administrator sometimes want remove group administrative machine correspond remove every edge group start node another example administrator sometimes want require give powerful account log one machine correspond remove one edge machine start node particular powerful account end node make easier act edge group present two group outgo edge start node incoming edge end node also propose specific edge edge edge group rank function cost benefit case edge group cost benefit define sum cost benefit edge group intuitively edge edge group rank highly high benefit modest benefit low cost rank function b e c e b e capture intuition find work well experiment indeed perform better either benefit b e distance e alone finally apply filter edge group base experience never want remove every login particular machine without look identity account log therefore propose cut edge group specify node machine though allow edge cut part edge group individual edge administrator accept reject modest number configuration change round make administrator rerun algorithm matter algorithm incorporate feedback round produce new better reflect ad machine account security group total nod unique total edge table one number entity evaluation data set ministrator notion small amount experimentation find present time work well recommend many configuration change yet administrator scroll entire set ease consist incoming edge group outgo edge group individual edge edge group may correspond large number individual edge learn algorithm benefit little large number similar mark subset edge group cut explicitly keep mark opinion sample individual edge group use input learn algorithm label average ten group outgo incoming edge keep iteration sample three individual edge learn label edge group find sufficient learn algorithm eight evaluation begin present statistics data set use evaluate quantify severity threat identity snowball attack status quo section show quickly effectively identify set configuration change change significantly reduce threat identity snowball attack section examine configuration change section compare algorithmic approach potential propose configuration change evaluate data set describe section four data set cover period days march march table one show number type entity comprise node edge attack graph explain section three set unique derive filter total set disregard time login occur retain differ either machine account involve figure eleven depict number node group number nod point attack graph lesson figure four different edge attack graph similar distribution figure eleven show account log small number machine approximately log one machine small number account log large number machine figure eleven b show account administrative privilege small number figure eleven relative quantity node number nod point figure twelve compromise random start node function time assumption quickly destroy login machine small number account administrative privilege large number machine figure eleven c show similar phenomenon administrative privilege security group figure eleven show security group small security group large distribution suggest small number account security group machine may play large role exposure organization identity snowball attack example grant administrative privilege machine large group pose far greater risk grant administrative privilege small group case may opportunity propose small number configuration change produce large reduction exposure organization identity snowball attack result present section show indeed case justify statement section identity snowball attack pose acute threat even assumption login observe measurement window ever randomly sample machine set machine least one user log course observation period machine calculate number machine reach use identity snowball attack function time assume destroy immediately login minimize attacker window opportunity figure twelve show result experiment curve show percentile median percentile number machine reach via identity snowball attack assumption median curve attacker compromise machine within one day machine within four days percentile curve show similarly rapid rat compromise reason confidentiality cap number reachable machine report result demonstrate threat identity snowball attack even lifetime defender effectiveness design run periodically security configuration review configuration change make past week however evaluation focus initial use reduce threat identity snowball attack organization previously run figure thirteen show effectiveness run ten produce curve randomly sample machine set machine least one user log course observation period use point initial compromise set initial compromise iteration calculate number machine could reach launch identity snowball attack different initial compromise confidentiality reason display exact number machine could compromise number excess curve label original show graph run sample machine possible launch identity snowball attack result compromise machine apply configuration change identify first iteration reduce sample machine able launch identity snowball attack reach machine second iteration show similar sharp drop progress slow subsequent tenth iteration machine use launch identity snowball attack compromise machine reduction decrease ten still remain small set machine use launch identity snowball attack though would like drive number machine zero clear whether feasible account important administrative organization must continue log somewhere number initial compromise lead large number compromise one many reasonable metrics right metric may vary organization organization may want focus number initial compromise threaten even small number machine fifty may want minimize weight sum number machine threaten initial compromise figure thirteen show reduce number machine reachable initial compromise hence improve wide range reasonable metrics include give turn effort require figure thirteen graph show threat reduction run ten measure randomly select machine point initial compromise point x indicate initial compromise x could reach machine use identity snowball attack right better original curve far leave graph ten propose total edge edge group ten draw total potential edge group millions potential edge change criteria give section thus mark cut manageable number configuration change organization almost hundred thousand account ten together take less three ten ram less half hour spend wait make rest time spend examine demonstrate meet goal allow administrator identify desirable security configuration change large organization modest effort apply standard management implement change comparison purpose also run version machine learn aspect disable instead consistently set edge unit cost refer approach evaluate difference threat reduction two approach use methodology use produce figure thirteen find almost always produce smaller reduction number machine use launch identity snowball attack reach machine however benefit machine learn uneven first two edge need identify quite obvious average launch point machine compare next six edge become less obvious start much worse average launch point machine peak machine last two total number remain configuration change decrease change find start catch average seven launch point machine final two experiment conclude whole machine learn indeed allow better propose configuration change actually implement though number change become sufficiently small advantage machine learn decrease examine performance cost learner detail find average across ten misclassification rate train set test set edge learn cost fall wrong side benefit cost edge label cut greater benefit low train error rate show successfully fit train data reason high test misclassification rate lie sample procedure create train test data set discuss section seven train set contain three individual edge select edge group regardless group size test set contain rest label edge result train set encourage explain numerous small edge group typically account smaller number large edge group typically administrative privilege security group manifest test error pattern learn change feedback give iteration consistently assign positive weight machine group start node negative weight group start node sometimes assign negative weight group destination node positive weight drive cost remove administrative privilege group individual account whereas negative weight drive cost remove account administrative privilege group examination change configuration change identify data set fall describe section table two show number type configuration change approve iteration dramatic initial reduction identity snowball threat first iteration result change fit remove group privilege category machine grant administrative privilege security group contain account continue find group privilege remove later though impact smaller first second identify large number change secure script execution category find small number script task carry highly privilege account mark conversion use mechanism describe section category group administrative privilege later continue yield change category diminish importance third iteration later security configuration change identify prevent unnecessary powerful account category find apply simple require iteration secure script remove large group nine fourteen five five nine one seventeen one fifteen eleven eight five seven five prevent unnecessary zero zero one two three four five six seven eight nine ten table two configuration change statistics iteration powerful log sufficient eliminate large number potential identity snowball attack comparison section compare set enterprise security policy note specific stop identity snowball attack enterprise network combinatorial optimization machine learn applicable arbitrary attack graph graph edge arbitrary feature set comparison design focus edge class identify section make comparison fair limit heuristic propose number edge edge group propose allow heuristic use equal amount administrator time evaluate use methodology use produce figure thirteen find ten randomly select potential initial compromise would still allow identity snowball attack reach machine preview result find ten significantly outperform first heuristic consider identify security group contain number account heuristic base rule thumb large security group administrative privilege machine propose outgo edge group ten allow first heuristic propose security group longer privilege machine run heuristic find fail identify many edge group cut simple reason large security group top administrative privilege anywhere second heuristic consider design address shortcoming first heuristic second heuristic rank security group product attack graph ie number account belong group time number machine group administrative privilege find identify security group administrative privilege remove identify proceed remove privilege every one group find potential initial compromise would still allow identity snowball attack reach machine third heuristic consider focus reduce number machine powerful account log base experience second heuristic rank account product number machine account log number machine account administrative privilege restrict every possible account include originally consider log one machine find potential initial compromise would still allow identity snowball attack reach machine finally evaluate combine second third allow remove administrative privilege security group reduce number machine account log even run combine heuristic potential initial compromise still compromise machine thus consider significantly inferior ten also suggest consider impact configuration change network use cut provide benefit compare base simply consider local configuration change nine relate work much research focus prevent anonymous machine compromise ie compromise launch without st form authentication five thirteen nineteen twelve work target identify compromise subsequent effect occur intrusion prevention detection fall complement work contain damage individual compromise still occur without rely able detect compromise singer describe incident attack identity snowball component successfully exploit machine across number sit al analyze feasibility fully attack several decrease propagation rate obscure address target host differ work al focus limit propagation compromise propose change security configuration attempt obscure set target host rest section compare closely relate prior work group major attack graph section combinatorial optimization section machine learn section section discuss work alternative approach authentication authorization attack graph analysis attack graph general technique model security network machine use model local remote elevation privilege attack due insecure access control list insecure network rule issue two prior work look construction attack graph sophisticate model network feature graph analysis use algorithmic visualization approach model feature necessary identity snowball attack algorithmic approach differ prior algorithmic approach two main ways first algorithmic prior work assume wade every potential configuration change either assign cost change assign cost reject large number propose change high cost ie infeasible use machine learn estimate feasibility configuration change thereby avoid burden administrator assign cost manually propose change reflect estimate cost infeasible change propose less often significantly reduce burden allow apply easily large organization ie one machine second algorithmic prior work generally assume set machine must protect use model check approximate reason engine find particular attack machine machine allow arbitrary policy specify policy provide protect particular machine file large organization enough protect particular machine also unacceptable large number compromise identity snowball attack pose exactly threat focus protect small number machine none algorithmic prior work directly applicable instead use new algorithm base cut visualization powerful technique understand data difficult apply large attack graph recent paper improve attack graph visualization demonstrate scale sixteen machine though develop visualize massive graph prior work evaluate whether succeed illuminate small set high impact configuration change need administrator prior work attack graph specifically focus identity snowball attack best knowledge work first measure severity threat large organization though analysis could do propose work direct focus make measurement easier example compare prior work examine every file system registry object need collect far less data per machine allow easily scale machine large organization study nonetheless interest area future work understand whether help class attack graph consider prior work even attack graph arise include additional attack local elevation privilege exploit combinatorial optimization cut algorithm leverage prior work problem recent work make progress cut approximation ratio four one also large body work efficiently compute three borrow directly young algorithm exploit greater flexibility around approximate objective function section five explain detail exploit flexibility use random sample estimate gradient cut algorithm prior work sometimes refer general approach stochastic approximation stochastic optimization stochastic gradient descent six though aware prior work use sample strategy primary contribution overall technique manage security configuration cut algorithm machine learn eleven machine learn algorithm classification regression cost learn algorithm present section six subtly different usual application classification rather learn linear function bound one one learn linear function greater less benefit assign linear program margin vary offset also apply learn rank function twenty ten solve relative item one rank item two optimal rank set would mean estimate b e contrast algorithm operate absolute cost edge one higher benefit edge one fix number alternative approach authentication large amount research focus development alternative authentication authorization much research focus decentralize seven sixteen apply would require centralize data need create attack graph task make harder decentralize nature one area see adoption authentication combine biometrics effectively prevent password steal prevent hijack compromise system mention section two modern identity entrust perform action behalf user design prevent trust abuse computer compromise active research authentication authorization include restrict delegation information flow security restrict delegation user empower another user bob perform particular action behalf oppose classic delegation analogous blank check system incorporate user identity restrict file access require access file particular program information flow security enable access check base flow information process sixty nine increase information available security take user identity account compare require significantly effort deploy work security configuration exist furthermore even alternative widely deploy seem unlikely would perfectly configure system security turn could potentially use alternative identify security configuration change high impact ten conclusion become ever interconnect enterprise emerge world cloud compute paper focus analyze importance interconnection common identity operate suggest identity snowball attack pose ever acute threat unless take defensive measure first system defend identity snowball attack large measure threat attack single large organization demonstrate effectiveness address threat accomplish goal apply novel machine learn combinatorial optimization attack graph optimistic introduce apply type attack graph enhance ability secure distribute eleven responsible disclosure many people thank support project would particularly like thank eric ted hardy cam would also like thank anonymous shepherd savage helpful feedback paper also greatly enjoy work forefront team problem identity snowball attack version forefront security suite available public beta beta version collect security configuration relevant organization study work extremely helpful work us analyze security configuration fix identify express heartfelt gratitude twelve reference one agarwal k min uncut min deletion direct cut log n approximation two p scalable network vulnerability analysis three e kale log n approximation cut time four expander flow geometric graph partition five r address obfuscation efficient approach combat broad range memory error exploit security six g advance lecture machine learn springer seven r butler v foster j c authentication infrastructure computer twelve eight j c wang trace technique identify cause nine k enforce confidentiality integrity web security ten w support vector ordinal regression neural computation nineteen three eleven c v network machine learn twenty twelve costa j l l p vigilante containment worm thirteen c c pu h j p p q automatic adaptive detection prevention attack security fourteen e note two connexion graph theory one one fifteen sixteen c b b r b certificate theory seventeen address resolution protocol eighteen forefront nineteen c tang king secure web browse web browser security privacy twenty r k support vector learn ordinal regression international conference artificial neural network jam c spall introduction stochastic search biometrics springer optimization j riley protect network perimeter data joshi king g p detect past present predicate g decentralize user authentication global file system king p backtrack computer one p c stein e faster approximation unit capacity concurrent flow problem rout find sparse cut journal compute r morris information flow control standard os b burrow e authentication distribute theory practice computer thirty live id n parallel approximation algorithm positive linear program v savage c n weaver inside worm security privacy h n approximation algorithm direct cut information process letter interactive visualization large graph network thesis university p j lambert see access control workshop formal security j song dynamic taint analysis automatic detection analysis signature generation exploit commodity noel manage attack graph complexity visual hierarchical aggregation workshop visualization data mine computer security x network security analyzer security n p k wang n ghost browser analysis forty j f multifaceted approach understand phenomenon w w smart card handbook r b simple distribute security infrastructure j w c inoculate address harvest p ross handbook e framework understand predict insider attack conference security white paper root account security assertion markup language f maximum concurrent flow problem j r j wing generation analysis attack graph security privacy singer tempt fate login thirty one fifty e worm program analysis computer communication review nineteen one j c j schiller authentication service open network l c graph generation tool information survivability conference white paper root account privilege access system center manager attribute g support vector machine reproduce kernel space randomize press b information security technology rely case study social engineer security authorize singularity n young sequential parallel mix pack cover sixty n e make information flow explicit c w gong code red worm propagation model analysis