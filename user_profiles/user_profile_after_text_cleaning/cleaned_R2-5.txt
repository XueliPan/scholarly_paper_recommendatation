accessibility commons infrastructure web accessibility lunn p research laboratory japan computer science stony brook university stony brook department computer science engineer university wa school computer science university build road abstract research project assistive technology create order improve web accessibility visually impair however since project disconnect one another isolate separate tool store disparate represent incompatible format web accessibility could greatly improve individual merge integration method serve bridge future academic research project end enable new reach end quickly therefore introduce accessibility commons common infrastructure integrate store share design improve web accessibility explore exist tool show produce could integrate common infrastructure present design make order help ensure common repository remain relevant future new develop discuss common infrastructure component facilitate social approach improve accessibility subject social issue assistive information service service general term design human factor standardization web accessibility annotation permission make digital hard copy part work personal classroom use grant without fee provide copy make distribute profit commercial advantage copy bear notice full citation first page copy otherwise republish post redistribute list require prior specific permission fee assets eight nova scotia canada copyright one introduction extra information add original document potential improve web accessibility example alternative text add image one useful form allow visually impair people understand function image use improve web accessibility broad common use head tag navigation label form aria markup indicate semantic dynamic content general two type internal embed original document external standoff store separately associate original document internal author appropriate external create anybody power external people different interest act without affect original content require content involve main challenge provide external association specific content describe anchor specific part document therefore key effective use external various research project focus automatic semiautomatic creation adaptation external leverage accessibility base however since project isolate isolate separate tool store disparate represent incompatible format web accessibility could improve individual merge example one system automatically infer alternative text another project automatically infer main content position combination may dramatically improve accessibility visually impair method integrate disparate type enable research institute develop comprehensive set tool base share technology importantly share community infrastructure serve bridge future academic research project end enable new technology reach end quickly end propose common infrastructure accessibility commons whose goal integrate share produce various research project assistive produce seek enable need ambitious goal follow two flexible schema represent common repository method integrate disparate type paper first review exist research project involve nonvisual propose common environment integration share also discuss design help common repository remain relevant future new develop describe several use common environment hearsay finally conclude explain accessibility commons contribute goal social accessibility two relate work work relate accessibility commons include numerous accessibility research project generate use project deal problem data integration among research project screen section summarize already use exist accessibility research project thorough understand exist help inform strategy hopefully ensure accessibility commons remain relevant new project develop fourteen browser visually impair people browser document adobe flash three client side provide alternate content accessible visually impair people do use describe describe combine flash object generate accessible alternate content use specify flash query use specify flash object addition allow add manual head alternative text use common repository could share user provide alternative people use text head tag hearsay hearsay nonvisual web browser fifteen use various content analysis improve web accessibility among browse identification relevant information eighteen language detection sixteen concept detection seventeen hearsay use result analyse annotate web content example browse algorithm insert start label instruct browser begin read page specific position hearsay browser interface interpret label provide navigate edit create manual label label store personal share use uniform share repository allow benefit label create hearsay time future hearsay access create pool blind web image image eleven provide alternative text many web image improve accessibility make alternative text use contextual analysis link enhance optical character recognition human label alternative text string store share reference hash image image store alternative text supply browse web user visit first time attempt contextual analysis fail user request human label combine alternative text common likely experience benefit create alternative annotation annotation twenty research project entire annotate annotation use system check match base allow entire small set create share number could better web accessibility social compute social accessibility social accessibility nineteen project improve web accessibility provide collaborative author mechanism combine accessibility approach drastically shorten time accessibility since volunteer user fix per request find report familiar browse environment request send social accessibility server collaboratively fix volunteer initially support alternative text head tag store common repository also provide client interface seamlessly apply proof concept propose common environment four accessibility framework inject accessibility support web twenty currently main target script use run directly fire two screen reader implement extension identify aria markup provide use currently distribute form script tool could benefit semantic knowledge encode script store flexible common repository twelve another common script framework web use collaboratively improve web accessibility goal enable web write script use improve accessibility blind web example script provide demonstrate image implement framework order provide alternative text web browse suggest alternative text web try improve page structural semantics accessibility device independence tool entire oppose individual page rely ontological cascade style sheet broadly apply accurate scalable explicitly enunciate implicit semantics visual page structure group typographic cue enable machine understand original important wish provide similar experience visually impair fully sight regard tool reverse engineer achieve design rediscovery jaw jaw one popular screen label feature allow provide alternative text image flash object latest version jaw make use aria ten world wide web consortium internal standard improve accessibility dynamic content summary common mention previous section follow four address element address condition semantics mean explain capture section integration web domain life science domain two active integrate since many handle since often store separately project strong demand data integration data exchange semantic web nine project initiative integrate exchange web web use specify title mean semantic describe resource description framework six use web ontology language owl five add handle owl interpret mean web also handle similar mean example two bank one application use equally well even though may use different visual structure since write one format necessary convert data format data exchange relatively easy life science domain integrate genome active area thirteen project aim integrate many yeast past yeast genome project store yeast genome data search yeast genome data result table combine data store separate however since data format usually unchanging since store data easy convert data integration relatively easy contrast accessibility fix format format vary application application table script integrate accessibility challenge support many format three accessibility commons propose accessibility commons infrastructure integrate share produce variety research project assistive work area infrastructure consist two key repository flexible schema conversion mechanism flexibility two key feature repository since exist uniform since future form predict schema flexible enough store define schema use web accessibility exploit repository amount available number people actually use key metrics success infrastructure number people benefit infrastructure increase number use common exist framework free create common framework could also accelerate research project however unexpected form may appear future new type invent therefore propose schema final one schema flexible enough extend appear addition provide system conversion accelerate growth convert application prefer format common format possible amount available greatly increase discuss schema conversion system format investigation research project screen find consist primary address target specify document element address description apply condition condition use semantics mean table one show type use application hearsay table one comparison project screen address element address condition main semantics wild card dynamic head alternative text domain match exact match label alternative text annotation regular expression social accessibility wild card jaw domain match relative path wild card wild card program program main challenge define format make various type live together repository external study various invent cope different common format need flexible extensible review type detail address often use target flexibility search efficiency address important exist adopt various form address specify page apply example annotation use regular use format jaw domain match specifically match domain part flexible multiple form address represent address pair address identifier represent address without loss information content type address also use filter server return query result client request server send information include client want server use send client query field method application use query even application know precise form address however high load server index use index use pattern match use prefix match index must use match achieve high performance search extract part use index possible case choose extract domain part wild card regular domain part rarely use except specify wild card regular expression often change several reason load balance extract however prefix match use wild card use easy solution reverse order store without wild card allow us use prefix match reverse domain name index even change head alternative text alternative text program aria program alternative text since domain share many store different table limitation method require wild card regular expression use begin domain prohibit rarely appear matter practical case element address element address use specify target document method element address vary among common element address image video text match style match use since element address method advantage disadvantage adopt type element address vary application example understand jaw relative path match address address type content address use represent element address element address often express combination address example use combination image image specify image element image detect image change image human readable therefore schema must able specify two form element address condition able specify condition check verify specific applicable condition important information optimize range helpful example web server occasionally return different content even unchanged may inject new optimize web content client browser use header header case condition improve quality annotation use condition choose applicable check existence specify possible specify multiple condition use logical table two semantics table three repository schema declarative semantics use project alternative text social accessibility social accessibility head text insertion element group element label language hearsay hearsay hearsay hearsay dynamic content jaw procedural semantics fennec script use project script record hearsay name engine semantics semantics describe mean semantics express type semantics content similar information however ensure express semantics form compose prevent us reuse even though example provide one file include head alternative alternate content information combine instead store separately improve easier reuse lead overall accessibility accord investigation mainly declarative word add extra information involve complex process contrast often procedural table two show list declarative procedural must separate type store separately client require server know structure server distinguish declarative procedural therefore separate submit server show example section table type name integer id integer eight text eight text text integer available bool table address type name integer id integer eight text table condition name id table type name integer id domain type integer integer eight text example server twelve true example three div one p example two div one p example server request prefer format convert prefer format figure one conversion schema table three show schema accessibility previous commons subsection since multiple element address logical condition support appear another table infrastructure mention may become obsolete update structure change case need edit make edit easier original pattern regular expression include schema available field use disable specify field field also add schema id primary key table conversion application handle know example application understand expression exploit whose element address expression may decrease amount use application order cope problem provide conversion figure one show overview conversion system ideally able use without conversion however conversion user image web server author server figure two system overview advantage conversion provide must implement conversion would expensive application developer implement conversion system handle type client would need update new type appear initial cost maintenance cost would encourage application focus avoid situation conversion important example conversion application require regular expression format address system convert write format regular expression format similar way require element address system convert image expression course convert format example format convert domain format case therefore use understand domain match case system must ignore request incompatible client four prototype system implement prototype propose accessibility commons infrastructure server implement use ruby rail seven eight schema describe section zero figure two show system overview author person application create submit server user person application use server user convert document accessible document create use take server client application submit client use object notation represent content contain content server system receive generate id store server return id client client application retrieve server send want require type information example client send request follow server match convert match correspond request format client use adaptive conversion return response id server client use request adaptive conversion system convert client skip handle prototype system work social accessibility project nineteen currently server alpha stage plan release public beta version late year five use section present several use case accessibility commons infrastructure show extract client also discuss hearsay audio browser prototype use schema store believe show flexibility infrastructure case create accessible alternate content dynamic content base best knowledge feature implement mixture store separately increase follow part node path id head div two node path one fuji node node path two ref path p two node node specify structure alternate content structure also show element represent id head div two head first image element alternate text fuji second image element alternate text whose text take two example alternative text refer another element notation specific difficult share however specify head tag add static alternative text example readily share part nod whose element address express description refer content convert common form extract first submit server id return server replace element external id case follow create original extract twenty external twenty external node path two ref path p two node external submit server fennec convert replace external common use create example image alternative text use like attach path node path flower node attach mean alternative text flower case hearsay hearsay research team stony brook university work content analysis aim help blind find relevant information quickly make nonvisual web browse usable efficient modular architecture hearsay web browser allow plug different produce label web content browser use label generate provide usable interface navigate label sixteen since guarantee accuracy hearsay team develop prototype module allow override result automatic label manual benefit social network share label initially team independently design schema store share label however follow joint effort create common infrastructure hearsay migrate accessibility commons infrastructure continue use schema store hearsay hearsay currently use label mark begin main content eighteen source language require web seventeen dynamic content sixteen free text label hearsay team plan add support head alternative text also look ways extend support aria content record case use case look data consumption individual deposit help large scale creation use web ontology language owl technology already present within tool automatically create end tool consumption also advantageous sit change structure quickly regenerate importantly extra information already present within semantics machine readable use bridge tool hearsay provide repository enable disjoint work concert possible individually six discussion future work discuss inevitable attack conflict performance conflict break accumulate may conflict example two different alternative may supply image also repository may contain break incorrect meaningless apply change element address work make confuse case currently infrastructure detect conflict break system return correspond object ask use leave client break system expect maintain someone amount user large enough break report short time fix think major problem conflict approach relate return con since client consider conflict may apply conflict randomly user may become confuse use client however smart client may able choose better use context analysis approach would like leave open addition since server provide author use field client determine create reputation system available client choose supply reliable author alternatively client know author automatic analysis engine client give lower preference relative human author also client choose latest may fit current page course information provide infrastructure possibility attack submit lot meaningless break exist infrastructure though definitely detect reject impossible cover however possible reduce damage introduce protection limit number query per second currently leave future work performance good performance crucial infrastructure expect millions record accumulate common repository growth may negatively affect performance repository dislike unresponsive describe section choose use domain name index therefore performance may depend much exist domain annotation twenty file use process time reasonable since granularity finer annotation amount may record domain however consider hardware network believe infrastructure able process user query acceptable response time addition client cache process time drastically reduce client query difference cache latest also since query process parallel easy enhance infrastructure require seven conclusion paper review exist research project concern nonvisual web browse propose common infrastructure call accessibility commons integration share thank infrastructure web accessibility improve merge exist disconnect research project infrastructure consist two common repository flexible schema conversion system repository design accumulate type produce various research project assistive conversion system convert application prefer format cost develop reduce hope infrastructure accelerate accessibility research project development accessibility improve real usability goal standardize infrastructure exist accessibility project future project easily adapt next technical challenge broaden applicability strive support dynamic content flash leverage value deliver useful accessible information real effectively deploy eight thank implementation prototype also thank test system finally would like thank anonymous comment nine reference one jaw screen read two fire screen read extension three adobe flash four five owl six seven ruby rail eight nine semantic web activity ten aria eleven j p r r e g l make web image accessible assets six proceed international conference accessibility twelve j p r e collaborative script framework web seven proceed international conference web accessibility vol thirteen k h k yip smith r semantic web use case integrate data life domain one fourteen h h c introduce content accessibility visually impair assets seven proceed international conference accessibility fifteen v stent g yang hearsay enable audio browse content four proceed international conference world wide web sixteen al towards one world web eight proceed international conference web accessibility seventeen j v assistive browser conduct web eight proceed international conference intelligent user interface eighteen j v nonvisual seven proceed international conference world wide web nineteen h c social accessibility achieve accessibility collaborative author assets eight proceed international conference accessibility twenty h c k j annotation reconstruct exist page accessible assets two proceed fifth international conference assistive harper structural semantics accessibility device independence seven interaction ten e j j h c reverse engineer design recovery taxonomy