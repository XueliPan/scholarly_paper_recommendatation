science computer program strider approach change configuration management support wanga chad j wanga chun research research china receive accept available two abstract describe new approach call strider change configuration management support strider approach without rely use state identify potential cause differ program use state trace identify actual state use statistical behavior model noise filter strider approach instead link vague high level relevant action model management support term individual name piece low level configuration state provide precise information computer use configuration demonstrate strider approach reduce problem complexity several order magnitude make analysis possible right reserve one introduction change configuration management refer task monitor configuration change maintain healthy configuration state change configuration support refer task perform repair bring back healthy configuration state configuration occur correspond address research management group address ym wang see front matter right reserve ym wang al science computer program computer large install base large number available package prove daunt task sixteen ideally approach could greatly simplify task every os component every application would accurately fully specify set configuration data program use health configuration data must satisfy among os information could use compose dependency information golden configuration state ideal state os function correctly practice several first large number possible hardware make difficult fully specify golden state individual machine machine essentially unique configuration also study show difficult declare maintain accurate second user make intend change configuration machine machine configuration state move one good state another may golden state machine must stay third correct program often define respect service incorrect program behavior perceive one user may look perfectly fine another user absolute goldenness sometimes hard define finally available majority exist legacy motivate strider approach strider use state identify configuration state use state trace discover relevant state dependency information use statistical behavior model noise filter core strider computer ten accommodate base knowledge well derive experiment use state trace main strider follow also serve outline paper first identify three strider key handle complexity analysis attack mess mass filter apply allow us decompose seemingly intractable solve strider component second introduce strider process conceptual use various strider solve different include configuration certification change audit implement third describe strider implement strider finally present strider string together process evaluate performance discuss simplify presentation focus discussion particular type important configuration registry twenty provide hierarchical persistent storage name type generally applicable type configuration store discuss end paper ym wang al science computer program begin describe three strider use configuration ie result misconfiguration primary example illustrate problem decomposition two strider analysis configuration failure occur program modify piece configuration data time later program another program read modification experience persistent failure repair application restart machine failure exhibit form program crash program error box simply deliver service particular configuration cause data share persistent store present great challenge share store may serve many purpose may contain naturally share file system may allow different time discover integrate provide user experience may allow install new default exist may allow individual register system service reuse base may allow individual register host provide extensibility mechanism computer support engineer typically perform analysis configuration base knowledge past experience similar try search web use search string construct ad way attempt describe search highly imprecise often result large number irrelevant article furthermore guarantee repair action suggest article would actually modify configuration data relevant failure question strider propose analysis primary approach give configuration failure represent high dimensional state vector configuration data example machine typically around registry configuration failure due faulty entry represent vector contain entry main challenge narrow problem entry reduce dimensionality level handle develop mechanical exclude irrelevant current failure develop statistical filter relevant less likely root narrow potential small subset perform precise computer entry subset identify potential fix optionally use imprecise symptom later stage help rank importance match information retrieve give name registry entry answer follow two question ym wang al science computer program one function entry provide higher level information help understand function entry may associate entry application os component mainly responsible update therefore potentially use correct cause entry may also identify entry noise five viewpoint configuration management entry unlikely configuration label filter noise discuss detail introduce third strider principle two know associate entry quickly point support article know cause entry information useful also apply correct registry application computer populate today experience experiment record registry access trace configuration action well future attack mess mass apply first principle allow us decompose problem three part mechanical statistical develop second principle provide decomposition mechanical part every machine start approximately registry installation process majority give freedom flexibility grow registry way want configure machine differently different set freedom flexibility help create large install base also create mess every machine unique configuration machine interact unique way example default file behavior extensible browser may depend particular combination system configuration failure occur lack golden state vector particular unique configuration hand typically present major obstacle strider make observation absolutely golden state may necessary program fail due configuration problem particular machine particular time suffice find state vector either another machine past machine program work space domain mass ie large install base offer high probability one find healthy machine analysis time domain periodic state snapshot feature system restore often provide good state vector past analysis give good state vector bad state vector mechanical part strider operate follow first perform state operation two obtain consist must capture root difference program behavior second ask user fail program action perform state trace record consist configuration data actually use input current fail execution finally intersect ym wang al science computer program two identify potential current failure illustration three show fig one preliminary result experiment show since trace mostly orthogonal number intersection often several order magnitude smaller full vector describe bad state decompose mechanical part strider state state trace state intersection utilize various take advantage mass example good state vector available past machine one machine use multiple state intersection reduce size candidate set similarly application failure occur multiple machine state trace machine intersect together narrow candidate set even state available intersect multiple trace may help eliminate part execution trace due system irrelevant deterministic application failure target caveat warrant order elaborate succeed root configuration failure must single entry fix set differ every pair fortunately experience root cause indeed responsible many configuration state state trace distinguish strider approach approach instead rely full specification absolutely golden state provide use state trace scope essentially partial specification portion configuration state actually access code path take fail program execution use state take advantage good state relevant failure available state past machine program fail filter immediate concern mechanical part strider large class registry update read frequently mean appear trace also appear intersection high probability thus consistently inflate size final candidate set usage count cache seed random number window position recently use relate information strider make observation high frequency consider operational state instead configuration state mostly interest configuration machine healthy presence high frequency update configuration failure occur operational data less likely root contrast configuration data change often machine history change recently since application last know work likely root lead concept state rank base inverse change frequency assign candidate intersection score inversely depend change frequency ym wang al science computer program effort accord score rank optionally score threshold filter noise ignore sophisticate statistical analysis additionally take account abnormal data content improve effectiveness observation apply analysis clearly class registry always contain different data different machine example data may function computer name user name user security globally unique hardware address constitute natural biological diversity among machine less likely root cause configuration much like human simply responsible natural diversity human think genetic disease even though frequently appear genetic sick healthy people summary approach start large complex problem registry contain many many change fortunately apply filter principle source complexity tend filter allow us focus simpler registry likely distinguish strider approach approach instead rely specification operational data versus configuration data use behavior monitor statistical model derive distinction similar statistical also use predict potential analyze large number state flag deviate normal majority problematic require special attention note registry entry strider filter noise one always construct entry fact root false negative false inherent statistical empirical result far indicate noise filter essential deal allow successful large class discuss noise filter detail later section three strider process apply three strider allow decomposition problem five strider state state trace state intersection state rank computer paper use term strider process refer conceptual use strider build block specific way specific type problem fig one illustrate strider process phase state result fail application trace intersect produce candidate set rank filter state rank module report gather know emphasize repeatedly appear report false ym wang al science computer program fig one strider process phase perform entry candidate set yield one follow three type information one support article describe know fix relate entry two user interface perform configuration action potentially correct data content entry three information application own entry next describe two strider process different demonstrate flexibility provide strider approach configuration certification process address important scenario scenario would like answer question whether operational machine still conform certify configuration eligible product support service strider process would involve state operational machine certify machine follow noise filter know unrelated certification state rank adjustable threshold could provide time spend determine conformance time waste provide support nonconforming machine falsely determine conformance could store information regard commonly unsupported hardware speed determination nonconformance next describe change audit process scenario target process would like answer question form change machine since last week strider process would involve state trace write noise filter control size audit file state trace capture additional information process context make change information typically available state state rank would distinguish configuration change lesser would store map information translate group change higher level better presentation ym wang al science computer program four strider implement full functionality first three strider strider limit form state rank component part computer also include state tool default take two system restore input produce file contain registry exist different data well exist one system restore standard feature machine automatically save registry select file configuration store approximately every number available depend maximum amount disk space allocate system restore set twelve hard drive default tool also support select registry hive example configuration failure occur one user account occur another user account machine root reside registry hive peruser hive two take less time reduce number false report state trace tool implement driver default intercept record every registry call make application os component support include exclude filter log trace line contain contain respectively specific also support efficient log certain call type example perform log call type provide comprehensive change audit state intersection tool use generic tree data structure maintain set hierarchical name take multiple state file multiple state trace file input state entry input file insert tree mark id source file mark input file report intersection result extend functionality state trace tool beyond registry include configuration store file configuration file data structure use compute intersection ideally machine run strider tool state rank component compute score base change frequency dictionary local machine machine configure use different way change behavior configuration state may different build dictionary time would feasible would involve invoke state operation every pair consecutive could take several five per pair today implementation currently include static dictionary strider executable use static score dictionary state rank dictionary build analyze change main machine one author experience far indicate dictionary appear effective rank commonly update registry may miss many change plan replace another one build multiple ym wang al science computer program machine increase coverage make representative long run would like service run every machine continuously update local dictionary optimization registry change frequently repeatedly appear false report filter noise filter step insert right intersection invoke intersection code read entry input file insert entry tree structure second noise filter step invoke intersection gray score conservative default threshold correspond change frequency ten static dictionary addition rank order rank also apply assign weight appear trace base intuition later part trace may simply result execution divergence cause bad value entry currently part map information build executable onetime experiment perform commonly use configuration action record correspond registry update use trace tool reverse use provide time map information obtain experiment actual experience plan build web service enter query information web service also use implement part currently compile list web page five experimental result clearly strider approach would work follow worst case norm large percentage registry change every day large percentage use every application action result large candidate set human could reasonably handle present empirical result section show worst case norm first present registry change five machine study typical size state set present result experiment evaluate effectiveness additional state trace intersection rank use ten case list experiment trouble allow experiment reproduce machine group run strider produce result use configuration user interface control panel inject whenever possible use direct edit registry remain case choose machine machine use daily basis important would exhibit regular registry change use test machine lab little activity would produce better ym wang al science computer program invalid result also study sensitivity result respect choice machine inject preliminary result also discuss one restore available display calendar control object start due miss registry entry two image choose send mail recipient option longer offer resize option box due miss registry entry three outlook user always ask upon exit outlook whether want permanently delete delete folder due set four print print printer always produce print due set five ie explorer ie browser longer offer automatically save option feature difficult find six media player media player open function would fail registry entry change zero one corporate seven instant messenger would significantly slow client eight ie proxy ie machine corporate proxy set would fail machine disable corporate connect home network nine ie ie work option may automatically turn without user knowledge user would present cache page instead default start page launch ie ten ie would unexpectedly group explorer group due addition registry entry registry change behavior common perception registry contain enormous amount undocumented configuration information access frequently various os knowledge study present section first quantitative study registry change behavior addition provide problem study serve useful guide general community well study registry two first look aggregate change behavior registry long period time range days number roughly determine number available system restore per machine next look daily behavior registry observational period expect strider frequently apply good bad close together time therefore expect daily behavior registry good guide performance state part strider machine study consist four developer one knowledge worker machine daily use fig two show registry change statistics ym wang al science computer program fig two registry change statistics observe across five machine entirety observational present number registry value end period machine vary almost four five machine one two three five registry ever change apply noise filter ie filter change frequency filter exclude registry entry change ten time period machine yield number registry change potentially range machine four registry change look machine history detail find majority change due single large installation one day sixteen registry change exclude single large installation calculate registry change percentage find change drop around four total registry size number suggest need machine state pair side large installation ie either would likely result number potentially comparable number find state one machine small change percentage entire period state period must cover large installation need rely intersection component reduce complexity discuss shortly turn attention daily behavior registry fig three illustrate daily behavior across five machine may take multiple reason manually system prior system restore service periodically careful ensure include one per bucket analysis therefore size show fig three correspond gap slightly average spike machine four size due single large installation mention previous paragraph clearly visible near begin observational period across five machine median number change registry value give day apply strider noise filter median number drop demonstrate additional power noise filter apply change take consecutive days follow simple explanation although percentage operational registry show fig two may seem low one six change frequently appear much often ym wang al science computer program fig three registry daily change without noise filter daily result noise filter effectively identify comprise large portion daily unlikely reflect configuration change effectiveness fig four b present experimental result effectiveness strider ten case approximately seven days apart ym wang al science computer program fig three continue along horizontal axis registry size average number registry value two number registry value state result intersection total number registry value appear report consist intersection trace exclude report whose score default threshold rank order rank root list effect step strider process evident figure typically state reduce dimensionality two order magnitude roughly around intersection reduce another two order magnitude twenty even three case state could provide reduction period cover installation intersection still effectively bring number twenty noise filter provide additional help three case ten intersection fig four b reduce number seventeen fifteen thirteen fourteen eleven seven respectively final rank summarize overall effectiveness strider actual root identify number one candidate six ten case number two two case number three one case ym wang al science computer program fig four effectiveness rank ie proxy case fourteen would require manual analysis effort filter false currently investigate ways group together relevant final aid manual analysis sensitivity analysis perform additional experiment study sensitivity result variation machine examine time interval let time good bad vary among three seven fourteen days vary machine consideration across five machine study examine four case system restore case one case two media player case six case seven final rank result present fig five find strider robust factor study although vary factor impact three four case choice machine affect rank although final rank remain number three better every case case machine five case six find vary offset time seven fourteen days cause rank drop one two ym wang al science computer program fig five sensitivity analysis rank number final although current version strider primarily target conduct preliminary experiment find useful well use ten case two different machine configuration failure introduce one machine make target program action fail action succeed one fig six show result first observe current state tool less effective scenario reduce number two contrast two order magnitude case least two factor contribute one different machine simply different set program two registry appear different different machine name contain information currently investigate set map rule eliminate latter fortunately intersection operation remain effective reduce number case noise filter slightly useful half case static dictionary build analysis may suitable scenario expect separate dictionary base analysis registry entry among large number would improve filter final step apply order rank still mostly effective eight ten case root rank number ten better case ie proxy case root rank respectively ym wang al science computer program fig six preliminary result effectiveness six future work section discuss additional issue factor potentially impact effectiveness strider cover performance present previous section also discuss several type current version strider successfully provide diagnosis outline future work direct address general challenge ensure mechanical capture root understand current noise filter exploit mass facilitate final step analysis capture root case fairly clear application execution trace example media player case trace case trace trace use case except case trace ie explorer include difficult determine symptom one offend application ym wang al science computer program although usually achieve good rank trace capture direct ie registry access make target process may miss root contain indirect example case stopper design stop interfere normal web site registry entry access separate process rather browser process plan enhance strider process dependency track capture indirect without resort use trace addition indirect asynchronous pose another challenge strider implicitly assume entry must access synchronously time interval state trace however possible trace application read entry trace start example ten case application action user trace well define contain root cause remain case require trace application launch well application action lead observe failure study effect strider always use longer trace ie since application launch avoid miss root perform experiment replace trace longer trace case one three four five six would drop rank two one one one two three twelve one nine seventeen respectively still acceptable may require significantly effort depend whether additional false easy filter manually direction develop efficient trace log relieve responsibility specify start stop trace similarly may specify incorrect good state due either incorrect memory state corruption application failure would state result thus intersection miss root solution encourage conservative select good state direction develop statistical automatically analyze multiple good bad relieve burden noise filter discuss previously statistical inverse change frequency rank filter false naturally introduce possibility false negative although difficult provide conclusive noise filter introduce false negative without large number failure case experience show work well practice allow successful analyse case describe several type could potentially defeat strider current noise filter strategy plan refine filter rule encounter false negative revisit design gain concrete evidence number root cause actually fall category usage counter example behavior trial package may change usage count exceed certain threshold window position example corrupt entry suppose remember last position application window may display ym wang al science computer program information example last server connect may root client application failure last file open may document process program fail upon launch cache web page may undesirable behavior browser data application data may update basis current environment may occur user try restore data current strider noise filter would mistakenly filter data data couple single registry entry may contain operational data configuration data example encounter case word use default editor outlook certain document navigation option could turn option unfortunately control registry contain binary blob data binary blob apparently contain operational data well low score incorrectly filter noise originally ie gray report later determine contain root investigation false negative discover change frequency dictionary build strider executable update assign entry high score reflect fact entry identify root actual configuration failure exploit mass four order magnitude dimensionality reduction typically achieve mechanical step strider start point us handle complexity registry however encounter case noise filter order rank fail offer final reduction another order magnitude leave investigate case final report still contain analysis remain difficult plan address challenge exploit mass collect large number registry plan generalize statistical analyse across multiple particular contain data clearly deviate normal majority rank higher also enhance trace enable log analysis large number machine build report behavioral model seven beyond registry although focus strider generally applicable share persistent configuration store operate system platform currently extend strider implementation provide configuration due change file implementation utilize file change log information system restore detect file ym wang al science computer program change use filter driver trace file access part application action reuse tree structure compute intersection use file change frequency state rank rely information identify contain temporary file know noise provide file belong os point support article document know certain file similar also apply machine configuration generally appear file example user account information address server many x server typically although many configuration file use single program os facility quite configuration file share multiple program subject similar configuration window registry notable example contain map mime type command handle display edit particular type mime file may want install file program use display edit file type therefore handle common file type could write conflict configuration file another example rather separate daemon type connection example finger listen port incoming listen port start instance appropriate daemon demand connection come individual require add entry remove entry upon two use port may conflict fourteen addition may modify environment user configuration file practice may result conflict environment conflict result faulty application typically resort application reinstallation repair problem strider help identify root potentially provide less disruptive repair avoid future problem eight relate work body work relate management specification quite large general approach provide tool allow system specify rule proper system behavior configuration monitor action correct detect lack compliance give rule enable system converge specify strider complement approach adopt approach discover unspecified rule proper system operation gradually build issue burgess propose general concept adaptive statistical anomaly detection management implement configuration agent system environment strider inverse change frequency ym wang al science computer program rank apply similar concept environment specifically statistical quantifier summary form change frequency maintain registry entry approximately characterize normal behavior operational data exhibit high frequency behavior time even though appear state result garbage collection operation system restore define natural slide window strider data change correspond past period degrade allow rank algorithm adapt progressive behavioral change due newly change user usage pattern strider basic approach change unimportant noise important base statistical spirit statistical mechanics section burgess paper computer immunology five contrast work computer immunology explore behavior make choice two reason first current focus strider machine reliable measure normality harder obtain compare case heavily load server machine run widely use service similarly observe six second state consider strider consist raw piece configuration data registry entry oppose resource usage commonly use literature difficult define invoke action former category change configuration data likely intentional consider potential user complain system application longer deliver service gossip thirteen provide extensible framework monitor distribute environment gossip process run participate client gather analyze system data report interest state change central server include gossip could extend repair tool although gossip also maintain knowledge base know index information state refer condition system service quite different lower level precise configuration data state strider recent position paper al nineteen describe vision problem diagnosis system automatically capture computer state behavior necessary characterize problem match information problem report store structure strider project focus develop actual analysis configuration use state trace information characterize symptom use secondary information still provide user many define user expectation version strider provide automatic search support high rank observe approach effective large number support article write structure format store concept problem identification deviant behavior normal majority apply statistical large number sample emerge several recent al eleven describe automatically extract correctness ym wang al science computer program rule source code rather flag use statistical rank inspection effort al seventeen propose sample infrastructure gather information large number actual program experience user community base predicate guess elimination use isolate deterministic bug statistical model use isolate identify correlation al one present intrusion detection system build model normal registry behavior train show anomaly detection model identify malicious relatively high accuracy low false positive rate pinpoint analysis framework seven apply data cluster analysis large number trace tag perceive status determine subset likely nine summary propose strider approach change configuration management support build evaluate system base approach approach allow decomposition complex five strider use build block various context primary example configuration demonstrate combine state trace intersection rank effectively narrow list many case continue build computer provide precise configuration state know function knowledge capture structure format enable even effective analysis future work include provide trace type configuration state increase coverage collect large number state program trace enable advance statistical analysis reduce strider dependence manual step evolve current strider management framework would like express sincere thank shepherd l couch valuable feedback wang wen record map data provide registry change behavior analysis people contribute configuration failure case experiment reference one f e detect malicious monitor anomalous registry access fifth international symposium recent advance intrusion detection raid two e bailey maximum three burgess site configuration engine compute eight ym wang al science computer program four burgess system administration feedback regulation practice experience vol five burgess computer immunology six burgess two dimensional anomaly detection regulation adaptive international workshop distribute management seven e e fox e brewer pinpoint problem determination large dynamic service dependable network track eight church wa gale comparison enhance delete estimation estimate computer speech language five nine couch elementary dear apply logic program convergent system management process ten c r human genome nature publish group eleven b bug deviant behavior general approach infer code operate twelve good population species estimation population forty thirteen v gossip system service monitor fourteen j hart j amelia analysis validation drift fifteen c approach manage service resource description framework journal network management ten two sixteen configuration management engineer may seventeen b ax mi jordan bug isolation via remote program sample program language design implementation eighteen r problem tool nineteen swift use diagnose computer twenty da inside edition press sun al couch global analysis dynamic library j infrastructure ym wang c comparison configuration dependable network system restore