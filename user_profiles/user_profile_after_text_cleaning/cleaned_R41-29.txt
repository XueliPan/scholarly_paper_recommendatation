quantitative assure forward service technical report university f department computer science university abstract assure forward service architecture provide qualitative service differentiation class traffic sense class experience higher loss rat higher delay class however service quantify difference service give class effort strengthen service guarantee service propose quantitative assure forward service absolute proportional differentiation loss service rat packet delay present algorithm enforce desire differentiation basis without need admission control signal measurement result network show effectiveness propose service indicate implementation suitable network high data rat key word service differentiation buffer management schedule feedback control work support part national science foundation grant career one introduction assure forward fourteen service differentiate service six architecture attempt provide scalable solution problem service differentiation service flow similar group class use field header attractive feature service require admission control classification therefore scalable control data however service provide qualitative differentiation class sense class receive lower delay lower loss rate differentiation quantify absolute service bound offer recently research try strengthen guarantee provide within context service without sacrifice simplicity either try quantify difference level service receive different class offer absolute bound service delay specific set class instance proportional service differentiation model nine ten quantify difference service make delay loss rat different class roughly constant type service implement schedule nine ten eleven buffer management seven ten recent work try combine schedule drop single algorithm twenty schedule buffer management aim proportional differentiation support absolute service guarantee different approach strengthen service alternative service consider two traffic class first class obtain absolute delay guarantee second class delay guarantee give better loss rate first class schedule buffer management service present sixteen service model nineteen also support absolute delay bound qualitative loss throughput differentiation proportional differentiation recent strengthen service raise question best possible service model achieve entirely rely schedule drop without admission control traffic police signal attempt explore limit service define paper quantitative assure forward one service offer basis absolute proportional guarantee class node enforce mix absolute proportional guarantee absolute guarantee apply loss rat delay throughput define lower bind service receive class proportional guarantee apply loss rat queue delay example guarantee quantitative assure forward service three class traffic one could specify service guarantee form delay delay loss rate loss rate service rate one clearly without admission control feasible satisfy absolute guarantee time thus absolute satisfy allow service guarantee temporarily relax accord specify order one loss rate two delay four two present formal description quantitative assure forward service devise algorithm enforce guarantee loss delay throughput class adjust service rate allocation class selectively drop traffic apply linear feedback control theory design algorithm effect make approximate system study similar fifteen name quantitative differentiate service recently use nineteen two paper organize follow section two define quantitative assure forward service section three four describe provide quantitative assure forward service section five present implementation evaluate use implementation section six present brief section seven two quantitative assure forward service section describe quantitative assure forward service outline solution algorithm realize service formal description n n n one traffic drop lose th event current busy th use assume traffic arrive transmission queue output link router mark belong one class use convention whereby class lower index receive better service consider discrete event system traffic use denote time th amount denote service rate allocate classis fraction output link capacity time vary time set zero backlog transmission queue time assume service output link view simultaneously serve traffic several class interpretation idealistic since traffic actually send discrete size section five discuss interpretation realize packet network th event use denote time elapse th event service rate class respectively denote class n n n n n n n n r l service guarantee enforce duration busy period advantage enforce service guarantee short time output link react quickly change traffic load enforce guarantee within busy period require little state information therefore keep implementation overhead limit disadvantage time low load busy short enforce guarantee information current busy period unreliable however link transmission queue mostly idle service class receive service zero follow presentation specify service differentiation independently busy period let total traffic define begin busy period arrival curve arrive transmission queue output link router since begin current busy period th event n n input curve traffic enter transmission queue th event n r n begin current busy period define last time transmission queue output link empty x n k r n n l k n k zero n k zero x three ai rout c f f r c l drop n di n n time figure one delay backlog transmission queue output link input curve output curve r arrival curve r output curve traffic transmit since begin current busy period r n r k k n one k zero figure one illustrate arrival curve input curve output curve time time traffic service rate slope output curve figure service rate adjust x n n n n one two illustrate figure one event curve respectively denote n vertical horizontal distance input output th event class delay backlog b n n n b n r n r n n n k n r n r k j g four characterize delay class traffic depart th event n define loss rate ratio drop traffic n r n p n n since definition compute current busy period correspond loss rat busy long justify choice observation traffic drop time congestion ie link overload hence busy period long r n n n p metrics express service guarantee quantitative assure forward service absolute delay guarantee class specify three four five six eight n n four c f f r c l di slope min n di n n rout n n time figure two determine service rat delay guarantee delay bind class similarly absolute loss rate bind class define absolute rate guarantee class specify eight n p n l proportional guarantee delay loss respectively define n b n zero eight zero n b n r n b n zero one n one k n p n one k zero p n seven eight nine ten k k zero quantify proportional differentiation desire rate allocation drop c buffer size sketch solution provide service guarantee specify six ten output link router capacity assume buffer incoming traffic thus class transmit manner propose solution service rat define six ten meet six ten meet th event service guarantee need temporarily relax assume order guarantee relax give amount drop traffic adjust event b n n n n r l absolute delay guarantee class impose minimum require service rate sense class traffic th event transmit within delay bind n b n r n n five condition verify inspection figure two condition hold never violate class rate need class addition absolute rate guarantee th event become three n delay bind n expression minimum r n min b n zero b n n twelve upper bound output link capacity minus service rate allocate class minimum service rat need class therefore service rate take value r n r n c r n j min j six x r n r n r n min subject constraint proportional delay differentiation n r give range feasible value select satisfy c r n view computation p term recursion r n fifteen sixteen r n r n r n one r n n three four delay event monitor past service rate infer adjustment deviation select proportional delay differentiation satisfy thus determine deviation desire proportional differentiation attenuate th event function k n n n n n n k f r r feasible service rate allocation meet delay guarantee exist th event th event traffic must drop either new arrival current buffer overflow backlog loss guarantee determine class es suffer traffic drop th event n n n enforce loss guarantee rewrite loss rate define five difference equation p n p n one n l n one n n n sixteen determine loss rate class th event thus determine set class suffer drop without violate absolute loss guarantee set choose class whose loss rate differ amount objective nine evolve traffic drop class express service rate loss rate term recursion characterize service rate allocation drop algorithm feedback control next section describe two feedback one delay absolute rate differentiation delay feedback loop one loss differentiation loss feedback loop describe interaction two feedback section five expression define one true zero otherwise six three delay feedback loop section present feedback loop enforce desire delay rate differentiation give six eight nine one feedback loop class proportional delay guarantee feedback loop class approximate nonlinear effect service rate adjustment delay linear system derive stability condition linearize control loop characterize change service rate n r objective let us assume class offer proportional delay guarantee later assumption relax set give nine lead follow system k n j one one one define weight delay class q th event denote let one j one n q multiply line seventeen achieve class see desire proportional delay seventeen eighteen nineteen n k n two one one n k n n j one n one j one n n k zero one n k k six one j six j q eight eight j n n n j eight eight j n n n one n n n x nineteen equivalent j n n j class common set point set point common delay feedback loop feedback loop class set difference remark view event number sample time virtual time axis equidistant hence convergence control loop apply virtual time however relationship delay rate independent time axis choose virtue independence since monotonically increase virtual time make assumption skew neglect convergence condition present later apply well reduce n n service rate adjustment next determine adjust service rate achieve desire delay differentiation let refer error denote deviation weight delay class set point ie e n e n n n seven note sum always zero n e n n n n zero x x proportional delay differentiation achieve compute service rate adjustment note high respect desire proportional delay differentiation therefore adjustment monotonically decrease function choose indicate class decrease function error delay low need class write zero n n n n n n zero zero e e e e r r r r class use error e n n satisfy proportional delay differ class delay must increase decrease hence rate n n n r n f e n f r n k n e n n k feedback control terminology controller advantage controller require single multiplication hence easily implement real system another advantage zero n zero r n k n e n therefore controller produce system long initial condition satisfy note ie link may idle even positive backlog undesirable network need achieve high resource utilization zero x x p c r k express limit limit impose two different factor derive first condition loop stable sense attenuate differentiation derive second condition violation absolute delay rate characterize service rate adjustment need feedback time thereby achieve proportional create rate k k n n n n n e r derive stability condition delay feedback loop goal derive stability condition ensure delay feedback loop enforce proportional delay differentiation derive stability condition first model effect rate adjustment delay k n r n n note relationship delay rat nonlinear thus two possible derive stability condition delay feedback loop class thirty either derive stability condition nonlinear system define operate point system triplet linearize nonlinear system study around operate point derive stability condition linearize model effort get simple stability condition choose second approach hence linearize delay rat around operate point apply tool provide linear control theory linearization technique first describe serve fundamental justification use linear control practice thirty r b start model relationship rate delay first define n n n n n eight c f f r c l slope di n n rout n n time figure three definition average rate figure show relationship r n n r n n word let us make first assumption assumption delay write denote delay class traffic depart th event express number n traffic vary significantly n n one imply n n one refer n n one n n one let us define average rate experience class traffic depart th event n r n time class traffic use assumption b n r n n illustrate figure three model effect rate adjustment first express relationship assumption backlog class n n r r make second assumption traffic vary significantly n delay thus r n one n write virtual time axis describe remark end b n b n one equally space get r n one one r n r n characterize relationship service rate event experience class traffic depart event let us define n one n average rate one one r n r n r n nine combine get one r n one r n r n characterize relationship change service rate change average rate characterize relationship change delay class denote r n n define since get one one n n n b n n r n n one b n one r n one one n b n b n one r n r n one introduce third assumption assumption average rate small compare average rate word linearize use obtain one r n r n one one n r n n b n two r n delay delay give n error result relationship n k one n one k zero x n n one one e n one use compute use eighteen characterize new deviation next sample time ie next time rate adjustment perform remark complete description linearize model delay feedback loop turn derivation stability condition linearize model ing derivation stability condition linearize model rely model loop transform figure four eighteen transform present denote represent delay feedback loop use transform function n f z z z z f n unchanged use transform yield z forty z r n one one z r n z r n ten z n z e n z n k n z z z di z z di z di j z w n two n z di n one z figure four delay feedback loop model use transform derive z give use property continuous function f z f n z f n one one z z r n one one z r n z r n one z simple reorder term obtain equivalent z r n one one z r n one z z r n z r n one z z one similarly use transform forty become z also relationship weight delay th th give one n n z n z n one one z z one z n z n one one z first notice model stability product individual block figure four call loop gain nonincreasing time since coefficient loop gain nonincreasing time select k k b n n r denote loop gain necessary sufficient condition loop stable g z root characteristic equation module less one thirteen take block figure four get one zero g z one z z j six b n k n j g z z z one r n z one two q eleven p negative sign come negative feedback cat yield stability condition usable computation thus approximate gain second block approximation motivate fact expression obtain g z one z z z one one approximation get new loop gain zero g z one r n r n zero one z j six b n k n j g z z z one r n q two characteristic equation approximate system one j six b n k n j one zero z one r n q two exactly one root obtain follow stability condition j six b n k n j z one q two r n equivalently j six b n k n j one one q two r n j six b n k n j one one one q two r n exception scribe simply reduce k n zero positive hence rightmost condition de k n leftmost condition become k n two two r n j six b n j since q become condition give require keep history backlog may difficult implement high speed alleviate problem replace assumption assumption q b n two two two r n n b n b n b n n two k n two b n j six n j two twelve assumption backlog write traffic vary significantly n n allow us get simplify expression stability condition class delay feedback loop b n b n two zero k n b n j six n j two since k n must common class hold finally get q two min zero k n b n n j j six two condition ensure delay feedback loop engage divergent provide q hold approximation gain second block figure four less one equal one hold clock skew axis equally space axis equally space neglect however practice certain validity thus make claim stability delay feedback loop result analysis present numerical data section six suggest loop converge adequately well include absolute delay rate n k obtain stability condition necessary enforce proportional differentiation however far consider absolute delay rate construction delay feedback loop absolute delay rate view saturation constraint rate adjustment yield second bind may need clip new rate minimum however may violate property result hence use follow compute would satisfy saturation constraint satisfy min k k n n n n n r r r apply control loop imply must k n r n k n e n r n one min k n r n r n one min e n r n r n one min zero e n thirteen zero n k word satisfy absolute delay rate guarantee see proportional delay differentiation time case relax either accord give precedence order service guarantee remark proportional delay differentiation request class seventeen define group class contiguous indices feedback loop construct independently group four loss feedback loop describe feedback loop control traffic drop class satisfy proportional loss differentiation within limit impose absolute loss guarantee assume class proportional loss guarantee assumption relax similarly describe remark end section three traffic must drop n satisfy give current backlog prevent buffer overflow condition must hold th event either buffer overflow absolute delay guarantee th event follow n b b n n l n n c one one k k k n k one x provide absolute delay rate guarantee follow condition must satisfy b n r n n n l n one one one k k k k c k b n zero k n k k n k one x choose amount traffic drop class hold define weight loss rate n zero p n p n j zero one j j six one zero zero zero one definition ten equivalent k one one j j one one q eight eight j n p n p n j choose follow set point loss feedback loop use set point describe error reach set point error decrease increase let h r one two order class indices class zero class p n e n zero follow b n zero k one h k r e n e n one two r r r zero zero traffic drop order p n p n one n x zero e n p n p n fourteen absolute loss guarantee impose upper bind traffic drop event l n n class value l n determine seven sixteen l n n l p n n one one condition violate traffic drop class condition drop traffic drop one forth suppose condition satisfy first time satisfy maximum amount traffic class traffic drop class obtain k j two one one two one l n x n l n k traffic drop class j l n k seventy l n two k one l n x n eight zero one otherwise k l word condition relax n n k k k one two l r allow absolute delay rate condition violate loss feedback loop never increase maximum error one class thus remain bound algorithm present engage divergent around target value additionally loss feedback loop delay feedback loop independent since always drop traffic tail buffer effect delay traffic admit transmission queue n n n p zero e e zero zero five implementation implement present section three four run one operate system use package eight allow modify transmission queue layer kernel discuss perform implementation packet enter transmission queue router packet packet select transmission packet use field header packet identify class index packet field set edge router implementation first router traverse packet implementation choose follow precedence order relax absolute loss guarantee higher precedence absolute delay rate guarantee turn higher precedence proportional guarantee packet procedure execute layer packet enter transmission queue output link since kernel execution procedure strictly sequential procedure perform drop service rate allocation avoid float point kernel operate system express delay machine clock cycle service rat per clock cycle multiply scale factor loss rat fraction unsigned provide sufficient degree accuracy two two fifteen modify procedure transmission queue output link one fifo queue class implement link list limit total number queue whenever packet enter fifo queue class arrival time packet b record wait time head fifo queue update procedure use loss feedback loop describe section four determine much traffic need drop class implementation algorithm section four run twice first time buffer overflow resolve ignore condition second time absolute delay rate guarantee resolve ignore condition next procedure compute new value service rat use fifteen feasible value proportional delay guarantee twelve determine new give exist ignore thus give absolute delay guarantee precedence min k k n n n r packet procedure select one packet backlog transmission implementation select one traffic class pick packet head fifo queue class procedure use schedule algorithm adapt transmission rat r n view environment adaptation perform use schedule algorithm schedule translate rate allocation virtual individual implementation use modify deficit round robin schedule algorithm let denote number transmit current busy period select packet class transmission n r n n k k k word procedure select class behind theoretical output curve six evaluation present experimental implementation quantitative assure forward service dell one ram system thirty system equip five experiment determine well algorithm provide desire service differentiation basis addition want observe stability feedback loop robustness change network topology service guarantee effect propose four experiment different network service guarantee traffic pattern present evaluation overhead associate propose algorithm sixteen figure five experiment one two network topology link capacity measure service provide router one indicate bottleneck link source one source two sink one router one router two bottleneck sink two class service guarantee l k k one two three four three one two two zero two two na na table one experiment one two service guarantee guarantee identical router experiment one topology load use local network topology use link show figure five link capacity two set indicate figure five router one two act source sink traffic topology bottleneck link one two mention buffer size output link router set c b consider four traffic class service guarantee summarize table one source one two send traffic sink one two respectively source one transmit traffic class one two source two transmit traffic class three four traffic mix number flow per class characterization source class flow type protocol one two one two three four six ten ten ten traffic greedy greedy greedy seventeen table two experiment one traffic mix source send burst source greedy ie always data transmit run congestion control algorithm twelve eighty sixty forty twenty c p c k n l f n l e r e f f zero zero ten twenty thirty time forty fifty sixty figure six experiment one offer load graph show offer load router one flow source show table two class one traffic consist flow class consist greedy flow source start transmit fix size time second traffic generate use tool three network load initially zero quickly ramp generate overload bottleneck link figure five congestion control source maintain total load level link capacity show figure six end experiment sixty zero measure delay loss rate throughput traffic class output link router one bottleneck link delay measure wait time packet transmission queue ie difference time read machine clock packet enter depart transmission queue throughput loss rat obtain report generate every five sec os kernel plot summarize depict delay individual measurement delay loss rat loss rat throughput show average slide window size five sec figure seven present service receive bottleneck link fig seven depict delay class four three delay class three two plot show target value table one achieve plot indicate delay feedback loop appear stable despite simplify model use determine section three two k k two three k n one fig seven b show delay router one delay bind satisfy time possible satisfy simultaneously absolute loss delay guarantee discuss section five conflict resolve give precedence loss guarantee note even delay bound violate packet experience delay exceed four delay value average slide size five class show fig seven c range three one seven e show loss rat fig seven depict loss rat class four three class three two desire maintain time fig seven e indicate bind loss rat class one always keep recall give highest precedence absolute loss guarantee also note maximum loss rate class one entire experiment since source start transmit time ie flow synchronize observe transient effect shortly begin experiment time five believe transient effect due mechanism zero two l k k one one two three zero zero eighteen class two class three zero ten twenty thirty time delay forty fifty sixty zero ten twenty forty fifty sixty thirty time b delay individual delay bind class one class two class three class four class three class two forty fifty sixty ten twenty thirty time c class two three four delay average slide window five class one class two class three class four zero ten twenty fifty sixty thirty time forty loss rat total guarantee class four class three class two class one l e f r five four three two one zero fifty forty thirty twenty ten l e zero zero e r l one eight six four two zero zero ten twenty thirty forty fifty sixty ten twenty thirty forty fifty sixty time e loss rat time f throughput figure seven experiment one graph show service obtain class output link router one fourteen twelve ten eight six four two zero five four three two one zero l e e r l f r b p h g r h eighty sixty forty twenty zero zero nineteen eighty sixty forty twenty c p c k n l f n l e r e f f zero zero ten twenty thirty time forty fifty sixty figure eight experiment two offer load graph show offer load router one source class flow protocol type one two one two three four six ten ten ten traffic table three experiment two traffic mix source send burst source greedy time transmit chunk eight pause transmission time twenty thirty ten zero forty fifty ten twenty thirty forty fifty sixty source run congestion control algorithm increase send rate source exponentially begin send period network initially empty flow suffer first packet drop time finally fig seven f include throughput class observe rate maintain total throughput class label guarantee class two fig seven f total close link capacity router two experiment two topology highly variable load second experiment use network topology buffer size service guarantee experiment one thus table one figure five apply experiment two difference experiment one two consist traffic generation flow instead use greedy source whole experiment configure source greedy time remain time source send chunk data pause transmission chunk summarize traffic mix experiment two table three modification behavior source result highly variable offer load router one present figure eight forty twenty fifty ten thirty zero similar experiment one measure delay loss rate throughput traffic class bottleneck link present result figure nine fig nine present delay class four three delay class three two twenty l e f r five four three two one zero fifty forty thirty twenty ten l e zero zero fifteen two one five e r l zero zero class three class two class one class two class three class four class two class three delay bind class one zero ten twenty thirty time delay forty class four fifty sixty zero ten twenty forty fifty sixty thirty time b delay individual class two class three ten twenty thirty time c class two three four delay average slide window five forty fifty sixty zero ten twenty fifty sixty thirty time forty loss rat guarantee class two class three class four total class one ten twenty thirty forty fifty sixty time e loss rat zero zero ten twenty thirty time f throughput forty fifty sixty figure nine experiment two graph show service obtain class output link router one fourteen twelve ten eight six four two zero five four three two one zero l e e r l f r b p h g r h eighty sixty forty twenty class service guarantee l k k one two three four eight one two two zero two two na na table four experiment three four service guarantee guarantee identical router three two k k zero ten fifty thirty twenty forty two observe load high time target value achieve conversely load low observe delay characterize unstable feedback loop come constraint see nine b c delay class close zero packet arrive transmission queue empty forward immediately regardless service guarantee give delay class extremely low underload delay carry lot mean also see time load increase abruptly short period time delay differentiation realize almost immediately tend show delay feedback loop robust rapid increase offer load case experiment one fig nine b show absolute delay guarantee class one enforce time possible satisfy simultaneously absolute loss delay guarantee experiment two delay bind occur less fifteen transmit traffic forty twenty three zero one nine e plot loss rat see packet drop satisfy thus proportional loss guarantee algorithm loss differentiation exhibit robustness change offer load absolute loss guarantee two zero one l k k two three one zero zero two ten include throughput class figure nine f rate guarantee class two maintain whenever class two send satisfy underload also notice quick increase transmission rate class four lesser extent transmission rate class three time less noticeably time offer follow explanation increase use type protocol application level three generate traffic time interval receiver estimate total amount data must receive end interval due high delay relatively low throughput encounter class three four time overload receiver still wait outstanding data time notify sender transmission time almost class one two traffic thus outstanding data transmit two second explanation consistent report observe indicate transmission class three four flow last almost twelve second instead ten second specify fifty thirty fifty thirty experiment three multiple node topology load consider multiple node topology use local network topology use link show figure ten link capacity three c figure ten experiment three four network topology link capacity measure service provide router one two indicate bottleneck link source two source three source one router one router two router three sink one bottleneck bottleneck sink two sink three class flow type protocol one two three four six six six six traffic greedy greedy greedy table five experiment three traffic mix traffic mix identical pair source send burst twenty source greedy ie always data transmit run congestion control algorithm set indicate figure ten router one two three act source sink traffic topology two bottleneck link one two link two three mention buffer size output link router set b consider four traffic class service guarantee summarize table four proportional service guarantee experiment one two absolute delay loss guarantee different source one two three send traffic sink one two three respectively different experiment one two source transmit traffic four class traffic mix number flow per class characterization flow identical source show table five source transmit six flow class class one traffic consist flow class consist greedy flow source start transmit fix size time end experiment second network load initially zero quickly ramp generate overload bottleneck link figure ten offer load one two show figure eleven sixty zero figure twelve thirteen present service receive bottleneck link one two respectively twelve thirteen depict delay class four three delay class three two plot show target value table four achieve plot indicate delay feedback loop appear stable case multiple node topology result couple result obtain experiment one also suggest delay feedback loop two k eighty sixty forty twenty c p c k n l f n l e r e f f zero zero eighty sixty forty twenty c p c k n l f n l e r e f f zero zero ten twenty thirty time router one forty fifty sixty forty fifty sixty ten twenty thirty time b router two figure eleven experiment three offer load graph show offer load one two robust change network topology one eight satisfy twelve b thirteen b show delay router one router two delay bind due precedence order choose absolute guarantee packet ever experience delay higher ten either router one two twelve c thirteen c indicate delay value class average slide size five range five one zero zero two three k k l two twelve c thirteen c show loss rat twelve c thirteen c depict loss rat class four three class three two desire maintain time twelve thirteen indicate bind loss rat class one always keep also see contrary experiment one two loss rate class one may higher loss rate class result explain absence proportional guarantee class one exclude class one order section four implementation always drop first class one loss bind reach use order provide proportional loss guarantee note much less traffic drop router two come fact router two receive traffic source three router one instead receive traffic two source therefore half traffic arrive router two already police router one one l one one finally twelve e thirteen e include throughput class observe maintain total throughput class label rate guarantee class two twelve e thirteen e total close link capacity router two experiment four multiple node topology highly variable load sake completeness run fourth experiment use network topology service guarantee experiment three describe table four figure ten difference experiment three four consist traffic generation flow instead greedy source use source behave manner experiment two alternate greedy transfer transfer summarize traffic mix table six obtain variable load router show fourteen b present result experiment four figure fifteen sixteen obtain confirm result obtain previous experiment fig fifteen f sixteen f note apparent problem class two class three delay bind class one zero ten twenty thirty time delay forty fifty sixty zero ten twenty forty fifty sixty thirty time b delay individual class two class three class three class four class two fifty sixty ten twenty thirty time forty c class two three four delay average slide window five class one class two class three class four zero ten twenty fifty sixty thirty time forty loss rat guarantee total class two class three class one class four l e f r five four three two one zero fifty forty thirty twenty ten l e zero zero fifteen two one five e r l zero zero ten twenty thirty forty fifty sixty ten twenty thirty forty fifty sixty time e loss rat time f throughput figure twelve experiment three router one graph show service obtain class output link router one fourteen twelve ten eight six four two zero five four three two one zero l e e r l f r b p h g r h eighty sixty forty twenty zero zero class two class three delay bind class one l e f r five four three two one zero fifty forty thirty twenty ten l e zero zero fifteen two one five e r l zero zero class one class two class three class four zero ten twenty thirty time delay forty fifty sixty zero ten twenty forty fifty sixty thirty time b delay individual class two class three class three class four class two ten twenty thirty time c class two three four delay average slide window five forty fifty sixty zero ten twenty fifty sixty thirty time forty loss rat guarantee total class two class three class four ten twenty thirty forty fifty sixty time e loss rat class one forty thirty ten twenty time f throughput fifty sixty figure thirteen experiment three router two graph show service obtain class output link router two fourteen twelve ten eight six four two zero five four three two one zero l e e r l f r b p h g r h eighty sixty forty twenty zero zero class flow protocol type one two three four six six six six traffic table six experiment four traffic mix traffic mix identical pair source send burst twenty source greedy time transmit chunk eight pause transmission time source run congestion control algorithm twenty fifty ten thirty forty ten twenty forty sixty fifty thirty zero eighty sixty forty twenty c p c k n l f n l e r e f f zero zero ten twenty thirty time router one forty fifty sixty forty fifty sixty ten twenty thirty time b router two figure fourteen experiment four offer load graph show offer load one two eighty sixty forty twenty c p c k n l f n l e r e f f zero zero class two class three delay bind class one l e f r five four three two one zero fifty forty thirty twenty ten l e zero zero fifteen two one five e r l zero zero class one class two class three class four zero ten twenty thirty time delay forty fifty sixty zero ten twenty forty fifty sixty thirty time b delay individual class two class three class four class three class two ten twenty thirty time c class two three four delay average slide window five forty fifty sixty zero ten twenty fifty sixty thirty time forty loss rat total class three class four class two ten twenty thirty forty fifty sixty time e loss rat zero zero ten twenty thirty time f throughput class one fifty forty sixty figure fifteen experiment four router one graph show service obtain class output link router one fourteen twelve ten eight six four two zero five four three two one zero l e e r l f r b p h g r h eighty sixty forty twenty class two class three delay bind class one l e f r five four three two one zero fifty forty thirty twenty ten l e zero zero fifteen two one five e r l zero zero class one class two class three class four zero ten twenty thirty time delay forty fifty sixty zero ten twenty forty fifty sixty thirty time b delay individual class two class three class three class four class two ten twenty thirty time c class two three four delay average slide window five forty fifty sixty zero ten twenty fifty sixty thirty time forty loss rat total class three class four class two ten twenty thirty forty fifty sixty time e loss rat zero zero ten class one thirty twenty time f throughput forty fifty sixty figure sixteen experiment four router two graph show service obtain class output link router two fourteen twelve ten eight six four two zero five four three two one zero l e e r l f r b p h g r h eighty sixty forty twenty set x x one two three four table seven overhead table present four consider set service guarantee average number cycle consume standard deviation predict throughput achieve one use one cycle correspond one x source experiment two oddity occur time throughput router one seem greater offer load router two fact monitor offer load output link router two output link router one connect input link router two monitor inspect report os kernel router two saw receive buffer input link router two overflow discard input link explain anomaly summary measurement experiment network single multiple bottleneck constant variable load show feedback achieve desire service differentiation utilize entire available maintain stability throughout robust change network topology traffic mix service guarantee analysis overhead saw implementation fully utilize capacity link without overload router next present detail analysis overhead implementation attempt predict data rat support router implementation measure sensitivity implementation number service show four different set service guarantee test four traffic class set one table four set two set one absolute guarantee set one remove set three set two proportional guarantee set one remove set four service guarantee determine number cycle consume counter register processor read begin end execution procedure compile implementation code case use compiler flag set result present table seven include thirty machine cycle consume average heavily load link use topology traffic pattern subsection table seven collect router one collect router two show compare router one five since invoke predict maximum throughput router p f f denote clock frequency denote number cycle consume operation operation case implementation one report four indicate average size value implementation run data rat least denote number cycle consume average size nine data recent use show four set consider estimate ten eleven f p f p p next evaluate sensitivity performance function number note section four number cycle consume operation independent set table seven see overhead associate absolute service guarantee set three approximately ten compare set service guarantee set four overhead compare set absolute proportional service guarantee set one set proportional guarantee set two thus see overhead incur absolute dependent presence proportional guarantee remain relatively low proportional guarantee seem incur overhead absolute guarantee however set consider number class proportional guarantee class absolute guarantee thus need enforce proportional guarantee seven present quantitative assure forward service provide proportional differentiation loss delay absolute service guarantee loss throughput delay class traffic propose feedback base algorithm realize quantitative assure forward service router algorithm require prior knowledge traffic rely signal time absolute service guarantee satisfy simultaneously algorithm relax guarantee use priority order algorithm implement experiment network show propose algorithm could fully utilize available capacity show service guarantee quantitative assure forward service enforce future work extend approach present paper congestion control five twelve seventeen eighteen also consider implementation algorithm two reference one project two network processor three public four packet size sequence may five v w congestion control six blake black e z wang w architecture differentiate service seven create proportional loss differentiation predictability proceed page june eight k cho framework alternate queue towards traffic management base proceed annual technical conference new la june nine c proportional differentiate service thesis university ten c p proportional differentiate service part loss rate differentiation packet drop proceed page pa june eleven c p proportional differentiate service delay differentiation packet schedule proceed page boston august twelve modification fast recovery algorithm thirteen g f franklin j l workman digital control dynamic fourteen j f baker w j assure forward group june park ca edition fifteen c v v w gong design improve support flow proceed volume three page anchorage ak sixteen p hurley p provide low delay service within best effort seventeen v congestion avoidance control proceed page august network fifteen three may ca eighteen v modify congestion avoidance algorithm note send mail list nineteen r dynamic core provision quantitative differentiate service proceed page june twenty j n job joint buffer management schedule differentiate service proceed page june c j g tao h son feedback control schedule framework model journal real time special issue approach compute appear differentiate cache service approach proceed international conference distribute compute page phoenix general problem motion stability proportional queue control mechanism provide differentiate service proceed international symposium computer information page turkey n r v delay differentiation adaptation core stateless network proceed page k blake f baker black definition differentiate service field field k r g generalize processor share approach flow control integrate service network case network one three june n tilbury j use control theory achieve service level performance management journal special issue approach compute appear g efficient fair queue use deficit network four three june thirty e w li apply nonlinear control g packet schedule delay loss differentiation computer l virtual clock new traffic control algorithm packet switch network appear nine two may