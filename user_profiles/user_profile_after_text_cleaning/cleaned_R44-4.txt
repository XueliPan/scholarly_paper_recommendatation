program comprehension fact find jam brad school computer science mellon university avenue pa bam abstract little know think design code modification task experience design knowledge help work effectively perform lab study thirteen work three understand design open source application zero industry experience group three ten observe spend time seek learn critique explain propose implement code effect serve numerous suggest change constrain change predict amount additional investigation necessary make change include explain root design problem make change address novice change address read also visit waste time understand talk code term cache often describe code statement statement able implement change faster perceive able explain could find interest future tool subject engineer program engineer distribution maintenance enhancement general term design human factor science design program comprehension code navigation empirical study reverse engineer one introduction study program long build program comprehension model describe locate feature test hypotheses navigate code mentally represent small code six however study look engineer abstract development environment feature permission make digital hard copy part work personal classroom use grant without fee provide copy make distribute profit commercial advantage copy bear notice full citation first page copy otherwise republish post redistribute list require prior specific permission fee seven near copyright implementation detail program engineer teach work design describe possible dependency fifteen seventeen tell apply information hide prevent likely anticipate change ripple system fifteen code clone allow single decision change one place write modular allow reason isolation rest system respect architectural style eighteen prevent architectural drift erosion sixteen grow interest better understand test claim engineer tool help eight one approach apply program comprehension model describe influence tool work despite long history program comprehension model little success realize goal six example although claim couple make code harder comprehend indirectly support version control study little know couple cause work differently better understand ground program comprehension model might lead better metrics measure couple better tool alleviate mismatch engineer interest design exist program comprehension model make challenge program comprehension model might also accurately describe work model think design long tradition study cognitive science establish perform better knowledge lack three study also find mostly study knowledge form highly local code loop five engineer suggest wide variety knowledge good design form design pattern six architectural style eighteen little know knowledge help work effectively better understand might lead better train engineer tool help yet learn knowledge conduct study understand perform challenge code modification task effect experience process two lab task provide current design open source text editor instruct improve design since prior research yet identify key degree confidence study conduct exploratory way observe detail different approach task allow us observe pattern identify key future experimental study address three research question experience affect change make code experience affect work reason design cod task find change address change address make better relevant talk code use rather explain unable explain implement change quickly describe design use take several form serve number two relate work previous research show seek information code generate test hypotheses rapidly switch control flow data flow domain model program twenty search relevant focus point investigate relate information point investigate neighbor collect information make change code eleven form good bad relevancy base quality cue identifier name comment documentation ask design question purpose intend behavior code whether wrong value anticipate ignore overlook design nine numerous study find mentally represent source code literally recognize instance iterate collection slot fill information example apply sometimes forget specific information recall instead j loop index variable five study find many advantage arise large library example chess remember realistic board better advantage vanish random board three result suggest chunk perceive mentally represent memory schema much evidence existence importance study program limit highly localize code loop investigate level design want investigate study several study find experience inexperienced work code faster generate better hypotheses study less code seven write low level information write higher level information four better understand code change better choose select multiple accomplish task capable generate multiple make choice design high level low level familiar simple six study augment result add design comparison successful unsuccessful behavior program task find successful program experience unsuccessful fourteen unsuccessful make change one place scatter result suggest notice information unless search successful create detail plan change make implement less frequently successful perform search information rather browse scroll base guess however five study one five program experience limit industry experience suggest result describe little little experience unlike study vary level experience exist work reveal interest result navigate code mentally represent small code little know uncover design propose design change process affect experience purpose study three method conduct exploratory lab study work two task fifteen task challenge involve change real open source application record activity use video eclipse instrumentation get full picture study design recruit diverse level experience bring lab observe work detail lab study several advantage field study could compare behavior exactly task use task design require understand design control prior experience application control order effect task assign half receive task first ensure experience novice condition exploratory observational study rather control experiment let us build model developer activity suggest know beforehand quantitative control experiment pick dependent qualitative analysis participant activity choose thirteen rather number might result statistically significant make manually transcribe analyze voluminous feasible initially plan investigate effect provide architectural information work code provide half component connector two diagram reverse engineer read diagram begin task use diagram generate test hypotheses class connect scratch paper draw write method name unable observe work could attribute diagram thus consider diagram thirteen recruit undergraduate master doctoral staff mellon university report one least two program development experience two comfortable program industry experience data collect short demographic survey complete potential respond recruit mate table one experience assume last fourteen year experience right one experience seven least participant industry experience program edit experience design pattern architectural code navigation enjoy design style tool proficiency zero research b zero research c e f g h j k l n v c e e x p e r five fifteen two three three three ten ten ten one two one ten two ten four three five one two eight four four six four seven three seven ten seven one four three three six four two six six four one one two one six one three one one seven four two one two two one one six one two two four three one one one two one four two one two two two six one one one one one two two one one one one one two one also rat experience design pattern architectural style tool perceive proficiency navigate code degree enjoy design table one ask give size program work low several question suggest may inaccurate knowledge misunderstand question two respond recruit industry experience graduate report significant research program experience accept study ten report use eclipse one report two ask experience use eclipse suggest result reflect challenge learn eclipse include one undergraduate student four master seven doctoral one staff member industry experience wide spectrum include bank operate twelve one female participate pay time table one show experience sort industry experience refer brevity however although limit industry experience still substantial program experience confuse novice two l label far experience label third participant k expert slightly experience make change one task refer letter letter one expert l participate study use application use advantage participant potentially attributable greater knowledge application rather experience however believe effect contamination minimal since task require understand entirely different part application previous study observe participant knowledge previous study help substantial way task work open source text editor also use previous lab fourteen version control nineteen study provide eclipse entire source line ensure task right length difficulty challenge ability understand design iterate task pilot three pretest subject poor experience functional change task pick nonfunctional task focus improve design rather implement feature fix bug hop would challenge ability understand design fully specify change application behavior task design architectural nature involve class identify top level component connector diagram many study architecturally significant participate join task provide design correspond code instruct investigate case implement better design make design ideal possible criteria performance understandability ensure know expect implement change instruct carefully budget time make improve design ideal possible carefully change implement within three three three two two three two two four two three one one one one allot time change much little code would like fold task investigate fold level state update follow edit file allow hierarchical text view file method body toggle fold hide view click arrow follow edit line line fold level become invalid next request call store cache part buffer implementation fold level change event send subsequent call retrieve line cache fold level rather provide follow code excerpt force fold level update paint last line buffer call hence event might send previous line call method class own responsible edit buffer term file tell call architecturally questionable change buffer state different component clearly bad design use getter method solely change state buffer ignore information getter method suppose use obtain underlie symptom problem update fold level call getter need fold update trigger method leave discover bad fold responsibility buffer implementation leak another component call presence fold level lazily compute query call require due decision could remove fold level lazily compute thus break information hide fifteen call paint last line buffer compute fold level compare current line fold level next undefined last line buffer instead always return false call depend private decision would necessary implement differently also break information hide task relate status bar bottom window display line column caret insertion point scroll position window within buffer implement part use method ask set make buffer visible observe call many time instruct bad performance perspective likely reflect semantics trigger update mean performance critique contrive extremely resource intensive perform even though needlessly execute expert report see situation something directly expensive interview task require understand design buffer switch process action change either caret position scroll position must call update status bar buffer switch change begin call control pass nineteen ultimately result six seven call many also call reason buffer switch include change text selection window scroll caret move remove call risk break feature illustrate result label participant time within task task c f fold c expert participant time one hour twenty c task tool instrumentation provide eclipse ide allow use eclipse feature take note piece paper open file create prevent search documentation bug information might think relevant forbid use include web one participant ask allow see collection class web browser experimenter answer question invoke specific eclipse command stop use rather task ask question question code understand correct use eclipse locate information locate method trigger event record use diverse set record none action would lose use record screen video camera participant desk area track reference paper see area screen view second video camera track information write paper ask think aloud prompt approximately every five forget unfortunately prompt try lead talk discover retrospect better prompt might think procedure first work brief tutorial eclipse code navigation feature use call hierarchy navigate method reference search ensure effectively use eclipse simulate architectural knowledge experience developer might possess read one page description eight important task relevant class finally work tutorial use functionality would edit later test would easier portion study last approximately thirty next receive sheet paper describe first task much time read task description like navigate code describe task task also try behavior change set verify hit many time task description claim instruct fifteen work give five extra afterwards ask series exploratory interview question work table two code change implement group change sort industry experience total time task change bold address underlie design problem participant industry time fold task final code change zero b zero c five e two f check fold update necessary conditionally update update fold indirectly fire event rename force fold update add statement give fifteen g h force fold update call method extract three j three k three l ten fold update immediately buffer change call within move fold update within participant industry time task final code change b zero c five e two change zero fifteen remove call believe unnecessary g h f add class log happen detect caret update fire three j three change give k three l ten add field stop caret update buffer switch find challenge rat well believe receive clean eclipse description second task begin work second task available navigate use call hierarchy search result go navigate gutter reference scroll also cod edit command run program also note appear work towards successful make task challenge expect would unable make meaningful change expect least try understand code however one novice give fold task two give task felt code complicate comprehend tough figure piece understand understand precisely design issue f f expert think task realistic tough glad get pay c yeah realistic mean realistic bad day least assessment interview c many still work time expire two e c elect describe note list change felt time implement analysis analysis start low level data record build successively abstract transcribe record screen capture video action log consist total line every time participant change method field refer member visible eclipse add entry name member eclipse command use bring view include hit step one next use qualitative protocol analysis build list saw engage cod use model analysis remain qualitative produce sufficiently reliable count quantitatively compare discover many revolve around code choose read seek deem relevant task read sometimes learn believe vary confidence felt violate design wish change explain understand relate change fact sometimes generate hypotheses lead seek evidence confirm reject learn begin propose design change address task finally implement edit code discover lead believe change would succeed remove change propose different change nearly constantly talk say nothing end suggest overwhelm spend time immerse detail compare choose say something could rely four result first discuss change implement present model build describe work model seek learn critique explain propose implement consider structure turn code change change make address underlie design change make inferior address describe underlie design change ignore defect may introduce whether finish cluster similar change table two list final change one implement begin implement fold task one novice make change give f another e could determine call necessary remove remain change way update fold address symptom getter use purely set one c rename method indicate merely getter another b literally interpret provide comment mean need send event create method six one expert extract update method update fold call method change make two address design problem remove need force fold update one l move fold update two call buffer change another move fold update within address hide design remove call add questionable task two j make change give three make change work entire time b c e one f add class log call mistake intention decide proceed recent call four remove call believe redundant expert change differ novice change start stop caret update use field approach alone address design problem could reduce number call one seek begin task navigate provide field believe likely reveal relevant code visit five fold task task figure one effect experience many visit visit similar number task thus superior change due read select better read learn read make path choice choose seek decide seek likely discover useful fact choose seek implement current change novice abandon seek location run runnable thread get three extra call update caret method know thread go find think unnecessary type look c e w e v h e n e l f f sixty fifty forty thirty twenty ten zero fold c b zero one two three four five six seven eight nine three zero participant industry e two fifteen five g h f j zero three one k one three one l two ten one three one figure one total distinct field view participant sort industry experience expert consider whether change implement whether better first seek reduce event fire huh even right path go let us see get oh wait one call many people go give long hard look k c investigate visit understand waste time visit need visit task twelve visit visit least three ten one class definition visit use open class eclipse command nine transitive navigate inferior navigation remain two interest one field guard body initialize one novice f stumble quickly leave four read one interest mean one g spend minute look reference another c spend two look work two h spend seven understand detail work guess whole remain switch buffer variable need reset soon update caret position h c seem perceive indicate presence changeable fact might help reduce call read eventually discover merely control whether caret scroll position display status bar would helpful task never waste time read suggest knowledge help guess field identifier use turn update event rather general suggest knowledge help predict code read thereby prevent waste time read irrelevant learn read find interest confirm look like buffer make sense end mutate operation buffer go end l six f play variety changeable believe might help accomplish task act suggest change would break choose make change expensive suggest lot investigation would require wow many many many call good go hard figure k two f eight also differ degree certainty believe hypotheses think likely true hypotheses generate knowledge application would probably build satisfy mouse release represent bottom tree certain part event possible get multiple action involve let us assume case sixteen c directly observe code many rely observation speculation figure two list find expert frequently rapidly use higher level abstraction focus important relevant part code rather irrelevant implementation detail example describe differently one minute task expert describe well update cache upset want issue event force update cache fold level particular line one f task ten read novice still figure change state compute mean compute new line number fire event see change state b f task twelve star read numerous different novice still stick statement level never describe cache start line go line check whether fold information correct suppose correct fold level case data structure need change state buffer create change set fold level h f level new fold line suggest cache allow see design chunk individual use apply cache schema help expert infer intent code lack expert schema able uncover intent painfully work code statement statement critique consistent improve design use good design criticize grow skeptical design perceive original author make designate hack guy probably hack away start thing getter say oh look get fold level case data invalid might well go fix one hack effect two buffer mutate result call three hyp change happen later four many call five fold invalidate buffer change update screen explain two one seven update fold data structure explain one eight fire ten determine fold must set eleven trigger fold update twelve call thirteen mutually recursive fourteen fold initialize explain twelve fifteen buffer listener sixteen either call every buffer mutate operation figure two find expert participant l first fold task order discover label hack hypothesis critique explanation right might wander bad design situation get right l sixteen f exhibit design knowledge perceive design choice justify inferiority current choice single expert perceive design choice second thing like fire update seem like make edit order keep guy simple make edit people care would notify l f several novice result miss design knowledge seem really confuse exact method exact investigate hold c forty c investigation novice realize implement interface explain explain rationale learn lazily evaluate probably want performance reason anyway always go risk get go fire event case nine f establish traceability low level implementation towards motivate become important participant wish change fact change fact risk change generate also apply top hypothesize code likely build satisfy higher level must either fire tell people update somehow must code update display look like event fire happen inside l seventeen f believe false produce false critique use form breakdown chain ten model code go badly awry developer explain false fact due something trigger buffer edit think perform action switch one buffer another buffer somewhere call method indicate buffer edit edit buffer switch buffer remove thirty c hypothesize call buffer edit exist call use explain exist reason use code describe implementation describe application behavior term domain false lead miss novice forget state status bar display caret scroll position think completely unnecessary would scroll event caret update like scroll change caret offset think get rid one actually c changeable fact could explain face choice optimistically assume overlook original developer pessimistically assume intend satisfy hide constraint overlook true happen true change affect intend safely change developer able generate alternative fact still satisfy optimistic cause bug pessimistic lead abandon consider change freeze fact prevent consideration change basically everything go reselect everything initially go ignore maybe intentional designer maybe would want error switch read file c investigate hypothesize conclude none exist fact overlook use original help distinguish intend overlook expert attempt understand original developer choose less desirable decision obvious decision would call test know answer problem put code wrong place leave comment like people f expert believe decision could possibly overlook must intend suggest search hide constraint must continue subsequent discovery second example original developer overlook obviously better decision revise horrible little thing change view cod style f gamble decide propose change would work base information yet help predict probability change would succeed one expert implement change find unexpectedly difficult become concern fact believe overlook intend work implement change would waste discover freeze constraint prevent original developer make change presciently predict wrong reason implement change would waste laugh never go work thing mess go caret listen easy get message update caret would straightforward question get already caret listen l c hypothesize explanation underlie reject change address even lack evidence support hypothesis somehow track origin event occur pass false every function call except one trickle seem like hack call four time j c propose several similar change give lack strategy check hypothesis understand two make different change fold task observe better understand call necessary seek better way constraint satisfy subject critique one expert explain call use model application behave go insert text could actually something make fold status wrong example quick brown fox fox brown right fox hit backspace would need update fold display reflect new different place l fifteen f reality participant produce explanation expert subsequently map specific code serve specific constantly talk serve purpose satisfy requirement unique explanation call necessary allow propose unique solution move fold update current poorly choose location point process response task description vague call architecturally questionable another expert ask unique question need figure use buffer mutation eighteen f generate unique critique call cause retain architecturally weird buffer reference move fold update address critique three tantalizingly close change abandon follow pessimistic one novice g implement move fold update give believe bug indicate break freeze hide constraint another j try explain call understand parameter compute abandon path another h fail explain purpose felt hide constraint make change risky expert k abandon consider change state false hypothesis without check intend change fold level reject task architectural criticism propose propose design change compose individual fact change accomplish task address perceive usually first talk summary learn propose change change often begin vague generate hypotheses refine learn one expert l propose six change twenty discover one believe time implement many change reflect application design pattern six see two different style two different might something directly manipulate variable like publicly visible sorry somebody call like update send x change whatever something internally munge munge munge manually tell people end l c novice often solve problem work implementation detail rather consider general pattern maintain every view every buffer maintain caret position key would buffer object value would say x position caret one application e c static propose change task k l propose use field start stop caret update include remove redundant call pass whether call record caret information implement observe one situation many make change eight extract fold update method table three show experience quickly expert extract merely better understand intend final change take longer appear aimless confuse spend second star code revisit perceive visit move take less time recognize block code want extract use eclipse command extract method consistent chunk interpretation encode code use abstract saw code statement statement get consider change level table three extract update method industry experience try sort experience bold zero fifteen g h j three three k three l ten ten thirteen four eleven nine four three four five external validity study lab rather field work differently ways likely make task challenge new application code could rely anything rudimentary information provide design architecture feature reason application ask make change design require substantial understand design might typically much experience take change otherwise task often use learn code much relax time hour half task may also answer tough question seek may know code better provide important twelve work code unit test might learn functionality necessary comment find fail unit test ask make design ideal possible may cause spend time careful design change would otherwise aim model program comprehension process effect rather measure magnitude effect believe concern call question find six discussion discover program comprehension drive take form use form chain elicit would need respect change key driver program comprehension process uncertainty choose much confidence express hypotheses make path choice whether seek evidence support uncertain whether hide constraint would force abandon change unknowingly break requirement use sophisticate judge likelihood hide constraint presence judge skill level original developer interest find many think take form simple predicate code simplicity suggest simple analyse could help discover visualize understand method expert think effect explanation call update fold critique effect design change resolve critique subject tool help query might reduce amount time spend read code increase number hypotheses check tool externalize might help make easier remember return code associate previous study eleven view work set code propose editor externalize find abstractly discuss set perhaps design task focus previous study eleven focus changeable focus externalize view could compact show relevant design rationale long seek capture design design design meet work high level design thirteen tool capture explanation might make easier find later consider play role design suggest measurable definition information hide fact hide task developer think differ define information hide term read developer developer may hypothesize without ever read even locate code embody may still profoundly influence design conversely developer may read method high level abstraction notice consider detail explain interest allow us theorize result carry certainty control experiment observe interrelate complex ways could cause able discern interest novel build theory explain control experiment would desirable test seven draw design dependency normative model ought design find help better describe actually work result suggest tool allow directly work relevant could help work effectively eight thank study participation thank ko helpful discussion thank ko helpful comment draft paper research fund part grant consortium first author also support fellowship find express material author necessarily reflect national science foundation nine reference one l berlin beyond program understand look pro industry empirical study fifth workshop two p f l bass j r little r j view three w g chase h perception chess cognitive psychology four p externalize information cod effect environment task empirical study fifth workshop five f program understand knowledge organization influence acquire schemata cognitive understand learn design interaction new york six e gamma r helm r j design pattern seven l g comprehension skilled novice empirical study eight b engineer l nine j ko r g information need collocate development team l may ten j ko b framework methodology study cause program journal visual compute sixteen twelve eleven j ko b h h ex ploratory study seek relate collect relevant information maintenance task engineer twelve twelve g r maintain mental model study developer work habit l thirteen p j design rationale use associate fourteen p w coelho g c murphy effective investigate source code exploratory study engineer vol thirty twelve fifteen l parnas criteria use decompose vol fifteen twelve sixteen e perry l wolf study soft ware architecture note seventeen four seventeen b value design engineer eighteen shaw architecture emerge discipline ing version guide change engineer june twenty g program un behavior corrective maintenance l j study vol one six f design cognitive springer nineteen p min