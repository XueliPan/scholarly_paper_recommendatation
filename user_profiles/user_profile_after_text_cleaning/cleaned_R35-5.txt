recommendation social tag de de campus de abstract present evaluate various recommendation model make use user item profile define term weight list social tag study approach vector space okapi information retrieval model compare use two obtain delicious social order analyse performance approach different tag subject information storage retrieval information search retrieval information filter retrieval model general term experimentation performance recommender personalization social tag one introduction recent witness unexpected success increase proliferation social tag create content annotate freely choose word tag share whole set tag constitute collaborative classification scheme commonly know implicit classification use search discover interest assign profile define term weight list social tag general annotate relevant tag provide assume describe interest taste need moreover also assume tag use certain user important tag analogously tag assign usually describe content annotate certain item particular tag better tag describe item content previous however carefully take account tag use often annotate many may useful discern informative user feature eight address issue herein one formulate recommendation permission make digital hard copy part work personal classroom use grant without fee provide copy make distribute profit commercial advantage copy bear notice full citation first page copy otherwise republish post redistribute list require prior specific permission fee ten barcelona copyright problem follow let totally order set utility function measure gain usefulness item user user want choose user utility function set let set let r unknown recommendation approach formulate r user ie item content feature describe interest taste need user r set content feature item usually represent real number weight component measure importance correspond feature user item function compute similarity user profile item profile content feature space previous paper consider social tag content feature describe user item profile investigate two issue first study several weight scheme measure importance give tag user item weight scheme base single profile make use whole second tag weight scheme propose evaluate number similarity function study approach well know vector space okapi information retrieval model two use two obtain delicious social analyse performance approach different tag rest paper follow structure section two introduce notation use study profile recommendation approach section three four present approach section five describe evaluate recommendation model section six explain conduct experiment obtain result finally section seven end future research line two f define f vocabulary express annotate annotate tag set tag comprise respectively set set set tag item user base notation way define profile user vector similarly profile item number time user number time item annotate annotate tag define vector tag work extend previous user item profile use different vector component weight explain section four propose user item profile exploit number different recommendation model well know vector space okapi rank model two describe detail section three better understand profile table one gather definition common appear profile recommendation model table one definition use propose profile recommendation model element definition tag frequency number time user tag annotate tag frequency number time item tag zero annotate inverse tag frequency inverse tag frequency user profile size item profile size log five log five four three user item profile section present different scheme weight user profile base information available individual profile consider information whole profile model approach assign weight particular tag user item profile count number time tag use user number time tag use community annotate item thus first profile model user consist vector similarly profile item define vector zero profile model information retrieval environment common appear many document collection informative may allow distinguish relevant document give query take account weight scheme usually apply document profile two adopt principle adapt social tag propose second profile model define zero zero profile model alternative okapi weight scheme follow probabilistic approach two assign document rank score give query propose adaptation model assign tag score weight give certain user item third profile model follow j b zero zero zero zero b zero j respectively set standard value two four section describe number recommendation model define similarity measure user item profile introduce section three two model state art approach five eight investigate author context web search seven similarity compute preference user item noll five propose similarity measure base user tag l l v model user usage tag appear item profile take account weight profile formula introduce factor scale utility function value range one without alter user item rank measure impact noll approach propose similarity measure base tag item profile n l l v similarity direct extension noll approach exploit weight user item profile compute cosine similarity measure zero w w zero similarity al eight use cosine similarity measure compute similarity user item profile profile component weight scheme use follow notation approach define follow ym zero w w zero similarity analogously similarity base tag describe section use weight scheme propose couple similarity function take account weight either user profile item profile two recommendation model zero z v z v zero similarity al eight also investigate cosine similarity measure weight scheme use model web search adapt define social tag follow e w zero w w zero five order evaluate present recommendation model different domain tag condition run use obtain two different social delicious delicious social site web page end service claim million million unique hand radio site music begin claim forty million active seven million track collaborative social tag delicious differ fact contain tag web page belong practically domain tag track belong music domain moreover tag behaviour also different show table two delicious average number tag per user greater however take account tag provide entire community track receive tag web page delicious apparent contradiction explain inverse relation number register one al specify use inverse tag choose use since configuration give best performance value table two description use tag per user community delicious five two delicious create form delicious choose follow first randomly select fifty top delicious may least twenty profile extend set social network delicious maximum distance two user contact allow extension due delicious extract latest user final contain different distinct tag average user profile distinct tag case aim obtain representative set cover music first identify popular tag relate different music use get top tag previous tag artist gather fan along direct finally retrieve tag tag track user profile final contain different track distinct tag average user profile track distinct tag six experiment section explain experiment methodology follow evaluate describe recommendation model present obtain result evaluation methodology figure one depict follow experimental methodology tag um one eighty train twenty test three user prof um eighty eighty train item prof item prof twenty test four five recommender two pair recommender build process figure one description follow experimental methodology relevance prediction table three average result obtain recommendation approach result statistically significant p five except among result mark ym e w p five one p ten one delicious p twenty fourteen zero map eleven one twenty p five forty p ten p twenty twenty map eighty randomly split set tag two first subset contain eighty user use build recommendation model train second subset contain remain twenty use evaluate test specifically build recommendation model whole profile train part profile form tag annotate train evaluate profile test evaluation compute several metrics see section perform cross validation procedure metrics assume content retrieval scenario system provide user list n recommend base profile evaluate performance recommender take account percentage rank relevant appear provide list purpose compute three metrics often use evaluate information retrieval two precision top n rank result p n mean average precision map discount cumulative gain precision define number retrieve relevant document divide total number retrieve document map precision metric rank relevant document higher finally measure usefulness document base position result list evaluation framework retrieve document belong test set see section thus whole test set contain belong active user profile relevant document profile assume non relevant document active user result table two show result obtain evaluation recommendation model use delicious general expect model focus user profile outperform model orient item profile true model believe due small size user profile regard model perform weight scheme exploit whole clearly enhance classic frequency profile representation note even delicious thus seem tag appear many user item profile since informative discern relevant user item context better weight scheme could explain fact social tag popular outperform tag carefully usually describe item content precisely community consensus compare result delicious obtain higher precision value former listen music always tag track contrast main use delicious bookmark tag web page search purpose thus user profile delicious recommendation perform better seven paper evaluate number recommendation model make use user item profile describe term weight list social tag study approach vector space okapi rank model two present work begin exploration information retrieval model could apply social recommender plan extend analysis two first want study alternative recommendation model specifically propose six shall investigate application tag cluster user profile second want restrict research shall investigate collaborative filter hybrid recommendation do example three four nine profile eight reference one g toward next generation recommender survey possible knowledge data engineer seventeen six two r b modern information retrieval three r c g information retrieval search rank proceed four web page recommender system base mine six proceed five noll g c web search personalization via social tag proceed six j b burke r personalize recommendation social tag use hierarchical cluster proceed seven j personalize web search user item profile proceed eight fei b z explore personalize search proceed nine v l social rank uncover relevant content use recommender proceed