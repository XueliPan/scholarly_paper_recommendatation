security communication network security network publish six june interscience use selective memory improve resilience exhaustion attack v department computer science engineer university dame dame summary distribute denial service attack originate quickly bring normally effective web service screech halt paper present selective randomize acceptance adaptive scheme maintain web service despite presence multifaceted attack noisy environment contrast exist rely upon clean train data presume live web service environment make find train data difficult impossible function much like battlefield surgeon triage focus quickly efficiently salvage good realization chaotic nature live environment implicitly limit accuracy employ adaptive cluster approach use extraction limit centroid evolution defend legitimate mix attack environment present approach evaluate performance experimental study diverse attack environment result show wide variety input traffic pattern copyright sons key word attack data mine cluster network security one introduction tool script trivialize creation management large number compromise host aka low profile exist ready launch devastate distribute denial service attack moment sheer prevalence highly distribute nature host complicate matter hence considerable research attention bring bear effectively prevent detect defend neutralize threat one moreover diversity wild necessitate order effectively weather attack paper specifically examine issue end host defense distribute resource exhaustion attack legitimate request base vast amount data observe daily one use lightweight data mine enable mitigation reduce nullify offend assume end service operate perspective isolation external information service beyond directly initiate available issue end host defense root load balance anomaly detection note key work versus large body exist work correspondence department computer science engineer university dame dame copyright sons q al fig one view load balancer effectiveness data view note pattern extraction extract pattern order versus days effective rather attempt extract clean signal extraction mesh well open sit whose input traffic highly variant example pattern evolution input pattern extraction provide excellent evolution extract pattern example cluster interest introduce notion adaptively skip past pattern sustain attack prevent attacker profile comment use evolution secondary filter input quality completion time intuitively understand note distinctive performance effect consider satisfaction multiple flow example web traffic requisite successful session group flow introduce notion session completion time evaluate performance mitigation best knowledge first study consider rather quality service describe selective randomize acceptance scheme employ nimble adaptive response mechanism mitigate malicious attack noisy live environment solution traditional load balancer see figure one rather attempt remove noise inherently present traffic scheme embrace noise adapt rapidly network dynamics design solution center around difficult problem face research community system react attack mas copyright sons distribute rapid dynamic exist little pattern constitute good behavior end attempt offer effective first line defense handle mitigation sophisticate scheme trace run course adaptive application cluster record cluster evolution consistently change defense profile better isolate ongoing attack reduce vulnerability profile attack remainder paper organize follow section two differentiate research approach exist work acknowledge previous study field section three discuss environment solution operate theory behind approach detail explanation give cluster work suggest probability generate section four show traffic analysis evaluation propose solution attack via simulation experiment study discuss section five finally section six offer several conclude remark comment ongoing future work two relate work traditionally attack characterize either data flood case flood handshake never complete flood handshake complete data never send contrast data flood simply overwhelm link question sheer source address often spoof hide location source critically first step defense identification attack occur versus server simply overload due security network selective mine popular content reference nineteen concept connection density function use describe asymmetric property incoming outgo traffic detection attack similarly basic assumption reference twenty ratio incoming traffic outgo traffic high period server could respond quickly heavy load kang propose use hierarchical cluster reference type attack conversely work focus initial mitigation rather detection preclude use exist work regard attack detection trigger mechanism rather solely use system load flood typically involve spoof source packet numerous work attempt reduce eliminate spoof lee propose reference filter spoof redirection via mac verification require router support provide mechanism reference kim al propose packet score mechanism whereby discard base score threshold song propose reference control flow base notion privilege unprivileged channel similar vein path identification six packet mark technique embed path fingerprint within packet alter identification field allow victim identify traverse per packet basis despite spoof path identification remain effective partial deployment fifty still suffer cost deployment large scale case attack spoof approach curtail attack problem goal identify responsible generate attack traffic determine network path malicious communication flow however set attack may involve involve machine intermix legitimate traffic make trace back individual host impractical park lee two present discussion effectiveness source identification probabilistic packet mark technique may potentially reduce do problem manageable level however scheme suffer spoof packet mark field eliminate ability method perform accurate addition genuineness source also categorize depletion resource copyright sons depletion attack depletion attack mitigate filter unwanted traffic would discard anyway later end server example data flood reference seventeen al propose mechanism control aggregate upstream router rate limit scheme upstream gateway combine approach provide comprehensive end host defense attack similar vein level k propose reference eighteen offer alternative recursive mechanism attack host spread across network however rate limit require identification offend nod order effectively contain malicious traffic note could apply input rate limit blend two could subject future research hindrance many discuss requirement extensive deployment throughout router infrastructure versus typically less effective approach lee reference use game theory model apply quota client confine fair share contrast work focus filter likely pattern rather dilute share client believe provide responsive solution specifically work incur fix state overload state impose increase system lightly load oppose potentially state reference another promise attack detection scheme propose reference use covariance model combat flood attack unfortunately work provide minimal map apply result regard mitigation wang shin propose alternative filter scheme base filter reference technique able allow server infer authenticity base analysis expect actual value single host however study effectiveness technique feature traffic yet perform first study application subspace method traffic flow perform reference incorporate anomaly detection technique yield strong result allow note distinct traffic behavior flash crowd worm even change rout pol security network q al icy technique solution demonstrate power subspace method term network traffic identification static cluster cluster cluster common like match rout table finally also acknowledge another attack model call reduction quality thirty target adaptation keep adaptive mechanism oscillate overload underload condition unlike optimize attack traffic produce maximum damage keep low profile avoid detection three architecture design literature do attack typically employ port spoof quickly overwhelm server rather address removal spoof address assume handshake portion connection largely load balancer thus create load rather computational sense contrast focus difficult problem series host attempt overwhelm server legitimate connection request ie handshake complete data resource exhaustion attack make possible recent emergence large scale vast amount even bother hide real address threat model consider attacker master control compromise machine make legitimate connection request victim machine web server thus make unavailable valid hence target mitigation exhaustion attack wherein attack consist burst activity target victim conjecture despite noise good behavior extract short time end consider cluster twelve discover cluster normal activity behavior base connection request premise bolster reference note connection request tend cluster time intuitively normal traffic tend cohesive cluster overload state introduce anomalous malicious behavior fall outside cluster overload exist cluster conversely traffic fall within cluster higher probability good cluster density increase beyond acceptable load filter base weight cluster distance function infer potential connection bad lightweight efficient manner moreover cluster continually multiple present attacker nonstatic defense scheme operation server reach warn state recent set derive cluster freeze proportion around rise fall connection request flood system see figure two new connection request place cluster disruption population balance allow adapt attack order fig two analysis leave partial view collection immediately prior right attack copyright sons security network selective mine table server action within state server load server action action overload warn normal maximum probabilistic connection rejection probabilistic rejection new accept trigger adaptation cluster cluster fix recompute cluster better serve good base load server differential actual expect cluster size relative distance base deviation cluster density cluster centroid acceptance probability assign method allow isolation flow different find traffic normal state ideally flow bad attack recede server revert normal state allow prepare next attack offer unique adaptable resilient method manage attack still deliver service legitimate table summarize action take different sever load normal state imply access good believe one infer higher probability goodness receive state however tune use metric sole test goodness assumption possess two key first attacker may conduct low level attack overwhelm server second cluster host previously consider good may become compromise case simple metric train goodness base underload state may deceptive however important note increase traffic occur attack likely previously note good cluster become thus subject increase rejection even slow attack immune rejection cluster weight cluster still manifest magnitude number cluster defend attempt poison cluster use evolution cluster window size cluster traffic data point discard use fresh start point cluster new round use keep history recent past set compute event current cluster tech copyright sons mitigate overload state server due insufficient learn pattern random hop centroid set fix adopt traffic move overall adaptation provide rejection method future work explore method differential cluster attack rejection probability generation data manageable request merely note cluster establish however server danger fail need ability distinguish traffic fall within accept pattern thus task become outlier detection perform outlier detection initially incline apply method incorporate local outlier factor fifteen useful measure point distance cluster relative measure cluster density however operation infeasible give requirement calculate nearest neighbor connection small quantum time budget accept decline connection thus system must rely faster heuristic assign probability connection belong give cluster exact distribution unknown rely upon theorem state exist distance k standard greater mean sixteen invaluable determine acceptance base cluster information gather model make distribution within cluster new connection receive server attack theorem suggest x two x two represent cluster mean x represent connection data point represent cluster standard deviation new traffic enter connection security network q al subspace point distance furthest cluster center receive acceptance probability sparse point distant closer cluster increasingly accept load server increase policy also need become much prevent server overload primary danger attack stem overload capacity server give two server present identical connection request partition identical server issue acceptance probability one scenario feature differ traffic load server reach resource capacity rate rejection must rise significantly imply rejection probability component derive load threshold follow exponential growth pattern therefore acceptance probability function base load l e constant weight l load server time represent server threshold load final acceptance probability generation connection maintain exist distribution around cluster connection cause cluster deviate natural distribution entire population probability rejection increase distribution consideration sufficient calculate probability base separation actual expect distribution cluster x x x represent percentage within cluster connection packet x represent percentage within give cluster point cluster fix component probability generation therefore assign fall within heavy low acceptance localize change overall traffic aggregate likely reflect attack straightforward merge function calculate acceptance probability use linear combination weight metric first ex copyright sons tend period attack ideally weight adapt focus however dynamically adjust weight entail extra computation cost second magnitude rejection increase significantly use linear relation particularly important within context attack therefore simplicity effectiveness product adopt calculate final probability load balancer use decide connection acceptance rejection although discrete model nearly infeasible probabilistic heuristic prove effective method mitigate attack beyond core discuss follow detail flash crowd false computation cost flash crowd one debate whether flash crowd define good bad reality flash crowd generally intentionally malicious rather request drive exceptionally popular content although discern offer limit benefit discern flash crowd versus normal traffic behavior still control ensure admit indeed serve timely manner capacity limit highly localize flash crowd example university message board post desirable outcome encourage cache part remote network particular note harm beyond normal load balancer would employ request consider good network context false decision system without perfect knowledge request intention false false negative practical reality system critically target noise preclude creation extremely accurate model site change time rather exhibit easily extractable behavior university web sit rather web site scientific accept clearly make incorrect take exchange nimbleness system prevent simply profile attack via adaptation elimination train simply unfeasible note upcoming experimental study offer significantly improve result security network selective mine merely randomize load balance demonstrate clear improvement false negative hence believe benefit gain approach outweigh incorrect make server request period order maintain reasonable load realization good majority legitimate computation cost important note core relatively lightweight data mine conduct load balancer web server moreover transition highly load state freeze set recent past use evaluation incur data mine load system attack could also direct separate server besides load balancer load balancer sufficient light load acknowledge cluster process deterministic lack determinism mitigate invocation low load computation rejection phase also relatively lightweight distance versus exist cluster constant factor require overhead create fix impact per connection exhaustion attack finally note mitigate pure exhaustion attack example flood solely focus issue resource exhaustion via legitimate request traditional would offer little benefit preclude use filter unwanted traffic largely complementary usage actual data rather synthetically data increase difficulty defense firmly believe result accurately reflect would occur actual exhaustion attack university tap data use simulation experimental analyse enable test across wide variety simulator develop cluster criteria use packet network transport layer include limit address port number value sequence number distance easy compute actually adopt approach visualization easiness present result use port form space cluster regard cluster slide window simulation second use recent attack data point current cluster drop save simulation cluster update simulation second provide server appropriate load level model link vary load threshold set eight six respectively denote load respective invoke server set three second client set two second maximum three retry declare failure load probabilistic rejection beyond threshold outline perfect always reject compare primary performance metric quality preservation term define follow manner four simulation analysis understand traffic pattern evaluate perform simulation experimental analyse discuss next two section start conduct simulation analysis base live capture data primary web server university campus usage actual data allow avoidance random address random port traffic would trivial extract via data mine moreover usage actual data allow accurate simulation live real address port request represent subvert host observe traffic flow copyright sons flow completion time flow n order session successful flow within session must complete gather data timeliness requirement client instance real web session might require three render must complete entirety session determine successful constraint user important good connection available security network q al wise necessarily guarantee satisfy case load balance especially critical reject connection prevent completion successful session session completion metric percentage good host service successfully serve effective metric evaluate effectiveness mitigation enough bad prevent access server sessions suffer consequently load balance scheme indiscriminate individual good may reject prevent completion overall session end study hourly daily weekly traffic pattern incoming web request main web sever campus figure three show traffic pattern incoming web request main web sever campus majority total number specific default unit use within hour ten observe certain address diurnal pattern also observe range interest observation currently account open topic future research scatter plot space use cluster form source address port number show figure four provide snapshot one hour web traffic come web campus cluster port show port number heavily distribute low high end certain range simulation visualizer figure five develop visualize cluster evolution one zoom individual cluster see centroid movement within cluster step time unit get overview distance different cluster visualization help one understand potential pattern provide better adaptation attack behavior comparison performance various summarize figure six perfect policy oracle know exactly good bad equivalent evil bite packet header load policy represent nominal load balancer exemplify traditional load balancer note figure load policy perform relatively well initial phase attack exist still legitimate host legitimate host finish fig three view number incoming web traffic monitor period time unit first three total number connection request hour copyright sons security network selective mine fig four view incoming web request monitor period approximately one h source address normalize source port normalize fig five cluster evolution visualizer movement within one choose cluster copyright sons security network q al fig six comparison performance perfect load policy random attack time time exist overwhelm nature drastically reduce rate good satisfy despite relative request rate initial attack contrast offer rate successful sessions good roughly halfway perfect load k set k ten clearly incorrectly reject portion good connection request serve purport role act triage salvage part essence buy time function end period provide roughly cumulative improvement normal load balance scheme term good sessions successfully satisfy set k ten offer reasonable performance interest question pose ideal set k figure seven possible k value study data input figure six normally k increase higher connection rate depend server traffic volume one possible choice k minimize cost function c distortion distortion function xi two define cluster xi data point cluster centroid cluster minimum description language k copyright sons define k constant number feature port k number cluster n number instance train data set choice depend web application avoid need reduce number feature number cluster see figure seven one cluster k one worst performance single cluster clearly insufficient fit data conversely k improve performance certain level show k value thirty slightly better initial k value ten five experimental study addition traffic analysis simulation study preliminary version develop validate initial result experiment environment divide four emulate network load balancer server responsible generate connection request via server emulate network connection request map space derive live university traffic network tap list potential separate group good bad bad elect security network selective mine fig seven performance various k value attack period time conduct attack experimental period experimental connect switch network layer two overlay connectivity provide web content serve reflect style page page feature several small picture content conduct use employ ten separate object attack last experiment select ten significantly difficult eleven due fact denial single connection good client ie image one good client session count fail define different attack experiment separately generation method random select randomly client space essence random set c form sophisticate attack cluster represent localization within connection space single centroid pick within connection space c likely join closer select centroid generate singular attack cluster sophisticate form attack homologous cluster mimic pattern legitimate traffic make differentiation good bad nearly copyright sons fig eight summary preservation represent legitimate host service attack extremely unlikely attacker would need inside information ie access tap present scenario demonstrate still offer benefit even worst case figure eight indicate expect overall quality service base metric fall load policy perfect policy figure show end result performance test complete first case randomize perform best note tend fall outlier range security network q al fig nine cumulative total good sessions successfully complete higher rate rejection introduction cluster reduce performance slightly request less likely fall outlier category must overload cluster first reject cluster type attack require intelligence attack reasonable approximation bias cluster group single cluster third case still outperform normal load balance slightly due fact traffic nearly perfectly balance among normal cluster would derive practice attack extremely unlikely would require attacker precise information ie tap network data server order appropriately guide regard attack graph figure nine represent several server may face case generate independent cluster attack traffic represent case number similar machine compromise form zombie army suppose horse compromise university residential compute network machine likely machine lead similar value personal use range address relatively tight attack generate collection would likely generate separate cluster normal traffic figure nine demonstrate domination perfect copyright sons policy curve load outperform load policy degree domination less case purely randomize although assign high fall within attack cluster sufficient separation legitimate traffic cluster overlap attack legitimate traffic cluster lead reduce rate attack connection apply set group legitimate machine university cluster server content compromise within group occur difficulty distinguish attack legitimate host within cluster basis bias performance suffer particularly instance overlap case believe use cluster evolution combine heuristic basic approach could provide interest insight inclusion evolution directly heuristic ongoing work six conclusion future work paper present effective probabilistic connection rejection method provide management attack technique employ cluster security network selective mine manageable load server load become unbearable server apply several metrics base distance cluster center cluster population use assign rejection accordingly use method assist isolate likely attack enhance quality service deliver legitimate attack pass server revert learn state result experiment indicate effective technique lead several study intend perform study temporal network traffic determine segmentation use cluster hyper visualization useful better understand network traffic particularly attack work include expand usage cluster evolution well study network traffic author would like thank anonymous insight comment paper reference one short visit bot zoo security privacy three three two park k lee h effectiveness probabilistic packet mark denial service attack proceed three partridge c l al proceed four savage practical network support proceed five j implement defense attack proceed network distribute system security symposium catamaran resort hotel san society six song pi path identification mechanism defend attack symposium security privacy may seven v architecture mitigate attack journal select one eight c k protection distribute denial service attack use filter international conference communication vol one may nine wang h shin k detect flood attack proceed ten j c framework denial service attack proceed eleven z p deny attack router base solution international conference compute copyright sons twelve j classification analysis proceed symposium mathematical statistics probability thirteen p h automatic extraction traffic proceed network fourteen l v j comparative study anomaly detection scheme network intrusion detection proceed conference data mine san ca fifteen sander j lof identify local international conference management data sixteen mood f introduction theory statistics sons west seventeen r j v control high aggregate network computer communication review three eighteen liang f yam defend distribute attack fair router throttle network thirteen one nineteen detect attack base connection density international conference communication fifteen twenty w unsupervised approach detect attack base metrics pacific rim conference signal process august kang j attack hierarchical cluster base similarity conference machine learn cybernetics august j lee w sustain availability web service distribute denial service attack two kim chao overload control distribute attack proceed song stateless flow filter mitigate flood attack symposium security privacy may covariance analysis model attack detection proceed international conference vol four june c wang h shin k filter effective defense spoof do traffic proceed conference computer security c characterization traffic flow proceed conference measurement b wang j cluster web proceed august collins reiter empirical analysis do filter symposium security privacy may thirty matta reduction quality attack dynamic load vulnerability assessment design seven international conference computer communication anchorage may security network