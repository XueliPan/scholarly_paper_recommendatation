query model uncertainty supervise prof milo university abstract many offer service via application reason execution flow extremely valuable company reason must often operate term uncertainty partial information due partial trace effect unknown external research one define model capture web application partial information uncertainly various flavor two design allow efficient reason trace model three provide practical exploit sound theoretical effective optimization web identify restrict class model capture realistic allow efficient analysis hardness result indicate necessity restrict model describe result highlight open consider future research one introduction business process short consist business undertake one pursuit particular goal often interact via application extremely popular nowadays flow depend many whose value know among one may find user availability response time allow analysis common practice trace execution flow log perform along relative order causality relationship reason execution trace extremely valuable company use optimize business process employ target reduce operational cost ultimately increase competitiveness reason often operate environment induce partial information uncertainty permission make digital hard copy portion work personal classroom use grant without fee provide copy permission copy without fee part material grant provide make distribute profit commercial advantage copy make distribute direct commercial advantage copy bear notice full citation first page copyright notice title publication date appear copyright k own notice give copy permission large data endowment must honor base endowment copy otherwise republish post abstract c permit copy otherwise republish redistribute list require fee special permission post redistribute list require prior specific publisher permission fee request permission republish eight august new one copyright endowment zero eight august new copyright endowment various flavor first execution trace record web application often contain partial information perform run time may due confidentiality lack storage space second even presence fully detail trace past prediction behavior future naturally consider uncertainty often depend unknown external behavior interaction response time enable reason execution flow must first characterize effectively analyze focus two complement sort characterization detail trace structure schema type information prove extremely useful management data knowledge typical structure shape data allow intuitive query formulation optimize query process minimization run time nineteen four knowledge commonly refer type information process execution trace abstractly view particular class data shape direct acyclic graph dags describe execution flow three show type information also critical optimize analysis execution trace formal process style dictate standard five provide knowledge possible shape execution trace turn much careful characterization trace shape require practice first mention execution trace record web often contain partial information perform run time namely part give formal process specification actually record second execution trace query process provide type information input trace output select query address study first time management type information process execution trace specifically consider type inference type check query execution trace query consider select portion trace interest user type describe possible shape execution trace query formally define characterize three common class execution trace vary amount information record run consider respective type inference type check study complex two query vary expressive power present efficient type possible analysis aim provide complete picture trace class query feature lead effective trace likelihood second characterization interest likelihood execution course depend many behavior interaction response time whose actual value know run time however examine set execution trace one often observe execution trace pattern thereof likely identify likely trace satisfy certain query criteria crucial various design fit need certain user group personalization business logic allow trace selection one first need model describe possible well likelihood second give model query describe family execution trace usage pattern interest efficient mechanism identify qualify trace require much direct recently address first issue namely inference proper model give set execution trace use variety data mine see relate work second issue namely efficient query analysis model less successfully address far work aim provide set address problem various basis practical exploit sound theoretical effective optimization web follow section give intuitive informal description model result obtain far formal detail appear nine eleven two start review informally main stand center research section introduce basic form concept extend capture uncertainty discuss section three model use describe query abstraction consider two three abstract conform various business process use term business process describe essence web consider recent standard business process execution language five allow describe full operational logic execution flow specification describe process nest dag direct acyclic graph consist nod link edge link detail execution order may either atomic compound latter case possible internal structure call implementation also detail dag lead nest structure dag unique node mark start end node example schematic graphical example figure one business process specification travel agency depict figure one activity represent pair nod first background stand activity activation point second completion point start compound trip activity user may choose reserve regular trip luxurious one first choice lead implementation whose flow depict leftmost big bubble second choice lead luxury compound activity whose internal flow implementation depict rightmost big bubble two user may search parallel open new browser flight regular luxury implementation user direct bill system represent regular luxury respectively execution trace instance specification actual run process follow logic describe specification management allow trace instance execution trace abstractly view nest dag contain nod represent activation start completion end edge describe flow compound activity correspond internal flow record activation completion connect use distinctly mark edge nest dags trace follow naturally nest structure example consider trace depict figure two edge depict dash follow reveal internal trace correspond compound example zoom trip reveal search perform correspond hotel flight reserve parallel hotel flight resp confirmation print query use abstraction query language suggest three query define use execution pattern whose structure similar execution trace pattern edge may mark transitive seek path connect edge rather single edge similarly composite nod may mark transitive seek possibly indirect evaluate query search execution pattern execution trace represent embed homomorphism nod record general case partial information record consider follow section query execution trace consider input type specification readily available well output type capture select query type information infer three model uncertainty next extend model account uncertainty cause partial trace well uncertainty cause external present correspond propose practical partial trace present model partial trace list initial result type inference type check model generate execution trace may vary amount information record run account distinguish three execution trace type increase flexibility decrease amount guarantee information follow naive trace provide complete record trace provide complete record along correspond name trace provide record activation completion possibly partial information correspond name selective trace provide record subset possibly report partial information correspond name next present different sort trace obtain trace example figure two b describe present naive trace figure one note trace disclose different bill system invoke luxury regular avoid disclosure may rename log trace contain generic activity name credit instead name capture notion trace system represent rename function name figure two c present trace obtain lead figure two b resp case selective trace use occurrence record due confidentiality storage selective trace system represent rename function deletion set record name appear deletion set omit instance travel agency wish keep secret fact different type treat differently credit check need also record luxury activity omit altogether figure two e selective trace obtain naive trace figure two b well apply rename deletion thus goal secrecy achieve type revisit mention type set trace consist business process specification b trace system exactly figure two execution trace figure three query result edge pattern nod edge trace match nod activity name coincide composite atomic nod map composite atomic nod edge regular query map correspond edge trace pattern map correspond trace transitive edge may map contain flow edge transitive query nod may map indirect correspond nod specification example example execution pattern depict fig three transitively trip search activity nod edge denote transitive nod resp edge fig three b c depict two possible match trace fig two type family execution trace capture notion type type consist one specification two trace system record execution case perform set trace log possible process already define notion business process may formally formulate notion trace system consist one rename function name two deletion set subset name set semantics record image rename function whose name appear deletion set omit execution log altogether rename function identify function deletion set empty trace system naive latter hold trace system otherwise selective result study type check type inference query execution trace case trace two practically query execution trace often do two step repository first query select portion trace particular interest serve input finer analysis query mine derive critical business information surprisingly type information ie knowledge possible structure query sub trace valuable query optimization three role analogous schema query optimization allow eliminate redundant simplify query evaluation type information readily available specification original trace however information available select query develop efficient derive type information another level analysis tool expect data particular type would like guarantee select query conform require type type check second problem study examine two presence naive selective trace input output type result follow space may give exact proof result rather explain intuition behind exact proof appear eleven type inference type inference problem give input type query trace goal infer output type represent sub trace conform query problem naturally trace input output type consider possible output type restrict naive trace system show type inference may possible output type restrict trace system give algorithm type inference however show inevitably size output type may exponential size input type query hold even input type restrict naive trace system flexible selective trace system allow output type provide algorithm perform type inference whose time complexity polynomial size input type exponent determine query size hold even input type contain selective trace system intuition observe naive trace system may insufficient capture exactly trace set select query consider specification whose flow contain two consecutive nod label compound activity name bear two different one contain activity name b second contain c obviously set possible execution trace correspond b c follow b c consider query require choice b first activity choice c second activity easy see specification may unique trace correspond query naive trace contrast output type may use trace system type inference possible example new contain two activity name first b single implementation second c single implementation rename function map general type inference algorithm follow line query evaluation algorithm ten algorithm generate intersection original specification query pattern specify query embed within specification manner start map query root specification root map implementation map query node implementation within specification transitive nod correspond implementation specification direct one thus consider split query allocate compound activity name newly create specification allocation do rename activity name pair activity name thus trace require exponential blowup query size due need consider query split blowup specification size due transitive edge number possible match edge may exponential specification size selective trace allow avoid exponential blowup specification size cause match transitive edge selective trace exploit form regular grammar succinctly capture transitive edge match overall complexity thus polynomial specification size exponent determine query size split query still need consider type check type check problem also give addition input type query target type goal verify whether sub trace conform query input type also conform target type consider several follow input target type restrict naive trace give algorithm type check show problem show type check generally undecidable input target type may use selective trace intuition algorithm rather complex derive algorithm intersect parenthesis string eighteen general idea define auxiliary class deterministic business process every log execution trace uniquely define execution occur practice show intersection process possible finally show every business process may transform deterministic one detail may find eleven proof reduction problem test containment context free string know undecidable practical result type analysis two main practical first concern type inference signal class selective trace type ideal type system trace allow flexible description trace well efficient type inference second show hardness type check motivate identify practical allow efficient type check trace likelihood start explain model external affect course execution proceed result model first extend definition support external likelihood define rank trace base likelihood finally adjust query language account query specification recall compound activity may different possible correspond different user variable value server availability capture attach logical user variable value guard implementation practice guard truth value likely moreover likelihood particular choice vary different point run may depend course run far previously make account use probability distribution function give description execution course give point guard formula f determine probability f hold likelihood execution trace define base distribution function focus three common class distribution function follow memoryless independent truth value formula stay constant time truth value formula f point execution depend truth value assign k recent formula constant k figure four probabilistic flight flight flight p one p flight flight flight ba al seven one two one seven two p hotel ba al reset confirm seven five five five six one three four six p choice ba al table one distribution six three one one seven two eight two correspond application compound guard guard user choice ba stand air al aer one implementation choose compound activity occurrence determine truth value table one depict distribution conditional probability formula give succinctly formula condition subset subset sufficient computation formula probability independently typical execution flow follow first one obtain user search flight book ba flight likelihood second one user choose search flight book flight hotel finally third one user search flight choose ba satisfy retry time reserve ba flight note specification structure dictate sequence guard value correspond trace thus affect computation likelihood analysis example suggest hotel deal present appeal enough need improve next explain query assist example figure four provide schematic description application activity roughly query language adjust query language present section two support query retrieve top integration far consider separately two model uncertainty thus likelihood analysis assume trace system naive reveal information log execution trace naturally intend extend selective trace open clearly exist relate currently remain open list next efficient type check give algorithm type check presence trace show selective trace interest identify either trace specification allow model distribution generic use oracle allow computation conditional intend examine appropriate oracle preliminary result indicate dynamic network vary expressivity may serve appropriate model need specification inference practice many case distribution specification guard even specification structure unknown mine give set sample trace incorporation inference engine one challenge future research intend enhance allow practically efficient practical intend construct system demonstrate practical context commercial web sit design may adjust fit navigation pattern specific class either statically dynamically may inject accord common pattern give structural nature analysis may point content personalize also specific within yield optimal profit five relate work give section review relate work highlight relative result due space give limit subset relate result see eleven nine review type type check type inference well study functional program twenty point six analysis valuable query well type inference type check also consider extensively context nineteen show selection query type check perform time complexity equal lower type inference depend consider compare set bar obvious distinction nest dags instead flat tree type check may harder type inference probabilistic data probabilistic eight probabilistic one probabilistic relational model fifteen allow representation uncertain information many work assume figure five query one b query two k likely match trace query follow example query depict figure five focus also reserve hotel retrieve activity flow trace match query indicate prefer thus promote fig five b depict query focus search end unsuccessfully reset restart search identify common flow may provide insight main reason dissatisfaction result find trace call problem decision problem variant consider also query call give specification accompany memoryless distribution present implement algorithm compute time polynomial algorithm compute type represent relevant trace give also query q may compute time polynomial exponent determine q also show q thus also specification size however present implement perform well practical case show result may extend general undecidable practical implement test performance synthetic data result far indicate analysis fairly large may perform within second goal intend apply result describe four future work summarize main result sec review main research data consider however capture dynamic nature flow possibly unbounded number recursive possibly dependent activity term possible semantics number model infinite thus materialize costly impossible dynamic set allow efficient query evaluation tight connection class trace study correspond classical class string represent bracket parenthesis sixteen also close connection selective trace type context free graph seven however best knowledge model equivalent naive trace study context term query work context free graph concern formal logic specifically first monadic second order logic query language expressible restrict enough allow efficient evaluation absent seven verification variety probabilistic process exist literature among mention hide model thirteen probabilistic recursive state machine fifteen stochastic context free graph extend finite state machine describe nest structure similar model however assume probabilistic note ten query language allow representation inexpressible temporal typically consider verification also note unique trace type define efficiency query evaluation absent verification work probabilistic process data mine finally mention complementary line tool use data mine autonomously without query generally without knowledge specification structure analyze set trace typically work aim find autonomously interest pattern within give log infer approximation specification among mention web mine fourteen business process mine seventeen tool twelve six conclusion research describe paper focus web aim develop tool analysis partial information uncertainty initial result indicate model suitable reason concise intuitive allow efficient analysis base model provide efficient practical analyze query term uncertainty experimental result well theoretical analysis indicate efficiency believe model result stand firm research intend enhance optimize solve remain open finally implement allow representation query web realistic seven reference one p query update probabilistic information two c milo query business process three c milo monitor business process query four v g k projection five business process execution language web service six j crash course query pod seven b monadic logic graph one eight n efficient query evaluation probabilistic nine milo query probabilistic execution trace ten milo query structural behavioral business process eleven milo type inference type check query execution trace twelve j g e w data warehouse log thirteen n hide process theory six fourteen f p l mine interest knowledge survey data three fifteen n l koller learn probabilistic relational model sixteen bracket j computer system one seventeen dayal business process intelligence industry eighteen r parenthesis j fourteen three nineteen milo type inference query data pod twenty j c program press p weld dynamic probabilistic relational model f dayal business process cockpit p sen represent query correlate probabilistic