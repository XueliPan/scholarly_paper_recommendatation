Forwarding in Opportunistic Networks with Resource

Constraints

Dept. of Computer Science, Boston University

Dept. of Computer Science, Boston University

Vijay Erramilli

evijay@cs.bu.edu

Mark Crovella

crovella@cs.bu.edu

Abstract
Effective forwarding in mobile opportunistic networks is a chal-
lenge, given the unpredictable mobility of nodes, short contact du-
rations between nodes, wireless interference and limited buffer sizes.
Most forwarding algorithms aim at decreasing costs (relative to
ﬂooding the network) by forwarding only to nodes which are likely
to be good relays. While it is non-trivial to decide if an encountered
node is a good relay or not at the moment of encounter, it is harder
still to prioritize which messages to transmit under the presence of
short contact durations and which messages to drop when buffers
become full.

The main objective of this paper is to study different message
prioritization schemes using real measurements. Such schemes can
be broadly divided into two categories - schemes which do not use
any network information, and schemes which do. Examples of the
former set of schemes include FIFO/LIFO etc. For the latter set
of schemes, there is a key design choice: On one hand, we have
the following scheme: when a forwarding opportunity presents it-
self, assign high priorities to messages which are relatively close to
their intended destination. On the other hand, we can assign high
priorities to messages which are farther away from their destina-
tion than closer messages. In order to decide if messages are close
to their destination or not, we have to rely on a forwarding algo-
rithm. For this, we use delegation forwarding schemes which have
been shown to be efﬁcient in terms of cost incurred in the network.
We develop a new set of prioritization schemes based on delegation
schemes. We consider these schemes in our empirical study.
Categories and Subject Descriptors
C.2.1 [Computer-Communication Networks]: Network Archi-
tecture and Design—Store and forward networks

General Terms
Algorithms, Measurement, Performance

Keywords
Mobile Opportunistic Networks, Delay-Tolerant Networks, Forward-
ing Algorithms, Pocket Switched Networks

Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
CHANTS’08, September 15, 2008, San Francisco, California, USA.
Copyright 2008 ACM 978-1-60558-186-6/08/09 ...$5.00.

1.

INTRODUCTION

Forwarding in mobile opportunistic networks is a hard problem
because of two key challenges: the unpredictable mobility of the
underlying nodes, and the resource constraints which include lim-
ited battery life, short contact durations and small buffers.

While there has been work [7, 6, 17, 4, 8] that addresses the ﬁrst
challenge, little work has been done to address the second chal-
lenge. For a mobile network operating under such constraints, the
joint question of which messages to transmit and which messages
to drop becomes important. As with a forwarding algorithm, ev-
ery node should be able to decide which messages are transmitted
and which messages are dropped based on the information the node
has, all the while balancing the trade-offs that exist between success
rate, delay and cost. Hence there is a need to develop and study pri-
oritization schemes for messages such that nodes can forward high
priority messages and drop low priority messages.

Message prioritization can be performed independent of the un-
derlying forwarding algorithm. Such schemes include FIFO [18],
LIFO and ttl-based algorithms [17]. While such schemes are easy
to implement, the fact that they do not take into account network
information can lead to poor performance and suboptimal use of
the scarce resources.

For the schemes which do use network information to make in-
formed decisions there is a crucial question: on the one hand, one
can assign high priorities to messages which are close to their in-
tended destination. A node following such a scheme, will upon an
encounter, drop the message farthest from its destination and trans-
mit the message closest to its destination. Proposed schemes which
share this philosophy include PREP [15] and DLE [5].

On the other hand, one can decide to assign high priorities to
messages which are farthest away from their destination [2]. Fol-
lowing such a scheme, the ﬁrst message which will get dropped will
be the message which is closest to its destination, and the ﬁrst mes-
sage which will get transmitted (after delivering the those messages
destined to the encountered node) will be the message farthest from
the destination. Clearly the notion of ‘ distance’ to a destination is
extremely important in such schemes that use network information.
This paper starts with the observation that in order to develop
an effective prioritization scheme, it is useful to study dropping
schemes and transmission schemes independently of each other. In
order to facilitate our study, we develop and study a message prior-
itization scheme based on delegation forwarding algorithms [8].

In previous work we have shown that delegation schemes reduce
costs by relying on principles of optimal stopping theory to decide
when to forward messages [8]. These schemes rely on a forward-
ing metric assigned to every node, that is generically referred to as
‘quality’ for that node. This metric determines the probability of
successful delivery of messages to their intended destination, and

hence convey the notion of ‘distance’ to a destination. For the pur-
poses of this study, the choice of delegation forwarding is not essen-
tial. However the combination of low cost and the use of a generic
metric to convey distance make delegation schemes appealing for
basing our study. We augment the delegation algorithms with a
replication-count number, which we refer to as delegation number.
This number is then used to assign priorities to messages.

In this paper we study a variety of schemes using real encounter
traces. The most signiﬁcant result of our paper is the scheme which
assigns high priorities to messages with low delegation number per-
forms the best in terms of success rate, delay and cost. We interpret
this result in light of the path explosion phenomenon observed be-
fore [7].

2. RELATED WORK

Most of the work done in mobile opportunistic networks [3, 7,
12] is on the design of forwarding algorithms which aim at max-
imizing performance while reducing cost [13, 7, 8, 11, 17, 4, 6].
Our focus here is to explore different message priority schemes
given that we already have a forwarding algorithm. In particular
we use the delegation schemes developed in [8].

There has been prior work done in designing message priority
schemes. Epidemic routing [18] uses FIFO scheme, while the main
idea behind Drop Least Encountered (DLE) (developed in [5] and
subsequently used with different forwarding proposals [13, 16, 9])
is to drop the message with least likelihood of delivery. A similar
idea has been proposed in PREP [15] where messages which are
farthest from their destination are assigned low priorities. These
proposals primarily differ in how they deﬁne the notion of distance
to the destination. In our work, we take the probability of success-
ful delivery to the intended destination as the distance; higher the
probability, lower the distance. We rely on frequency (contact rate)
and destination frequency (contact rate with a given destination) [8]
as indicators of the probability.

Our study is aimed at networks which consist of mobile devices
carried by humans in conference/social settings [3, 7]. There has
been similar work in message prioritization in other similar net-
works, like vehicular DTNs, most notably MaxProp [2] where a
node assigns high priorities to messages which are relatively new
in the network.

Our work is different(and indeed harder) as we have to consider
short contact durations as well as ensure low overall cost in the
network given that energy is a precious resource unlike in vehicular
DTNs [2, 1].

3. ASSIGNING PRIORITIES TO MESSAGES

In this section we ﬁrst describe the setting we are working with.
We then discuss the schemes which we study as well as the poten-
tial implications of using these schemes. We then describe the a
prioritization scheme which is based on delegation forwarding.

3.1 Formulation

i

|

∈

N

M
|

M with

Building on the formulation given in [8] we assume a set of mo-
= N . Nodes generate messages over
bile nodes
time; each message has a particular source and destination. We de-
ﬁne Mi as the set of messages held by a given node
i. When
nodes come into contact; have encounters, they are capable of ex-
changing messages. Messages are transmitted in whole from node
to node during node contact intervals, after which both nodes hold
message replicas. Nodes hold on to the message replicas until their
respective buffers are full, at which time the nodes have to decide
which message to drop. Nodes do not possess any a priori knowl-

N

edge of the number of nodes in the system or knowledge of any
properties of the other nodes. We are working in a setting where all
nodes are mobile; we do not consider settings where some nodes
may be stationary and are gateway nodes to the Internet.

We consider the following metrics: (1) cost, which is the number
of replicas per generated message in the network; (2) success rate,
which is the fraction of generated messages for which at least one
replica is eventually delivered; and (3) average delay, which is the
average duration between a message’s generation and the ﬁrst ar-
rival of one of its replicas at the destination. By “high performance”
we mean high success rate and low average delay.

N

N

N

When a node

i forward to node

i encounters another node

j , the basic question
that a forwarding algorithm addresses is which subset of messages
mi in the set Mi should node
j to maxi-
mize performance and minimize cost. Many of the proposed so-
lutions differ in the type of network information used, as well as
how they use it to answer the above question (refer to [8] for a de-
tailed discussion on this point). However some of these schemes
are designed and evaluated under the assumptions of inﬁnite buffer
capacity and inﬁnite bandwidth [8, 17, 12, 10]. With no resource
constraints there is no need for prioritization of messages.

N

However under the presence of ﬁnite contact durations and ﬁnite
buffers, the questions of prioritizing the transmission and dropping
of messages becomes equally important. The question then be-
comes which messages in the subset mi should node
i transmit
ﬁrst and which messages in the subset should node
j drop ﬁrst to
minimize cost and maximize performance?

N

N

We start with the observation that it is important to study mes-
sage dropping schemes independently of message transmission
schemes. This will let us identify a consistent prioritization scheme
if it exists. From a node’s perspective, message prioritization
schemes can either be independent of the forwarding algorithm or
use the information provided by the forwarding algorithm to decide
on the priorities.

Examples of the former include FIFO, LIFO and Random.
These schemes do not use any extra information of the network
- a node merely inspects its buffer and drop/transmits a message in
FIFO/LIFO manner. Else the node will pick a random message to
drop or transmit. We consider these schemes in our study. More
details are provided in the next section.

When message prioritization schemes incorporate network infor-
mation, one can think of two diametrically opposite schemes. On
one hand we have the following scheme: upon an encounter, assign
high priority to messages that are closest to their destination, and
low priority to messages that are further away from their respective
destination. The rationale for such a scheme is fairly intuitive —
the network expends some energy in replicating and forwarding a
message close to its destination. Given a choice between spending
energy on a message that will get closer still to its destination, or
a message which is not certain to reach its destination, choose the
former. Example schemes include PREP [15] and DLE [5].

The main problem with such schemes is that some messages
might suffer from ‘under-replication’; a node might only replicate
and forward messages which are close to a destination, never giv-
ing a chance to relatively new messages to propagate in the network
(Although PREP [15] does use a hop-count value to ensure under-
replication does not occur).

On the other hand a node can adopt the following scheme: assign
high priority to messages which are farthest from their destination
and low priority to messages which are closest to their respective
destinations. This scheme is less-intuitive — given that we rely
on multi-hop forwarding, favoring a message that is far from its in-
tended destination over a message close to its destination would en-

tail spending more resources which are scarce in the ﬁrst place. Be-
sides, dropping a message which is close to its destination, with the
hope that another replica of the message makes it to the destination
may increase delays for that message. However a potential beneﬁt
of such a scheme is that it may address the ‘under-replication’ prob-
lem. As a message makes its way thru the network to get closer to
its destination, multiple replicas of the message might propagate,
increasing the probability of successful delivery.

We explore these tradeoffs using empirical measurements in the
next section. However before we do so, we need to address the
question of which metrics should we use that give a good indication
of distance to the destination.

Algorithm 1 Augmented Delegation Forwarding

N be nodes

1, . . . ,
1, . . . ,
i has quality xim and threshold τim for

M be messages

N
M

N
M
N

Let
Let
Node
INITIALIZE
On contact between
N
for m in 1, . . . , M do

∀

i, m : τim

←

i and node

xim; dm
j:

1;

←

N

m.

M

if

m is currently held by

M
if τim < xjm then

N

i then

τim
if

xjm

←
j does not have

N
increment dm
forward

m then

M

m from

i to

N

j

N

M

end if

end if

end if
end for

We use the delegation forwarding scheme[8] which have been to
shown to be efﬁcient in terms of cost and deliver high performance.

3.2 Delegation Number based Priorities

To recap, the main idea of delegation forwarding is as follows.
Every node has a ‘quality’ associated with it, which is a generic
metric that gives the likelihood of the node successfully delivering
messages to a destination. The key idea of delegation forwarding
is that a given node will forward a message only if the encoun-
tered node has quality higher than all seen so far by the message.
Delegation forwarding has been shown to reduce average cost by
a factor of O(√N ) [8]. We augment the delegation scheme by
including a simple replication-count. We refer to this number as
delegation number ( dm) of the message. The delegation number
is incremented in the message, it is then replicated and forwarded.
A formal statement of the augmented delegation forwarding is
given in Algorithm 1. Consider a node holding a message with a
high delegation number. This would mean : (i) this node is one
of the best candidate nodes to forward the message to its intended
destination, and hence is close to the destination, else it would not
be holding the message; (ii) even if the node itself is not a good
candidate to carry the message to the destination, a high number
signiﬁes that the message has been passed to candidates that are
good candidate nodes to carry the message. Likewise consider a
message with a low delegation number: the message has not been
replicated enough because the message is relatively young.

An example is given in Fig. 1. In this example, consider node
A which has two messages in its buffer (
2), both with
d1, d2 = 1. Node A encounters node B which is turns out to be
1. d1 is increased, the message is
a better candidate for message
then replicated and forwarded to node B. Node A has another en-
1 again. d1 is therefore
counter say, with node C and forwards

M

M

M

1,

M

Figure 1: Delegation Tree for node A

1 in node A tells us that

3, while d2, which has not been forwarded, remains 1. Clearly, the
high delegation number for
1 has
been forwarded to nodes which are good or better candidates to
carry the message. Likewise the high delegation number for
1
M
in node C tells us that node C belongs to the set of good candi-
date nodes to carry the message. The low delegation number on
2 signiﬁes that it has not been replicated enough, because it is

M

M

M
relatively new in the network.

We formulate the two prioritization schemes and study them em-
pirically using real encounter traces. The details are given in the
next section.

4. EVALUATION

In this section we evaluate various message drop and transmis-

sion schemes using real encounter traces.

4.1 Data Details

In order to evaluate various schemes in realistic settings, we rely
on real encounter traces collected in conference settings. These
data sets comprise of contact traces between short-range Bluetooth
enabled devices (iMotes [3]) carried by individuals in conference
environments, speciﬁcally Infocom 2006 and Conext 2006. More
details about the devices and the datasets, including synchroniza-
tion issues can be found in [14]. We isolated two 3-hour periods
Tuesday, 9AM-12PM from both the data sets for our study. We se-
lected the 3-hour periods such that the total contact rate of nodes is
fairly stable. In addition, most participants are present in the ﬁrst
day of the conference. These are the same data sets used in [7], and
more details can be found in that paper and the references therein.
We present results from one dataset (Infocom 2006, 9AM-12PM)
due to space constraints, however we note that our results are simi-
lar across both data sets.

4.2 Experiments

As mentioned earlier, we study message dropping and message

transmission schemes independently of each other.

In order to capture a diverse set of conditions, we choose a
stateless algorithm epidemic [18], a destination agnostic algorithm
(“frequency” [8]) and a destination based algorithm (“destination
frequency” [8]) as the underlying forwarding algorithms. While
epidemic algorithm relies on always forwarding messages on every
contact, frequency relies on using contact rates of nodes to make
forwarding decisions. Destination frequency uses contact rate with
the destination to make decisions. Therefore, the frequency al-
gorithm will operate as follows. A node upon an encounter with

0
 
0

1

0.8

0.6

0.4

0.2

1

0.8

0.6

0.4

0.2

 
e
t
a
R
 
s
s
e
c
c
u
S

 
e
t
a
R
 
s
s
e
c
c
u
S

 

 

0
0

50

40

30

20

10

50

40

30

20

10

 
t
s
o
C

 
t
s
o
C

Epidemic

LIFO

FIFO

RND

D−LIFO

D−FIFO

D−RND

D−H

D−L

800

Epidemic

LIFO

FIFO

RND

D−LIFO

D−FIFO

D−RND

D−H

D−L

800

2000

1500

1000

500

 
)
s
(
y
a
l
e
D

0
0

2000

1500

1000

500

 
)
s
(
y
a
l
e
D

200

400

600

1000

200

400

600

800

1000

200

400

600

800

1000

Buffer Size
(a)

Buffer Size
(b)

Buffer Size
(c)

0
 
0

200

400

600

Buffer Size

1000

0
0

200

400

600

Buffer Size

800

1000

0
0

200

400

600

Buffer Size

800

1000

(d)

(e)

(f)

Figure 2: Message Dropping Schemes Info 06 9-12 (a,b,c) Destination Frequency (d,e,f) Frequency; (a,d) Success Rate, (b,e) Cost
and (c,f) Delay

another node, forwards messages only if the the encountered node
has a higher contact rate than itself. Destination frequency operates
similarly but the information used is contact rate with the destina-
tion instead.

The latter two have been shown to give good performance while
reducing cost in the network. Delegation schemes can be applied to
any generic metric which gives the likelihood of successful deliv-
ery of a message to its intended destination. We therefore also con-
sider delegation versions of frequency and destination frequency
for comparison. The delegation version of frequency would then
be: a node, upon an encounter, forwards messages if the encoun-
tered node has contact rate higher than the rate of all nodes seen so
far. A similar scheme can be designed with destination frequency.
Refer to [8] for more details.

We implemented a variety of forwarding algorithms in a trace-
driven simulator. For each trace and forwarding algorithm we
study, we generate a set of messages with sources and destinations
chosen uniformly at random, and generation times from a Poisson
process averaging one message per 4 seconds. All our results are
averaged over 10 simulation runs. Our metrics are success rate, av-
erage delay, and cost (as deﬁned in Section 3). Each simulation run
was therefore 3 hours long; to avoid end-effects, no messages were
generated in the last hour of each trace.
4.3 Message Dropping Policies

We limit and vary the size of buffers per node and choose to study
the following set of policies which span a spectrum of possible de-
sign choices. Ties are broken randomly. We make the assumption
that all messages are inserted in arrival order in a buffer. Given this,
we have:

FIFO: Upon a buffer overﬂow condition, node

i drops the old-

est message in the buffer.

N

LIFO: Upon a buffer overﬂow condition, drop the newest mes-

sage in the buffer.

Random: Upon a buffer overﬂow condition, drop a random
message from the buffer. This scheme is between the FIFO and
LIFO schemes mentioned above.

As mentioned in Section 3, these schemes are independent of the
forwarding algorithm. We consider these policies in conjunction
with our algorithms deﬁned earlier(Frequency, Destination Fre-
quency and their delegation versions). In addition, we also focus
on the two schemes we developed which exploit the information
provided to them by the forwarding algorithm.

High (H): Upon a buffer overﬂow, drop the message which has
the highest delegation number di = max∀ j (dj). This is analogous
to dropping the message which is closest to the destination as well
the message which has been forwarded many times.

Low (L) Upon a buffer overﬂow, drop the message which has the
smallest delegation number di = min∀ j(dj ). This is analogous
to dropping the message which is relatively young in the network
or the message which is farthest from the destination.

We vary the buffer size (100, 200, 300,400, 500 and 1000) mes-
sages on every node. We study drop policies independently of
bandwidth constraints, hence we assume unbounded contact du-
ration in these experiments.

The results are shown in Fig. 2. The plots show success rate, cost
and delay versus increasing buffer size. The top plot shows results
for destination frequency and the bottom set of plots correspond
to frequency. Figs.2 (a,d) show success rate versus buffer size. We
ﬁrst note that the all schemes perform similarly at high buffer sizes.
Presumably, epidemic forwarding which does not do well under the

2

4

6

8

10

500

1000

1500

2000

2500

3000

Epidemic
FIFO
LIFO
RND
D−FIFO
D−LIFO
D−RND
D−H
D−L

Epidemic
LIFO
FIFO
RND
D−LIFO
D−FIFO
D−RND
D−H
D−L

1

0.8

0.6

0.4

0.2

 
e
t
a
R
 
s
s
e
c
c
u
S

 

0
0

1

 

0
0

 
e
t
a
R
 
s
s
e
c
c
u
S

0.8

0.6

0.4

0.2

Cost 
(a)

Cost 
(c)

 

 

 
e
t
a
R
 
s
s
e
c
c
u
S

 
e
t
a
R
 
s
s
e
c
c
u
S

0
0

1

0.8

0.6

0.4

0.2

1

0.8

0.6

0.4

0.2

0
0

Delay (s)

(b)

Delay (s)

(d)

2

4

6

8

10

500

1000

1500

2000

2500

3000

Figure 3: Message Transmission Schemes Info 06 9-12 (a,b) Destination Frequency (c,d) Frequency; (a,c) Success Rate vs Cost, (b,d)
Success Rate vs Delay

presence of small buffers ( as has been reported before [15]), will
perform the best with higher buffer sizes. All delegation schemes
have a higher success rate than the non-delegation versions. This
is because delegation schemes have been shown to reduce overall
cost [8] in the network, so they utilize the scarce resources more
efﬁciently. Figs. 2 (b,e) show cost versus increasing buffer sizes.
Clearly the cost will increase as buffer sizes increase, but for all
algorithms (excluding once again, epidemic), large buffers do not
help in increasing the success rate. All the delegation schemes
achieve a very low cost; similar results have been reported before
[8]. Figs. 2 (c,f) show average delays as a function of message
buffer sizes. The average delays decrease for epidemic as buffer
sizes increase. However for the other schemes, the increase in
buffer sizes do not have a large effect on delay. Across different
schemes, however we note that while LIFO does the best, delega-
tion schemes have higher delays - though they are not prohibitively
high. The surprising result is that delegation-H policy(drop the
message with the highest delegation number) gives the best success
rate(with low cost) amongst all policies; for low buffer sizes it is an
improvement by a factor of almost 2 over LIFO. The delegation-H
policy is opposite of the policy employed by PREP and DLE in that
we drop the message which is closest to its respective destination.
As discussed before, dropping a message close to its destination
might increase delays. However we see from the results that the
delays do increase, but they are not prohibitive. Overall it would
appear that delegation schemes (H,RND) perform well under small
buffer sizes, and the policy of dropping the message which is clos-
est to its intended destination offers the best trade-off between per-
formance and cost.

4.4 Message Transmission Policies

In order to impose constraints on message transmission, we limit
the number of messages which a node can transmit during an en-
counter to at-most 1. We study transmission policies independent
of buffer constraints, therefore we assume inﬁnite buffers on nodes.
The schemes we study are the same as the ones dropping

schemes studied above. We brieﬂy describe the schemes:

FIFO: Upon a node encounter, node

i forwards the oldest mes-
sage in the buffer. Once the message has been forwarded it is rein-
serted to the back of the buffer.

N

LIFO: Upon a node encounter, forward the youngest message in
the buffer. We reinsert the message to the beginning of the buffer
after it has been forwarded.

Random: Forward a random packet from the buffer. This
scheme is between the FIFO and LIFO schemes mentioned above.
We consider these policies in conjunction with our algorithms
(Frequency, Destination Frequency and their delegation versions).
In addition we consider two additional schemes which make use of
the delegation number:

High (H): Upon a node encounter, forward the message which
has the highest delegation number di = max∀ j(dj). This is anal-
ogous to forwarding the message which is closest to the destination
as well the message which has been forwarded many times.

Low (L) Upon a node encounter, forward the message which
has the smallest delegation number di = min∀ j(dj ). This is
analogous to forwarding the message which is relatively young in
the network.

The results are presented in Fig. 3. The results for destination
frequency are presented on top, and the results for frequency are

presented below. Fig. 3 (a,c) display success rate versus cost. All
delegation based schemes perform similarly. Epidemic does not
perform well. We can therefore conclude that the epidemic al-
gorithm does not perform well under resource constraints, as also
observed before[15]. It would appear that dropping policies have
more impact than transmission policies.

4.5 Relation to Path Explosion

Taken as a whole, it would appear that the delegation schemes
perform much better under resource constraints. This is primarily
because they reduce overall cost in the network, thereby reducing
contention.

In addition, the augmented delegation schemes which use the
delegation number to prioritize message dropping/transmission
perform better as they use the extra information available to them.
In particular it would appear that the joint policy of dropping the
message with the highest delegation number performs better than
all schemes.

We interpret this result in light of the path explosion phe-
nomenon[7]. The basic observation is that there is an exponential
increase in the number of temporal paths between nodes in such
networks. This means that for a given node pair, ﬁnding the op-
timal delay path is hard, but ﬁnding one of the many sub-optimal
paths is a relatively easier task. This has implications on the per-
formance of forwarding algorithms. However the question is how
does one initiate a path explosion? While a comprehensive study
of the necessary and sufﬁcient conditions for the explosion to take
place is beyond the scope of this work (some factors have been
identiﬁed in [7]), we posit that prioritization of messages play an
important role for such a phenomenon to take hold.

By assigning higher priority to messages with a low delegation
number, we are in essence ensuring that such messages do not get
dropped, and have a chance to be replicated and propagate in the
network. Therefore by prioritizing transmission of messages with a
low delegation number, this increases the likelihood that explosion
takes place for those messages. The use of delegation schemes
further ensure that the message is replicated and forwarded to the
best nodes at the minimum cost.

Likewise, when a message with a high delegation number is
dropped, more likely than not path explosion for that message has
occurred; there are other replicas of the message which can poten-
tially be delivered to the intended destination. In addition, drop-
ping a message which is ostensibly close to its destination does not
increase the delay by a large factor, as due to the path explosion
phenomenon, many near-optimal (in terms of delay) paths to the
destination exist.

5. CONCLUSIONS

Efﬁcient forwarding in mobile opportunistic networks is a chal-
lenging problem. While a lot of work has been done in the design
of forwarding algorithms, little work has been done on studying
forwarding under the presence of short contact durations and ﬁ-
nite buffers. Under such circumstances, the problem of prioritizing
messages for transmission or dropping becomes important.

In this paper, we provide an empirical study of different schemes.
In order to facilitate our study, we design a scheme based on ear-
lier results of delegation forwarding. The main idea is to add a
replication-count to delegation schemes. We design a message pri-
oritization scheme based on this number.

We evaluate different schemes using real encounter traces. For
ease of analysis we study forwarding and dropping policies seper-

ately. This allows us to isolate the effects of the two policies. Since
our results show that forwarding policies have much less effect than
dropping policies, we are able to conclude that careful selection of
dropping policy is of primary importance. More speciﬁcally, we
ﬁnd that the scheme which assigns high priority to messages with
low delegation number and lower priority for high delegation num-
ber performs best in terms of balancing success rate, delay and cost.
We interpret this result in light of previous results related to path ex-
plosion phenomenon found in the same traces we use in this study.

6. ACKNOWLEDGMENTS

The authors would like to acknowledge John Byers, Augustin
Chaintreau and Nahur Fonseca for helpful discussions. The authors
would also like to thank the anonymous reviewers for constructive
criticism. This work was supported by NSF grants CCR-0325701
and ANI-0322990, and by funding from the HAGGLE FET project.

7. REFERENCES
[1] BALASUBRAMANIAN, A., LEVINE, B., AND

VENKATARAMANI, A. DTN Routing as a Resource
Allocation Problem. In ACM SIGCOMM ’07 (2007), ACM,
pp. 373–384.

[2] BURGESS, J., GALLAGHER, B., JENSEN, D., AND

LEVINE, B. N. MaxProp: Routing for Vehicle-Based
Disruption-Tolerant Networks. In Proc. IEEE INFOCOM
(April 2006).

[3] CHAINTREAU, A., HUI, P., CROWCROFT, J., DIOT, C.,
GASS, R., AND SCOTT, J. Impact of Human Mobility on
Opportunistic Forwarding Algorithms. IEEE Trans. on
Mobile Computing 6, 6 (2007), 606–620.

[4] DALY, E. M., AND HAAHR, M. Social network analysis for

routing in disconnected delay-tolerant MANETs. In ACM
MobiHoc ’07 (New York, NY, USA, 2007), ACM, pp. 32–40.
[5] DAVIS, J. A., FAGG, A. H., AND LEVINE, B. N. Wearable

computers as packet transport mechanisms in
highly-partitioned ad-hoc networks. In ISWC ’01
(Washington, DC, USA, 2001), IEEE Computer Society,
p. 141.

[6] DUBOIS-FERRIERE, H., GROSSGLAUSER, M., AND

VETTERLI, M. Age matters: efﬁcient route discovery in
mobile ad hoc networks using encounter ages. In ACM
MobiHoc ’03, pp. 257–266.

[7] ERRAMILLI, V., CHAINTREAU, A., CROVELLA, M., AND
DIOT, C. Diversity of forwarding paths in pocket switched
networks. In ACM/SIGCOMM IMC (Oct. 2007),
pp. 161–174.

[8] ERRAMILLI, V., CHAINTREAU, A., CROVELLA, M., AND

DIOT, C. Delegation forwarding. In ACM MobiHoc (May
2008).

[9] GROSSGLAUSER, M., AND VETTERLI, M. Locating mobile

nodes with ease: learning efﬁcient routes from encounter
histories alone. IEEE/ACM Trans. Netw. 14, 3 (2006),
457–469.

[10] JAIN, S., FALL, K., AND PATRA, R. Routing in a Delay
Tolerant Network. In ACM SIGCOMM ’04, pp. 145–158.
[11] JONES, E. P. C., LI, L., AND WARD, P. A. S. Practical
routing in delay-tolerant networks. In WDTN ’05 (2005),
pp. 237–243.

[12] LEGUAY, J., FRIEDMAN, T., AND CONAN, V. DTN routing

in a Mobility Pattern Space. In ACM WDTN ’05,
pp. 276–283.

[13] LINDGREN, A., DORIA, A., AND SCHELEN, O.

Probabilistic routing in intermittently connected networks.
SIGMOBILE Mob. Comput. Commun. Rev. 7, 3 (2003),
19–20.

[14] NORDSTROM, E., DIOT, C., GASS, R., AND

GUNNINGBERG, P. Experiences from measuring human
mobility using bluetooth inquiring devices. In MobiEval
2007: System Evaluation for Mobile Platforms (New York,
NY, USA, 2007), ACM Press.

[15] RAMANATHAN, R., HANSEN, R., BASU, P.,

ROSALES-HAIN, R., AND KRISHNAN, R. Prioritized
epidemic routing for opportunistic networks. In MobiOpp
’07 (New York, NY, USA, 2007), ACM, pp. 62–66.

[16] SARAFIJANOVIC-DJUKIC, N., PIDRKOWSKI, M., AND
GROSSGLAUSER, M. Island hopping: Efﬁcient mobility
assisted forwarding in partitioned networks. In IEEE SECON
’06 (Reston, VA, USA).

[17] SPYROPOULOS, T., PSOUNIS, K., AND RAGHAVENDRA,

C. Efﬁcient routing in intermittently connected mobile
networks: The multi copy case. IEEE/ACM Trans. Netw. 2, 2
(2008), 477–486.

[18] VAHDAT, A., AND BECKER, D. Epidemic Routing for

Partially Connected Ad Hoc Networks. Tech. Rep.
CS-200006, Duke University, 2000.

