A framework for adaptive opportunistic forwarding in wireless networks 

 

Niki Gazoni+, Vangelis Angelakis+, Raffaele Bruno*, Marco Conti*, Vasilios Siris+ 

+ ICS-FORTH, N. Plastira 100, Vassilika Vouton, 70013 Heraklion, Greece 

* IIT-CNR, Via G. Moruzzi 1 – 56124 Pisa, Italy 

  {angelak, ngazoni, vsiris}@ics.forth.gr, {raffaele.bruno, marco.conti}@iit.cnr.it  

 

 

Abstract 

We present our initial work on the design and of an op-
portunistic forwarding scheme for a wireless network. The 
main focus in our work is to take advantage of the interplay 
of  the lower  layer parameters  and thus decide the design 
aspects of the forwarding decisions for an adaptive proba-
bilistic opportunistic forwarding scheme. We have already 
shown that our opportunistic scheme can outperform single 
path  routing  for  moderate  channel  error  values,  we  have 
also  identified  a  tradeoff  between  differentiating  the  for-
warder's  back-off  value  to  avoid  collisions  and  reducing 
delay. 

 

1. Introduction 

 
In  opportunistic  routing  multiple  paths  from  a  source  to-
wards  a  destination  are  used  to  convey  the  data  packets. 
These  paths  are  used  to  simultaneously  carry  the  same 
packet. In  wireless  networks  where the  medium  is broad-
cast the notion of paths becomes loose. Transmitters typi-
cally  broadcast  their  packets  with  sufficient  control  infor-
mation so that receiver nodes can decide whether or not re-
broadcasting the received packets will help in reaching the 
destination.  
In the design of an opportunistic routing scheme, there are 
two key design decisions: (i) how the receiver of a packet 
will decide whether to forward or not and (ii) provided that 
a  receiver  decided  to  forward  a  packet,  when  is  the  most 
appropriate time to do so.  

In ExOR [1] forwarding is decided after the packet has 
been received by a subset of nodes, according to a forward-
ing list that is generated by the current transmitter. Nodes 
need  to  discover  and  agree  on  which  nodes  received  the 
packet, and only the node in that set that is “closest” to the 
destination forwards the packet. After collecting of a batch 
of packets, which is uniquely identified by a BatchID, the 
source broadcasts each packet in the batch, listing the for-
warding nodes in priority order, in the packet’s header. Due 
to  the  centralized  coordination  and  scheduling  that  is 
needed  between  forwarders  and  the  destination,  ExOR 
introduces  high  overhead  when  the  batch  of  packets  to 
transmit is small as in bursty and short-lived flows, or the 
number of candidate forwarders is large. 

 
978-1-4244-4439-7/09/$25.00 ©2009 IEEE 

SOAR [2] was proposed as an improvement to the Ex-
OR protocol in order to support multiple flows. In SOAR 
the candidate forwarders are constrained to be along or near 
the shortest path  from  source to destination.  A  significant 
difference  between  ExOR  and  SOAR  is  that  SOAR  per-
forms  the  routing  decision  process  on  a  per-packet  basis 
rather  than  on  an  entire  batch.  Finally,  in  SOAR  the  for-
warder  list  is  limited  to  5  relays.  Overall,  SOAR  incurs 
slightly  less  overhead  than  ExOR  and  restricts  flows  as 
close to the shortest path from source to destination as poss-
ible. To make the protocol reliable to ACK losses, selective 
ACKs are used. However, the increase in throughput that is 
observed when SOAR is in use is partly due to its opportu-
nistic scheme and partly due to a complex acknowledgment 
scheme employed, making unclear to what extent this pro-
tocol contributes to opportunistic routing. 

The  Parametric  probabilistic  sensor  network  routing 
scheme of [3] proposes two protocols that forward a single 
packet,  with  varying retransmission probability,  through  a 
network  of  sensor  nodes,  focusing  on  simplicity  and  ro-
bustness  to  errors  in  distance  estimation.  A  “Destination 
Attractor” assigns a higher retransmission probability to the 
packet as it moves closer to the destination and reduces it as 
the  packet  moves  away  from  the  destination..  The  “Di-
rected  Transmission”  scheme 
improves  probabilistic 
routing’s  performance  by  assigning  exponentially  higher 
forwarding  probabilities  to  nodes  that  are  on  the  shortest 
path from the source to the destination and decreasing it as 
the packet strays from the shortest path. This leads to lower 
resource  consumption  than  Destination  Attractor  and  can 
be tuned to resemble shortest path routing, when the misin-
formation is low enough. 

In  [4],  it  is  emphasized  that  the  throughput  gain 
achieved  by  opportunistic  routing  protocols  is  not  clearly 
attributed to the opportunistic selection of next hops but is 
also partly due to elaborate acknowledgement or schedul-
ing  features  that  can  well  be  implemented  on  traditional 
routing. Moreover, the authors point out the risk of dupli-
cate  forwarding  that  is  experienced  in  opportunistic 
schemes,  in  cases  when  the  multiple  forwarders  are  una-
ware  of  others’  transmissions,  leading  to  collisions  and 
potentially more retransmissions than single path routing. It 
is also demonstrated that use of ETX metric by an opportu-
nistic  scheme  can  result  to  low  performance  when  node 

coordination is imperfect. Finally, it is observed that in low 
network density there are no significant improvements by 
using  opportunistic  routing.  The  theme  of  this  work  is  to 
identify points of failure in previously presented protocols. 

Overall,  previously  suggested  opportunistic  protocols 
can be characterized by lack of concrete understanding of 
the  way  key  wireless  networking  primitives  and  design 
decisions affect the performance of an opportunistic routing 
scheme.  In  order  to  study  how  these  primitives  affect  an 
opportunistic  routing  scheme  and  to  facilitate  our  own 
scheme  design  we  have developed a  framework  in  which 
using  simulation  together  with  mathematical  analysis  we 
will be provided with this required insight, while designing 
a new adaptive opportunistic forwarding scheme. 
 
2. System model 

 

The system model employed thus far in this study is that of 
a TDM based communication with the assumptions of  

i.  Fixed slot size 
ii.  Full topology knowledge by all nodes 
iii.  Local decision making -no central controllers exist 

For simulation and analysis simplicity we have also made 
the  simplifying  assumption  of  a  geometric  propagation 
model:  A  transmission  from  a  source  is  received  by  all 
nodes  within  a  “communication  radius”,  with  a  given  re-
ception probability for each potential receiver. 

In this design a node key decisions are the forwarding 
probability assigned to a received packet and the back-off 
method employed.  

The forwarding probability initially investigated is a li-
near one based on Euclidian distance (Figure 1) as a metric. 
Note that this can be replaced by any other path cost metric, 
as long as it has a known minimum and maximum, or such 
bounds can be tightly estimated.  

Formally, this forwarding probability p is expressed by:  

=

p

1
−

d

min

d

max

[
(
Pd

⋅

−

P
min

max

)

+

P

min

⋅

d

min

−

P
max

⋅

d

max

]

(1) 

Where d is the distance between the candidate forward-
er  and  the  destination,  Pmax  is  the  forwarding  probability 
associated  to  the  nearest  possible  candidate  (i.e.,  for  d  = 
dmin),  and  Pmin  is  the  probability  associated  to  the  furthest 
possible candidate (i.e., for d = dmax). It is straightforward to 
observe that 0 ≤ p ≤ 1 for dmin ≤ d ≤ dmax if and only if 0 ≤ 
Pmax ≤ 1 and 0 ≤ Pmin ≤ 1. Once a forwarding probability is 
assigned to a packet a random number of back-off timeslots 
is calculated with uniform probability in [1, Winmax] where 
Winmax is a maximum number of timeslots the packet may 
wait at a node before being transmitted. The Winmax value 
can either be a fixed number of maximum backoff slots, or 
may  depend  again  on  the  probability  assigned,  with  the 
rationale to help packets on “better” forwarding candidates 
to be transmitted earlier and thus reduce delays. 

Initial  simulations  conducted  with  the  pair  (Pmax  =  1, 
Pmin  =  0)  indicated  that  a  linear  forwarding  probability  as 

the  one  expressed  in  formula (1)  results  in  too  few  nodes 
having sufficiently high forwarding probability. As a con-
sequence, we measured high delays.  

To deal with this problem, we modified the initial for-
warding  probability  function  to  increase  the  number  of 
potential forwarding candidates having probability equal to 
one. This was achieved by using a piecewise function com-
posed of  flat region  saturated  to probability of one, and a 
linear region. Formally, this can be written as follows: 
(2) 

[
(
Pd

,1min

P
max

P
min

P
min

max

max

=

−

−

+

min

d

p

d

)

⋅

⋅

⋅

⎧
⎨
⎩

1
−

d

min

d

max

⎫
]
⎬
⎭

The  piecewise  function  is  produced  by  introducing 
Pmax>1, hence introducing more than one certain forward-
ers. Using simple algebraic manipulations, it is straightfor-
ward to derive from formula (2) that p = 1 for d'≤ d ≤ dmax, 
where   

=

d

'

d
min
P
max

−
−

d
max
P
min

(

⋅

P
max

⋅

d

max

−

P
min

⋅

d

min

 

+

)1

(3) 

Thus, adapting the Pmax value we change the shape of 
the  forwarding  probability  function.  Intuitively,  we  may 
introduce more certain forwarders using a higher Pmax. 

 

Figure 1: Linear forwarding probability. 

 

Furthermore,  we  compared  the  performance  of  the  li-
near probability function to that of a step-wise probability 
function in the presence of metric misestimation, which can 
occur  due  to  the  distributed  nature  of  the  scheme.  In  the 
step-wise probability function, nodes are either assigned a 
forwarding probability equal to 1 or a probability equal to 
zero, that is they make a hard decision on packet forward-
ing. 
 

3. Initial Results 

 

The forwarding probability function slope defines how 
great the difference in the probability to forward the packet 
will be between the neighbors of the node currently holding 
the packet. Specifically, the steeper the slope is, the neigh-
bors closer to the destination will be given higher probabili-
ty values. To ensure the packet's progressing to the destina-
tion,  at  least  one  neighbor  with  forwarding  probability 
equal to 1 is needed; ideally this would be the neighbor on 
the shortest path to destination. As the PER increases, more 
certain forwarders are required, to make up for failed pack-
et receptions, but the need arises to relax potential collisions 

 

 

among  them  by  differentiating  their  back-off  timers.  Fur-
thermore,  for  a  given  PER  value,  having  more  than  one 
certain forwarders yields lower delay (see fig.2). 

the back-off window interval increases, which renders fixed 
back-off values larger than 2 inefficient. It can be observed 
that the lowest delay is measured for a back-off window of 
1,  at  the  cost  of  many  unnecessary  transmissions.  As  we 
further increase the range of the back-off window the flood-
ing is limited to an area around the shortest path, while the 
delay slightly increases. 
 

 

Figure 2: Effect of the slope of the forwarding probability –using a piecewise probability 

function with more than 1 certain forwarders. 

 
Using  a  step-wise  function  consumes  fewer  resources 
than the linear function and it is also less affected by metric 
miscalculation. This is justified by the fact that even when 
inaccurate  estimations  are  made  few  (if  any)  nodes  will 
miscalculate their metric and fall below or go above thre-
shold,  whereas  the  majority  of  nodes  will  get  the  same 
probability as that they would get if there was no miscalcu-
lation.  To  further  understand  the  impact  miscalculations 
have on our scheme, we measured the delay over the same 
10 hop path for both the linear and the step-wise probability 
function, for various packet error rate values. Results (fig. 
3) demonstrate that metric miscalculation, when expressed 
as  noise  to  the  actual  metric  value,  does  not  affect  delay 
performance significantly for neither the linear nor the step-
wise probability  function.  Metric  noise  was  modeled  as  a 
randomly selected value from a uniform distribution, with a 
mean equal to the real value of the metric. The width of the 
metric  values  interval  is  equal  to  a  percentage  of  the  real 
value of the metric. 

 

Figure 3: Metric noise has practically no affect on the decision, whether the forwarding 

(a) 

(b) 

function is  (a) linear, or  (b) step. 

 
We  employed  two  approaches  to  back-off  window 
schemes.  Using  a  fixed  back-off  window,  all  neighbors 
would randomly select their back-off values from the same 
range  of  idle  slots.  Differentiating,  each  node  randomly 
selects  its  back-off  values  from  a  different  range  of  idle 
slots. Specifically, the back-off window of a node will be 
randomly chosen from a set of fewer idle slots, the larger its 
forwarding  probability  is.  There  is  a  steeper  increase  in 
delay for the fixed back-off window scheme as the width of 

(a) 

 

 

(b) 

Figure 4: Backoff effect on Delay: (a) Fixed, (b) Variable [1..N] scheme 

 

 
3. Early conclusions 

 

 

 

 

We have already shown that our opportunistic scheme can 
outperform single path routing for error values larger than 
20%-25% (fig. 2), for the optimized slope of the forward-
ing probability function, with a restrained use of resources. 
Furthermore,  we  have  shown  that  the  optimal  manner  of 
adapting  to  increasing  error  is  to  increase  the  number  of 
forwarders by increasing the slope of the forwarding prob-
ability  function.  In  particular,  the  number  of  certain  for-
warders has the most impact on performance and they need 
to be increased with respect to error conditions.  

To  reduce  resource  consumption  –in  terms  of  packet 
transmissions, utilizing a step-wise function is a sound ap-
proach,  which  proved  robust  to  metric  miscalculations.  
Finally,  there  is  a  tradeoff  between  differentiating  each 
forwarder's back-off value to reduce resource consumption 
and reducing delay. Our results show that a variable back-
off scheme that gives priority (smaller back-off  windows) 
to best forwarders according to their forwarding probability 
is preferable to a fixed back-off window for all forwarders. 
 
References 
 
[1]  S. Biswas  and  R. Morris,  "Exor:  opportunistic  multi-hop 
routing for wireless networks," in SIGCOMM '05. 

 [2] E. Rozner, J. Seshadri, Y. Mehta, and L. Qiu, “Simple Oppor-
tunistic. Routing Protocol for Wireless Mesh Networks” in Proc. 
WiMesh’06. 

[3] C. L. Barrett, S. J. Eidenbenz, L. Kroc, M. Marathe, and J. P. 
Smith.  “Parametric  Probabilistic  Sensor  Network  Routing”,  in 
Proc. of ACM’07. 

[4] Zhong, Z. and Nelakuditi, S., “On the efficacy of opportunistic 
routing.” in: Proc. of 4th IEEE International Conference on Sensor 
and Ad Hoc Communications & Networks, SECON ‘07. 

