Taming the Inaccessible Web

Simon Harper, Sean Bechhofer, and Darren Lunn

Information Management Group

School of Computer Science, University of Manchester

Manchester UK

[simon.harper | sean.bechhofer]@manchester.ac.uk

ABSTRACT
Visually impaired users are hindered in their efforts to access the
largest repository of electronic information in the world, namely
the World Wide Web (Web). A visually impaired users information
and presentation requirements are different from a sighted user in
that they are highly egocentric and non-visual. These requirements
can become problems in that the Web is visually centric with re-
gard to presentation and information order / layout, this can (and
does) hinder users who need presentation-agnostic access to in-
formation. Finding semantic information already encoded directly
into documents can help to alleviate these problems and support
users who wish to understand the content as opposed to the pre-
sentation and order of the information. If this is to happen in the
“real world”, however, authors must incur no “design overhead”
when creating documents. Our solution, Structural-Semantics for
Accessibility and Device Indepen- dence (SADIe) involves build-
ing ontologies of Cascading Sytle-Sheets (CSS) and using those
ontologies to transform Web pages. In this way we ﬁnd that we can
indeed ‘tame’ inaccessible Web pages.

Categories and Subject Descriptors
H.1.2 [Models and Principles]: User/Machine Systems—Human
factors / Human information processing;
I.7.2 [Computing Methodologies]: Document Preparation—Hy-
pertext / hypermedia

General Terms
Human Factors, Design

Keywords
Document Engineering, Tools, Web, Visual Impairment

1. BLINDNESS = INACCESSABILITY

Access to, and movement around, complex hypermedia environ-
ments, of which the Web is the most obvious example, has long
been considered an important and major issue in the Web design

Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGDOC’06, October 18–20, 2006, Myrtle Beach, South Carolina, USA.
Copyright 2006 ACM 1-59593-523-1/06/0010 ...$5.00.

and usability ﬁeld [6, 9]. The commonly used slang phrase ‘surﬁng
the Web’ implies rapid and free access, pointing to its importance
among designers and users alike. It has also been long established
[4, 1] that this potentially complex and difﬁcult access is further
complicated, and becomes neither rapid nor free, if the user is vi-
sually impaired1. Blindness then, often equals inaccessibility, but
it does not have to.
Annotation of Web pages provides a mechanism to enhance visu-
ally impaired peoples’ access to information on Web-pages through
an encoding of the meaning of that information [13]. Annotations
can then be consumed by tools that restructure or reorganise pages
in order to pull out salient information.
However, when working in the real world, there are issues we must
face. Empirical evidence suggests that authors and designers will
not create separate semantic mark up to sit with standard Exten-
sible Hypertext Markup Language (XHTML) because they see it
as an unnecessary overhead [20]. In addition, designers will not
compromise their desire to produce “beautiful and effective” Web
sites. In our conversations with designers the resounding message
we receive is:

“If there is any kind of overhead above the normal
concept creation then we are less likely to implement
it. If our design is compromised in any way we will
not implement. We create beautiful and effective sites,
we’re not information architects.”

Our proposed approach, known as SADIe is targeted at overcom-
ing these problems without the need to annotate all Web pages (as
is currently the case). It is evident that the semantics of the Web
document are implicitly encoded as terms within the Style-sheet;
and are therefore likewise found within XHTML meta tags and as-
‘class’
sociated with the data found in pages through the use of
and ‘id’ attributes common to most XHTML elements. An upper
level ontology provides basic notions that encapsulate the role of
document elements along with properties that can be used to de-
scribe them. This upper level ontology is deﬁned in isolation from
a particular site, providing an abstraction over the document struc-
ture. For a particular CSS stylesheet, we provide an extension of
the ontology giving the particular characteristics of the elements
appearing in that stylesheet. We can consider this extension to be
an annotation of the stylesheet elements. In this way, CSS presen-
tation will be unaffected but semantics will be an explicit part of the
data. We can then provide tools that consume this information, ma-
nipulating the documents and providing appropriate presentations
to the user.

1Here used as a general term encompassing the WHO deﬁnition of
both profoundly blind and partially sighted individuals [21].

tural context. This information must be applied to each page manu-
ally before the transcoding can begin. Of course some systems exist
which attempt to transcode pages based on annotation being auto-
matically included in pages (normally from database driven sites
with templates for page creation) [5]; but these often rely on be-
spoke technologies and solutions only appropriate for one site.
Semantic Transcoding: Semantic transcoding aims to overcome
some of the problems of using bespoke systems and technology.
Using this approach, the semantics provide the machine understand-
ability and knowledge reasoning and the transcoding provides the
transformation technique. Current systems are at present limited to
page analysis, where a page built after a set template can be anal-
ysed and transformed by semantic or semantic like technologies.
In Summary: Each of these types of transformations are fraught
with problems with regard to the acceptability of the resulting gen-
eration. This is especially the case when sighted users as well
as visually impaired users wish to use the same page. Automatic
transcoding based on removing parts of the page results in too much
information loss and manual transcoding is near impossible when
applied to dynamic Websites. Most systems use their own bespoke
proxy-servers or client side interfaces and these systems require a
greater setup cost in-terms of user time. Finally, some systems re-
quire bespoke automatic annotation by a content generator and so
are not useable by every user and all systems.
Transcoding systems often lean towards solving the problems of
one user group (the problem that got us here in the ﬁrst place)
and so destroy the content / structure / context for other non-target
groups. This directly challenges the nature of the World Wide Web
and the philosophy of Hypermedia Systems in general.

4. SADIE

Structural semantics (in this case the meaning of structural com-
ponents on a Web page) are key to the assumptions and research
theories encompassed in the SADIe project. These structures are
however, often hidden within the design of Web pages. In effect
we are observing interactions between the designer and the design
brief as expressed within the implicit structural annotations of the
XHTML and CSS of the Web document. These annotations often
show us how, and what, the designer was thinking at design time,
but even in the worst case where the annotations seem to make no
sense, the structural segmentation present in the designers mind can
still be derived. An overview of the SADIe system can be seen in
Figure 1. The CSS (Fig 1 at 1) is used to create concepts in the on-
tology (Fig 1 at 3). When the pages (Fig 1 at 2) that reference the
CSS are requested by the Firefox browser, with the SADIe Firefox
extension installed (Fig 1 at 4), the ontology is likewise requested
and the concepts classiﬁed (Fig 1 at 5), which produces the ma-
chine understandable information we require. The SADIe Firefox
extension then uses this information to enable actions to be per-
formed on the Web page which alter the presentation (and in some
cases the structure) of the page (Fig 1 at 6).

4.1 Transcoding Based on CSS Annotation

Recent moves towards a separation of presentation, metadata and
information, such as CSS, have helped to alleviate some of the
problems of accesses to complicated visual information by visually
impaired users, but there are still many issues to be addressed. For
example, consider the ‘Stagecoach Bus’ Website (see Fig. 2). This
site is a model of the standard kind of Website that a user may en-
counter on a regular basis. It uses standards and implements a clear
separation of content and presentation, resulting in some visually
attractive Web pages. The site remains relatively inaccessible to
visually impaired people, however, as the information is rendered

Figure 1: The SADIe System Architecture Overview

2. SEMANTIC WEB 101

The Semantic Web vision, as articulated by Tim Berners-Lee [3],
is of a Web in which resources are accessible not only to humans,
but also to automated processes. The automation of tasks depends
upon elevating the status of the Web from machine-readable to
something we might call machine-understandable. The key idea
is to have data on the Web deﬁned and linked in such a way that
its meaning is explicitly interpretable by software processes rather
than just being implicitly interpretable by humans [8, 17].
To realise this vision, it will be necessary to annotate Web resources
with metadata (i.e., data describing their content / functionality).
Such annotations and metadata will, however, be of limited value
to automated processes unless they share a common understand-
ing as to their meaning. This sharing of meaning will be achieved
partly through the use of ontologies. An ontology, deﬁned using the
new W3C language OWL [16], is a collection of shared terms that
can be communicated across both people and applications [10]. A
reasoning engine can then make inferences about the relationships
between items within an ontology and support queries over collec-
tions of items [2].

3. MAKING BAD WEB PAGES GOOD

Many solutions exist which attempt to make good Web pages out
of bad ones. These approaches include guidelines, automated val-
idation, and best practice, however, these rely on designers build-
ing new Web pages and being concerned enough about usability to
follow them. Problems still exist with badly built and old pages
and so solutions which aim to change bad content to good content
have been developed. These solutions are known collectively as
‘transcoding’.
Transcoding: Simply, transcoding is a technology used to adapt
Web content so that it can be viewed on any of the increasingly di-
verse devices found on today’s market. Transcoding in this context
normally involves: syntactic changes [14] or semantic rearrange-
ments and fragmentation [18, 23], however, both normally rely on
an annotation of the target Web page [7].
Annotation: The goal of annotations [22] for Web content transcod-
ing is to provide better support either for audio rendering, and thus
for visually impaired users, or for visual rendering on small screen
devices. The problem of rendering Web pages in audio has some
similarities to the problem of displaying Web pages on small-screen
devices. However, annotation is expensive in user time because
each page must be annotated with information regarding its struc-

Figure 2: Stagecoach Bus Website Before Transformation (http://www.stagecoachbus.com)

in the way deﬁned by the designer and not in the order required by
the user.
Visually impaired users interact with these systems in a ‘serial’ (au-
dio) manner as opposed to a ‘parallel’ (visual) manner. Content is
read from top left to bottom right, there is no scanning and progress
through information is slow. Given this interaction paradigm we
can see that visually impaired users are still at a disadvantage be-
cause they have no idea which items are menus, what the page lay-
out is, what the extent is, and where the focus of the information
is. In effect, the implicit meaning contained in the visual presen-
tation is lost and any possibility of enhanced meaning is also not
available. Even when CSS concepts do look as though they have a
meaning with regard to the information there is no way of relating
this due to the lack of machine interpretable semantics. Allowing
these semantics to emerge enables us to use them for sectioning
Web pages into more appropriate combinations for use by visually
impaired people.

4.2 SADIe in Action

SADIe is designed to manipulate the Document Object Model
(DOM) of any XHTML document based on a knowledge of the
CSS captured within the ontology.
In our current prototype, re-
quests and operations are pre-conﬁgured and ‘anchored’ to the but-
tons on the toolbar. Basic functionalities include:

De-Fluff Remove any unnecessary content from the document.
Visually impaired users have problems navigating structures
which are, really, ‘visual candy’ such as: banners, blank im-
ages that provide visual spacing, and advertisements. Re-

<div id="topnav">

<IMG SRC="/images/sc/topnav-left.gif"... >
<IMG SRC="/images/sc/topnav-right.gif"... >
<div id="mainnav">

<a href="index.html" class="highlight">Home</a>
<a href="aboutus.html">About Us</a>
<a href="Timetable.html">Timetables</a>
...
...

</div>

</div>

Figure 4: Stagecoach Menu XHTML Items Implicitly Coded

#topnav{

position:absolute;
top:100px;
width:760px;

}

Figure 5: Stagecoach Menu CSS Items Implicitly Coded

moving, these has been shown to increase reading speed and
cognition [15, 24].

Toggle Menu Toggle menus on and off to remove the need for
skip links. Menus often occur part-way through XHTML
document structures; the visual rendering of the CSS is then
used to anchor them to a deﬁned visual location. As visu-
ally impaired users do not access this rendering menus are
often obfuscated. ‘Toggling Menus’ has the effect of group-
ing all menus and moves them to the top, to allow navigation,
or moves them to the bottom to allow cognition of the con-
tent [19, 12].

Figure 3: Stagecoach Bus Website After Transformation

Re-Order Bring important document items to the top. The or-
der and groups required for the visual presentation of in-
formation is often different from the order in which they
would logically occur in the XHTML document. By suggest-
ing a priority for each element, within the ontology, we can
group and move elements into more appropriate positions at
a ‘document–level’ in the XHTML structure [11].

When an operation is selected, an appropriate request is sent to the
Ontology Service. In de-ﬂufﬁng, for example, all items that are re-
movable are requested. The Service complies and SADIe parses
the DOM looking for removable components and discarding them.
Remember, the important part here is that this is the case for all
pages that refer to the sites CSS. In the case of the ‘Google Blogger’
site this means one ontology services 980,000 (circa June 2005)
sites containing millions of pages.
Consider our current example, the ‘StagecoachBus’ Website, which
is visually attractive but at a cost of complexity (see Fig. 2). Once
the page was been passed through SADIe and the Deﬂuf and Re-
order check boxes set the page is transformed into a less visually
appealing version but a far more accessible version while still keep-
ing all of the elements that the designer decided were important (see
Fig. 3). The document was also reordered into a more appropriate
sequence for serial access of the type required, not just by visually
impaired users but, by users with small screened and mobile de-
vices too.
The real driver for SADIe is its linkage from XHTML document
through to ontology. Consider ﬁgure 4 which shows XHTML culled
from the StagecoachBus Website, in particularly notice the div id
called topnav. This CSS element (see Fig. 5) encloses the sites

StagecoachBus (cid:1) (cid:2)
container (cid:1) StagecoachBus

topnav (cid:1) container
topnav (cid:1) ∃ hasElementType Menu

Figure 6: Stagecoach Menu Items Explicitly Coded within the
Ontology

main menu items and was therefore included in the sites ontology
(see Fig. 6). Now the menu can be switched on and off using the
SADIe Toggle check-box (see Fig. 7). This is important because
for a site that has been encountered a number of times the menu can
prove to be an obstacle taking up valuable screen real estate (in the
case of a mobile device, say) and increasing the time the page takes
to be spoken (when using technology for visually impaired users).
We can see that this approach is both simple and powerful. This
is because we use the power of new semantic technology to enable
real results for visually impaired users.

4.3 Testing and Enhancement

Third party research, most notably at IBM Tokyo by Asakawa &
Takagi and, separately, at IBM New York by Hanson has long sug-
gested that users ﬁnd the removal of obsolete information (SADIe de-
ﬂufﬁng) and reordering of important information to be useful. Our
testing therefore focused on our ability to apply these techniques
consistently over different types of sites. We chose 10 sites at ran-
dom and tested 10 pages from each, also chosen at random. Hap-
pily, SADIe performed as expected and deﬂuffed, reordered, tog-

Figure 7: Stagecoach Bus Website After Transformation with the Menu Toggled ON

gled the menu, and combinations thereof, all the sites and pages.
However, two problems do still exist, ﬁrstly there is no frame sup-
port for SADIe when traversing the DOM; ﬁxing this really just
requires some simple technical adjustments in the DOM parser.
Secondly, if tables have been used for layout, or there is scant use
of CSS without a clear separation between information and pre-
sentation, then the transcoding does not give us a clean transcod-
ing result; to address this issue we will need to add some simple
heuristics for dealing with broken pages. However, because we will
already have semi-complete machine understandable structural in-
formation our heuristic formulation should be much easier.

4.4 Additional Beneﬁts

While we have focused on the beneﬁts SADIe offers to visu-
ally impaired users, there are additional beneﬁts for many different
types of users when structural semantics become explicit. Consider
the mobile device user, who needs full access to a page but not in
the same visual form as the designers vision. In this case, sighted
users are ‘handicapped’ by technology as opposed to physiology
and therefore can beneﬁt from SADIe technology.
By knowing the semantics of the structure of pages mobile devices
can more effectively transcode pages. For instance in our Stage-
coach Bus study the menu structures could be included within the
interface of the browser itself, thereby removing them from the
screen real-estate. Alternately they could be transcoded into drop-
down menus or included as a separate page. Indeed when the se-
mantics of the structure are known, applying common transcoding
techniques, like fragmenting the page into individual logically co-
hesive chunks, becomes much easier. While we have initially im-
plemented 3 transforms more are being added, along the lines men-

tioned above, to support device independence, multi-modal access,
small screened devices and the mobile Web.

5. CONCLUSIONS

This paper describes work to enable structural semantic infor-
mation to be freely accessible by all users and devices. Only by
knowing the meaning of the structural information that is being
encountered can users perform their own manipulations on that in-
formation. Our approach is minimal in the overhead presented to
the site designer. No constraints are made on the ways in which
the layout and presentation of the site can be produced. Rather we
make use of the fact that CSS elements are identiﬁed in the doc-
ument – in a large number of cases, these elements do, in fact,
correspond to ‘meaningful’ units of information. We propose that
using implicit structural semantic information from the XHTML is
a powerful way to assist users in accessing Web pages while not
increasing or compromising the creation activity of authors and de-
signers. We believe this work represents a signiﬁcant contribution
to Web accessibility, interoperability, and mobile information ser-
vices.

6. REFERENCES
[1] C. Asakawa and C. Lewis. Home page reader: IBM’s talking

web browser. In Closing the Gap Conference Proceedings,
1998.

[2] S. Bechhofer, I. Horrocks, and D. Turi. Implementing the

Instance Store. Computer Science preprint CSPP-29,
University of Manchester, August 2004.

[3] T. Berners-Lee. Weaving the Web. Orion Business Books,

[14] M. Hori, G. Kondoh, and K. Ono. Annotation-based web

1999.

[4] M. Brambring. Mobility and orientation processes of the

blind. In D. H. Warren and E. R. Strelow, editors, Electronic
Spatial Sensing for the Blind, pages 493–508, USA, 1984.
Dordrecht, Lancaster, Nijhoff.

content transcoding. In Proceedings of the Nineth
International World Wide Web Conference, pages 197–211,
2000.

[15] M. Y. Ivory and R. Megraw. Evolution of web site design

patterns. ACM Trans. Inf. Syst., 23(4):463–497, 2005.

[5] O. Buyukkokten, H. G. Molina, A. Paepcke, and

[16] D. L. McGuinness and F. van Harmelen. OWL Web

T. Winograd. Power browser: Efﬁcient web browsing for
PDAs. In Proceedings of the SIGCHI conference on Human
factors in computing systems, pages 430–437. ACM Press,
2000.

[6] C. Chen. Structuring and visualising the www by generalised

similarity analysis. In Proceedings of the 8th ACM
Conference on Hypertext and Hypermedia, pages 177–186,
New York, USA, 1997. ACM Press.

[7] V. circa 2004. WebCleaner.

http://webcleaner.sourceforge.net.

[8] D. Fensel, K. Sycara, and J. Mylopoulos, editors.

Proceedings of the 2nd International Semantic Web
Conference, ISWC2003, volume 2870 of Lecture Notes in
Computer Science, Sanibel Island, Florida, October 2003.
Springer.

Ontology Language Overview. W3C Recommendation,
World Wide Web Consortium, 2004.
http://www.w3.org/TR/owl-features/.

[17] S. A. McIlraith, D. Plexousakis, and F. v. Harmelen, editors.

Proceedings of the 3rd International Semantic Web
Conference, ISWC2004, volume 3928 of Lecture Notes in
Computer Science, Hiroshima, Japan, November 2004.
Springer.

[18] W. Myers. BETSIE:BBC Education Text to Speech Internet

Enhancer. British Broadcasting Corporation (BBC)
Education. http://www.bbc.co.uk/education/betsie/.
[19] K. L. Norman. The Psychology of Menu Selection:

Designing Cognitive Control at the Human/Computer
Interface. Ablex Publishing Corporation, 1991. ISBN:
0-89391-553-X.

[9] R. Furuta. Hypertext paths and the www: Experiences with
walden’s paths. In Proceedings of the 8th ACM Conference
on Hypertext and Hypermedia, New York, USA, 1997. ACM
Press.

[20] B. Regan. Accessibility and design: a failure of the

imagination. In Proceedings of the international
cross-disciplinary workshop on Web accessibility, pages
29–37, 2004.

[10] T. R. Gruber. Towards principles for the design of ontologies

[21] RNIB. A short guide to blindness. Booklet, Feb 1996.

used for knowledge sharing. In Proc. of Int. Workshop on
Formal Ontology, 1993.

[11] V. L. Hanson. The user experience: designs and adaptations.

In Proceedings of the international cross-disciplinary
workshop on Web accessibility, pages 1–11, 2004.

[12] S. Harper, C. Goble, and R. Stevens. Traversing the Web:

Mobility Heuristics for Visually Impaired Surfers. In
T. Catarci, M. Mercella, J. Mylopoulos, and M. E. Orlowska,
editors, Proceedings of the Fourth International Conference
on Web Information Systems Engineering (WISE’03), pages
200–209, Los Alamitos California, USA, December (10–12)
2003. IEEE Computer Society.

[13] S. Harper, C. Goble, and R. Stevens. Augmenting the

Mobility of Profoundly Blind Web Travellers . In
D. Tudhope and D. C. et al, editors, New Review of
Hypermedia and Multimedia, volume 11 (1), pages 103–128.
Taylor and Francis, Switzerland, London, Washington, June
2005. ISSN - 1361-4568.

http://www.rnib.org.uk.

[22] H. Takagi and C. Asakawa. Transcoding proxy for nonvisual
web access. In Proceedings of the Fourth International ACM
Conference on Assistive Technologies, pages 164–171. ACM
Press, 2000.

[23] Textualize. Textualize; (Manual – supported on Website circa

2005). Codix.net;.
http://codix.net/solutions/products/textualise/index.html.
[24] S. Wood, R. Cox, and P. Cheng. Attention design: Eight

issues to consider. Computers in Human Behavior,
22(4):588–602, 2006.

