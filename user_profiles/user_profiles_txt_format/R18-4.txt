Hindawi Publishing Corporation
EURASIP Journal on Applied Signal Processing
Volume 2006, Article ID 63409, Pages 1–13
DOI 10.1155/ASP/2006/63409

Rate Control for H.264 with Two-Step Quantization Parameter
Determination but Single-Pass Encoding

Xiaokang Yang,1 Yongmin Tan,1 and Nam Ling2

1 Institute of Image Communication and Information Processing, Shanghai Jiao Tong University, Shanghai 200030, China
2 Department of Computer Engineering, Santa Clara University, Santa Clara, CA 95053-0566, USA

Received 1 August 2005; Revised 27 June 2006; Accepted 16 July 2006

We present an eﬃcient rate control strategy for H.264 in order to maximize the video quality by appropriately determining the
quantization parameter (QP) for each macroblock. To break the chicken-and-egg dilemma resulting from QP-dependent rate-
distortion optimization (RDO) in H.264, a preanalysis phase is conducted to gain the necessary source information, and then the
coarse QP is decided for rate-distortion (RD) estimation. After motion estimation, we further reﬁne the QP of each mode using
the obtained actual standard deviation of motion-compensated residues. In the encoding process, RDO only performs once for
each macroblock, thus one-pass, while QP determination is conducted twice. Therefore, the increase of computational complexity
is small compared to that of the JM 9.3 software. Experimental results indicate that our rate control scheme with two-step QP
determination but single-pass encoding not only eﬀectively improves the average PSNR but also controls the target bit rates well.

Copyright © 2006 Hindawi Publishing Corporation. All rights reserved.

1.

INTRODUCTION

H.264/MPEG-4 AVC is the latest international video cod-
ing standard developed by Joint Video Team (JVT) of ISO
Motion Picture Expert Group and ITU-T Video Coding
Expert Group [1–5]. As in other video standards such as
MPEG-2 [6] and H.263 [7, 8], rate control remains as an
open but important issue for H.264/AVC. A rate control
scheme that is able to maximize the video quality and at
the same time meets the rate constraints is much desired for
H.264/AVC.

In comparison with other video standards, there are sev-
eral challenges for rate control in H.264 [9–12], due to its
unique features. The ﬁrst one is the well-known chicken-
and-egg dilemma in the rate-distortion optimization (RDO)
process [10], which is brieﬂy described as follows. In H.264,
quantization-parameter- (QP-) dependant RDO technique
is adopted in the process of best prediction mode selection
[11, 13]. To perform RDO, QP should be decided ﬁrst. But
in order to perform rate control, QP can only be obtained
according to the coding complexity and number of target
bits that are calculated by motion-compensated residues af-
ter RDO mode decision. This imposes a big problem for
rate control in H.264. Secondly, due to more delicate pre-
diction modes adopted in H.264 than those in previous stan-
dards, the number of header bits ﬂuctuates greatly from Inter
16 × 16 to Inter 4 × 4 [11, 12]. Thus, a good overhead model

is necessary for accurate rate control. Thirdly, better mode
selection in H.264 often leads to small motion-compensated
residues [11]. As a result, a large number of macroblocks will
be quantized to zero.

Although several rate control algorithms have recently
been proposed to cope with these problems [9, 12, 14], the
proper method for rate control in H.264/AVC has not been
fully explored. A predictive rate control scheme [9] has been
adopted in H.264/AVC reference software JM 9.3 [15]. The
general idea of the rate control scheme is as follows: after
preencoding of the macroblock using the QP of previously
encoded macroblock, the block activity is measured by the
sum of absolute diﬀerences (SAD). Using a linear model that
captures the connection between the QP, buﬀer occupancy,
and the block activity, the QP is then determined based on
buﬀer occupancy and block activity. The macroblock is reen-
coded using the obtained QP if the diﬀerence between the
two QPs exceeds a speciﬁc threshold. Up to 20% of the MBs
need to be encoded twice. Furthermore, linear modeling of
the relation between QPs, buﬀer occupancy, and the block
activity may not achieve the best performance. In [12], a so-
lution of the chicken-and-egg dilemma between rate control
and RDO in H.264 is given, and hence diﬀerent bits to dif-
ferent modes are allocated so that the bad situation for the
quadratic rate-distortion (RD) model is deviated. Although
the solution can keep the peak signal-to-noise ratio (PSNR)
smoother than that of [9] and generalized bit rate matches

2

EURASIP Journal on Applied Signal Processing

Preanalysis

for one frame

Determining coarse
QP for a given MB

Determining ﬁne QP

for a given mode

RDcost

comparison

ME with λMotion
computed from

coarse QP

Preanalysis using
Inter 16 (cid:0) 16 mode

RDO through other modes

Figure 1: Illustration of the basic ideas for the proposed rate control scheme.

the target bit rate accurately, the PSNR improvement is in-
signiﬁcant. In [16–18], a PSNR-and-MAD-based frame com-
plexity estimation is proposed to allocate the bits more accu-
rately among frames. Two special cases of scene change and
small texture bits are taken into account when determining
QP at frame layer. A frame skipping decision is also used to
proactively drop a simple frame in order to make room for
the later more complex frames. However, this rate control
scheme does not pay much attention to QP determination
at the macroblock layer. In [19], a frame-layer rate control
scheme is presented, which computes the Lagrange multi-
plier for mode decision by using a quantization parameter
which may be diﬀerent from that used for encoding.

In this paper, we propose an RDO-based rate con-
trol scheme for H.264 with two-step QP determination
but single-pass encoding in order to maximize the video
quality by appropriately determining QP for each mac-
roblock, which is based on our previous work [11]. To break
the chicken-and-egg dilemma resulting from QP-dependent
rate-distortion optimization (RDO) in H.264, a pre-analysis
phase is conducted to gain the necessary source information,
and then the coarse QP is decided for R-D estimation. After
QP-dependant motion estimation (with coarse QP), we fur-
ther reﬁne the QP of each mode based on the obtained actual
standard deviation of motion-compensated residues. Using
the actual standard deviation, each possible mode’s QP can
be calculated. Thus, these QPs are used in the comparison of
each mode’s rate-distortion (RD) cost (RDcost). The encoder
chooses the mode having the minimum value. Thus, care-
fully selected QPs can ensure accurate bits allocation to indi-
vidual MBs according to their actual needs. The introduction
of QP reﬁnement process is helpful to achieve a good video
quality given the bit budget. In addition, the header bits and
coeﬃcient bits are separately estimated so that the rate con-
trol accuracy is further enhanced. In the encoding process,
RDO only performs once for each macroblock, thus one-
pass, while QP determination is conducted twice. Therefore,
the increase of computational complexity is small compared
to that of the JM 9.3 software. Experimental results indicate
that our rate control scheme not only eﬀectively improves the
average PSNR but also controls the target bit rates well.

The rest of this paper is organized as follows. In Section 2,
we derive models for bit rate and distortion estimation. In
Section 3, our proposed rate control algorithm is presented

in detail, including the solutions to the aforementioned diﬃ-
culties and the two-step QP decision with single-pass encod-
ing. Section 4 gives experimental results. Finally, Section 5
concludes the paper.

2. MODELING RATE AND DISTORTION

Figure 1 shows the basic ideas of the overall rate control pro-
cess of our algorithm, which comprises of two major steps.
Firstly, pre-analysis is performed to break the chicken-and-
egg dilemma, thus obtaining the source information, which
is used in determining the coarse QP for QP-dependent mo-
tion estimation. Secondly, RDO mode decision is conducted
at the macroblock layer to select the best prediction mode
for individual macroblock. The reﬁned QP of each possible
mode is determined and used in the RDcost comparison. Af-
ter RDO, current macroblock is encoded with the selected
mode and its corresponding reﬁned quantization parameter.
To determine QP, an R-D model usually estimates the rate
and distortion based on some measurements of frames or
macroblocks. In this paper, we choose the R-D model of our
previous work [11] in which the header bits, the coeﬃcient
bits, and distortion of each macroblock are estimated. They
are brieﬂy described as follows.

2.1. Preanalysis using Inter 16 × 16 mode header

bits estimation

Pre-analysis phase is performed by motion estimation for In-
ter 16 × 16 mode. To break the chicken-and-egg dilemma
in order to get the required information, all MBs in cur-
rent frame are preencoded before the RDO mode decision.
Among the possible seven modes (i.e., Intra 4 × 4, Intra
16 × 16, Skip, Inter 16 × 16, Inter 16 × 8, Inter 8 × 16, and
Inter 8 × 8), we choose the simplest Inter 16 × 16 to per-
form preanalysis. After this preanalysis, the source informa-
tion, such as the standard deviations of motion-compensated
residues, RDcost of each macroblock for Inter 16 × 16 mode,
is obtained. These measurements are used in the R-D model
to decide the number of target bits for every frame and the
coarse QP for individual macroblock.

In this implementation, the QP for preanalyzing the
ﬁrst inter-predicted frame is the same as the ﬁxed QP set
in conﬁguration ﬁle of JM 9.3 for each encoding. In other

Xiaokang Yang et al.

3

inter-predicted frames, the average QP from all MBs of the
previously inter-predicted frame is used to preanalyze cur-
rent frame.

2.2. Header bits estimation

Most existing R-D models only consider the transform co-
eﬃcient bits in the estimation of the rate for a macroblock.
Header bits are simply represented by a constant value. This
is a reasonable simpliﬁcation for previous standards such as
MPEG-2 and H.263, because the header bits are relatively few
in number due to the simplicity of prediction modes in these
standards. However, header bits form a signiﬁcant portion of
H.264/AVC bitstream [11]. Therefore, the number of header
bits needs to be estimated separately from coeﬃcient bits for
accurate rate estimation. In this paper, we use the following
simple but eﬀective model to estimate the number of header
bits for one macroblock:

deviation. So the chances are that Inter 16×16 will be selected
as the best prediction mode. In contrast, a large predicted
standard deviation implies a bad prediction and RDO may
quite possibly select other modes such as Intra 4 × 4 or Inter
8 × 8 to do the prediction. In this sense, the prediction mode
selected by RDO is, to some extent, dependent on the pre-
dicted standard deviation. On the other hand, as we know, in
H.264, the number of header bits strongly depends on its pre-
diction mode (e.g., Inter 16 × 16 has only one motion vector
while Inter 8×8 may have up to 16 motion vectors). From the
above analysis, we can say that the number of header bits de-
pends on the predicted standard deviation as well. The larger
the predicted standard deviation, the higher the possibility
that header-bits-expensive modes, such as Inter 8 × 8, will
be used. In other words, the number of header bits increases
with the predicted standard deviation, as is suggested by (2).

2.3. Coefﬁcient bits estimation

Hi = C × comi

(1)

The rate-quantization model proposed in [21] is used to es-
timate the coeﬃcient bits estimation:

with

comi =

⎧
⎪⎪⎨
⎪⎪⎩
(cid:6)

Htrd
C ,
(cid:6)
σ 2
i

log

i ≤ σ 2
σ 2

trd,

(cid:7)(cid:7)2,

else,

(2)

where Hi is the number of header bits for the ith macroblock
in the current frame. σi is the predicted standard deviation
of motion-compensated residues for Inter 16 × 16. In the
following, we refer to the standard deviation of the motion-
compensated residue obtained in the pre-analysis phase as
predicted standard deviation since it may be diﬀerent from the
actual standard deviation if RDO selects other mode rather
than the Inter 16 × 16 mode as the prediction mode. Htrd and
σ 2
trd are the averages of all recorded Hi and σ 2
i , which are ex-
plained below. C is a constant that implies the linear relation
between Hi and comi, which is used to separate the following
two situations so that (1) looks more compact.

Two situations are considered in our header bits model.
(1) When encoding the previous frame, we record Hi and
i of the MBs whose Hi is smaller than a predeﬁned con-
σ 2
stant (= 11). After encoding the previous frame, we calcu-
late the averages of all recorded Hi and σ 2
i , which are re-
ferred to as Htrd and σ 2
trd, respectively. During the encoding
of current frame, if σ 2
i ≤ σ 2
trd for a macroblock, we then
conclude that this macroblock will produce a small num-
is directly estimated by Htrd.
ber of header bits and Hi
(2) Otherwise, the number of header bits of a macroblock
is linear to [log(σ 2
i )]2. Furthermore, C is adaptively updated
macroblock by macroblock during the encoding process to
make the model more robust, which is discussed below. Fur-
ther explanation of (1) and (2) is given as follows.

We use Inter 16×16 mode in the pre-analysis to compute
the motion-compensated residues. A good prediction of the
MB by Inter 16 × 16 will result in a small predicted standard

Fi = AK

σ 2
i
Q2
i

,

(3)

where Fi denotes the bit required for encoding the DCT
coeﬃcients of ith macroblock; σi denotes the standard de-
viation of motion-compensated residues; Qi is the quanti-
zation step size; A is the number of the pixels in a mac-
roblock (i.e., 16 × 16 = 256); K is a constant and can be
set to e/ln 2 if the DCT coeﬃcients are Laplacian distributed
and independent [21]. However, since the DCT coeﬃcients
may not follow the Laplacian distribution strictly, it is bet-
ter to adaptively update the value of K, macroblock by mac-
roblock and frame by frame. More details are discussed in the
Section 3.3.

2.4. Distortion estimation

The following well-known distortion-quantization model
[15] is used to measure the distortion of encoded mac-
roblocks:

D = 1
N

N(cid:8)

i=1

α2
i

Q2
i
12

,

(4)

where N is the total number of macroblocks in one frame;
is distortion weight of ith macroblock, which can be
αi
used to incorporate the importance or weight of that mac-
roblock’s distortion. However, in this implementation, these
weights are used to reduce the bit overhead caused by
recording each macroblock’s QP individually at low bit
rates.

If the values of QP for sequential macroblocks are diﬀer-
entially encoded in a raster-scan order, frequent QP changes
between macroblocks consume too many bits. This eﬀect
is negligible at high bit rates but may become increasingly

4

EURASIP Journal on Applied Signal Processing

Start the current frame

Preencoding using
Inter 16 (cid:0) 16 mode

Obtain source
information

Initialize the rate

control model

Buﬀer state

Determine the bit budget

for current frame

Determining coarse
QP for a given MB

RDO for ith MB

ME for mode Ik with λMotion
computed from coarse QP

Compute ﬁne QP and
RDcost for mode Ik

Preanalysis

Frame-layer
bit allocation

Macroblock-layer

rate control

All modes have

been tried?

No

Yes

RDcost

comparison

Encode current MB
using the best mode

Update the MB-level
rate control model

End of the frame?

Yes

Update the frame-level

rate control model

No

i = i + 1

Figure 2: A ﬂowchart of the proposed rate control scheme.

signiﬁcant at low bit rates. We therefore try to control the
dynamic range of QP by simply setting the values of αi. At
lower bit rates, αi is determined from the respective standard
deviation of residues σi by the method proposed in [15]. At
higher bit rates (above 0.5 bits/pixel), all of αi are set to 1.

3. OUR PROPOSED RATE CONTROL SCHEME

Figure 2 shows the ﬂowchart of the proposed rate control
scheme. The three major steps are the above-mentioned pre-

analysis, frame-layer bit allocation, and macroblock-layer
rate control.

3.1. Pre-analysis

Through pre-analysis using Inter 16 × 16 mode, we obtain
the necessary source information for R-D estimation be-
fore the RDO. The predicted information is used to deter-
mine the bit budget for frames and the coarse QPs for mac-
roblocks.

3.2. Frame-layer bit allocation

3.3. Macroblock-layer rate control

Xiaokang Yang et al.

In [9], a ﬂuid ﬂow traﬃc model was proposed to compute
the target bit for the current coding frame. Although this
model can achieve accurate bit-rate control, it only considers
the buﬀer states (or rate) but without the consideration of
distortion, thus may limit the quality improvement. In our
previous work [11], we proposed a frame-layer bit allocation
scheme by integrating both rate-distortion cost and target bit
rate. The scheme can be divided into two steps.

First, we determine the number of target bits for current
frame without considering the buﬀer state using the follow-
ing equation:

(cid:9)

(cid:11)

(cid:10)P − Pn

B =

1 +

2

×

Jcur − Jprev,0
(cid:10)J − Jprev,0

×

R
f ,

(5)

where R is the available channel bandwidth. f is the frame
rate. Jcur is the RDcost of current frame, which is deﬁned as
the sum of the RDcost of all the MBs in the current frame. It
is noticed that macroblock-layer rate control is still not en-
abled at this moment. Remembering that in the pre-analysis
stage we use Inter 16 × 16 mode for pre-encoding, so Jcur is
actually the RDcost of current frame under the Inter 16 × 16
mode. (cid:10)J is the average RDcost of the encoded frames in the
group of pictures (GOP), the GOP size is 100 frames. Jprev,0
is the sum of RDcost of all the zero-coeﬃcient macroblocks
in the previous frame. Zero-coeﬃcient macroblock refers to
a macroblock whose coeﬃcients are all quantized to zeros af-
ter the transform and quantization. Pn is the average PSNR of
the recent n frames, which is computed using a sliding win-
dow (length is 8) method. (cid:10)P is the average PSNR of the en-
coded frames again in the GOP.

Second, the target number of bits for a frame is further
adjusted according to the buﬀer state in a similar way to the
ﬂuid ﬂow traﬃc model [11, 20]:

(cid:12)

(cid:12)

⎧

⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩

R
f + λ1
R
f + λ2

B −

B −

(cid:13)
, B >
(cid:13)
, B <

R
f
R
f

R
f & L > 0.2M,
R
f & L < 0.2M,

B =

(6)

where M is the buﬀer size and L is the currently observed
buﬀer fullness. The strength of the restriction depends on the
parameters of λ1 and λ2, which are determined from the nor-
malized buﬀer fullness (L/M) via

λ1 = 0 − 1
1 − 0.2
λ2 = 1 − 0
0.2 − 0

(cid:12)

(cid:12)

L
M

L
M

×

×

(cid:13)
− 0.2

+ 1

(cid:12)
0.2 ≤

(cid:13)
− 0.2

(cid:12)

+ 1

0 ≤

(cid:13)

≤ 1

,

L
M

(cid:13)
≤ 0.2

.

L
M

As we can see, λ1 and λ2 linearly range from 0 to 1 accord-
ing to the current buﬀer state. The two functions converge at
point (0.2, 1), which means that there is no constraint im-
posed when L/M is 0.2. On the other hand, stronger restric-
tion is imposed when the buﬀer level is extremely high or
low. It should be noticed that these controlling points of lin-
ear function can be adjusted to meet the variant requirement
and buﬀer condition.

5

(8)

(9)

3.3.1. Determining coarse QP

We mainly focus our discussion on the low delay situation
where the macroblock-layer rate control is more critical. We
consider the IPPP. . . GOP structure. The most crucial task
of macroblock-layer rate control is to determine the QP for
every individual macroblock. For I frame, the method in the
JM 9.3 reference software is also used to determine the QPs
in this implementation. In the following, we only discuss the
QP determination for P frames.

The optimized quantization step size Q∗
i

for ith MB can
be determined by minimizing the overall distortion D subject
to a given bit budget B, namely, minimizing the RDcost as
follows:

(cid:14) N(cid:8)

(cid:6)

(cid:15)

(cid:7)

− B

Fi + Hi
(cid:14) N(cid:8)

(cid:12)

cost = D + λ

i=1
Q2
i
12

α2
i

N(cid:8)

i=1

= 1
N

+ λ

AK

+ C × comi

− B

.

σ 2
i
Q2
i

i=1

(cid:13)

(cid:15)

This kind of optimization problem can be solved by La-

grangian optimization technique [21]:

(cid:16)
(cid:17)
(cid:17)
(cid:17)
(cid:18)

Q∗

i =

AKi−1
(cid:19)N

Bi − Ci

j=i com j

σi
αi

N(cid:8)

j=i

α jσ j.

It is noticed that σi in the equation is the standard devi-
ation of motion-compensated residues of the Inter 16 × 16
mode in the pre-analysis phase. Formula (9) is used to com-
pute the coarse QP of each macroblock. The parameters Ki−1
and Ci are recursively updated (MB by MB) during the en-
coding of the successive macroblocks; more details are given
in Section 3.3.5.

From (9), we can see that if αi approaches σi very closely,
the term σi/αi becomes 1 and thus all of the quantization
steps in one frame are approximately equal. The range of QP
is then reduced. So it gives a good explanation to the afore-
mentioned distortion weights determination.

3.3.2. Motion estimation

i ) and λMotion=0.85×2(QCoarse−12)/3
The resultant QCoarse (i.e., Q∗
are used in motion estimation to search for the best motion
vectors for each macroblock under a certain mode.

(7)

3.3.3. Quantization parameter reﬁnement

From Section 2, we know that the coeﬃcient model is based
on the actual standard deviation of the motion-compensated
residues. Clearly, the standard deviation obtained in the pre-
analysis may be diﬀerent from the actual standard deviation
if the RDO process selects another prediction mode rather
than Inter 16 × 16. This will result in some error of QP calcu-
lation to some extent, especially for high-motion videos and

6

EURASIP Journal on Applied Signal Processing

their high bit rates because there are fewer chances for Inter
16 × 16 to be selected in such situation.

We observe that for mode Ik, the standard deviation of
motion-compensated residues σ ∗
i (Ik) can be obtained easily
after motion estimation (ME) in the loop of the RDO pro-
cess. Then, the QP of each mode, denoted as QPIk , can be
calculated using (9), where we just replace σi with σ ∗
i (Ik). Af-
ter all modes are checked by RDO, the encoder uses QPIk in
the comparison of RDcost to choose a best prediction mode
(Ibest) for the current macroblock.

3.3.4.

Encoding of MBs using the best mode

To encode the ith macroblock with the best mode Ibest, we
deﬁne Si =
j=i com j and rewrite (9) as fol-
lows:

j=i α jσ j, Ti =

(cid:19)N

(cid:19)N

(cid:7)

(cid:6)
Ibest

Qi

=

(cid:20)

AKi

σ ∗
i

Bi − CiTi

(cid:7)

(cid:6)
Ibest
αi

Si,

(10)

where Bi is the unused number of target bits for the remain-
ing macroblocks from ith to Nth in the current frame. Ki and
Ci are the updated values of R-D model parameters K and C
after encoding the ﬁrst (i − 1) macroblocks. In this way, we
can compute the QPs of each macroblock via updating the
required parameters macroblock by macroblock when the
macroblocks are processed sequentially in one frame.

3.3.5. Updating some parameters of R-D model

(1) Updating Bi

Bi+1 is updated as follows:

(cid:21)

(cid:22)

Bi+1 =

B −

b j

×

i(cid:8)

j=1

N − i
N +

(cid:21) (cid:19)N
(cid:19)i

J j
j=i+1
J j

j=1

(cid:22)

×

b j

×

i(cid:8)

j=1

i
N ,

(11)
where J j is the R-D cost of jth macroblock obtained in the
pre-analysis stage; b j is the actual number of encoding bits
used for jth macroblock. We adopt the weighted average
method to improve the accuracy and robustness of bit al-
location. On the right-hand side of the equation, the ﬁrst
term indicates the unused bit budget for the remaining mac-
roblocks to be encoded while the second term is to update
the bit allocation according to the actual R-D cost of the mac-
roblocks. Such updating according to the actual encoding re-
sults is necessary during the scan over all macroblocks.

(2) Updating Ki

roblock:

(a) Compute the K (cid:4)

i after encoding the current mac-

K (cid:4)

i =

(cid:6)

Fi ×

Q∗
i
256σ 2
i

(cid:7)2

.

i is within [0, 4.5].

where l is the number of macroblocks encoded so far
whose K (cid:4)
Otherwise, we regard the current value of K (cid:4)
i as an
ineﬀective estimation and just skip this step. So K i
remains unchanged after encoding the current mac-
roblock in this situation.

(c) Find the weighted average of the initial estimate K1

with K i:

K i = K i

(cid:12)

(cid:13)

i
N

+

K1(N − i)

,

N

(14)

where K1 is the average K of the previous frame. It is
used to improve the accuracy of the estimation of K,
since when only the ﬁrst few macroblocks in the cur-
rent frame have been encoded (i.e., i is small), K i is the
average of only a few values and hence is not a robust
estimate of K for the current frame. Then the updated
K i is used in (9) and (10).

(3) Updating Ci

roblock:

(a) Compute the C(cid:4)

i after encoding the current mac-

(cid:19)i

j=1
(cid:19)i

C(cid:4)

i =

(cid:6)
b j − F j

(cid:7)

,

j=1 com j

(15)

(16)

(17)

(cid:19)i

j=1(b j − F j) is the total number of header bits

where
used for encoding the ﬁrst i macroblocks.

(b) Find the average C(cid:4)(cid:4)

i of all the encoded macroblocks in

the current frame:

C(cid:4)(cid:4)

i = C(cid:4)(cid:4)
i−1

×

i − 1
i + C(cid:4)

i × 1
i

.

(c) Find the weighted average of the initial estimate C1

with C(cid:4)(cid:4)
i :

C(cid:4)(cid:4)

i = C(cid:4)(cid:4)

i ×

i
N + C1 ×

N − i
N ,

where C1 is the average C of the previous frame. This
method of weighted average is used for the same rea-
son as (14). Then the updated C(cid:4)(cid:4)
is used in (9) and
i
(10).

3.3.6.

Implementation issue related to RDO options

When our scheme was integrated into the JM 9.3 software,
two diﬀerent situations were considered: RDO on and RDO
oﬀ (whether to apply RDO technique in mode decision pro-
cess or not), which led to a little diﬀerence in the realization
of our algorithm.

(b) If K (cid:4)

i > 0 and K (cid:4)

i ≤ 4.5, compute the average K of the

(1) RDO off

macroblocks encoded so far:
K i−1(l − 1)

K i =

l

K (cid:4)
i
l

,

+

When the RDO option was switched to oﬀ, it implied that
RDcost value comparison was not conducted for mode de-
cision. Only the values of SAD or SATD (when Hadamard

(12)

(13)

Xiaokang Yang et al.

7

transform was set) for each mode were compared to select
the best prediction mode. Therefore, we just examined the
standard deviation of motion-compensated errors for the
best mode and updated its QP.

(2) RDO on

It was more complicated when the RDO option was switched
to on. The mean absolute diﬀerence (MAD) for each mode
should be calculated in order to perform QP reﬁnement.
Firstly, motion estimation was performed. All modes were
checked in order. Motion estimations for Inter 16×16, 8×16,
and 16 × 8 were performed in one loop, then Inter 8 × 8 with
transform size 8 × 8, and lastly Inter 8 × 8 with transform size
4 × 4 (8 × 8, 8 × 4, 4 × 8, 4 × 4 partitions). The motion vec-
tors and reference frames of each mode were decided in the
motion search process. We used them to obtain the MAD of
each mode. Then, the QP of each mode was easily calculated
according to our algorithm. Secondly, RDcost value compar-
ison was performed to get the best macroblock mode, where
we used each mode’s reﬁned QP instead of coarse QP.

It was noticed that RDO technique was already used in
the loop over 8 × 8 subpartitions with transform size 4 × 4.
For all four 8 × 8 subblocks in a 16 × 16 macroblock, the
best block mode should be decided among modes 4, 5, 6,
and 7 (8 × 8, 8 × 4, 4 × 8, 4 × 4) through the comparison
of RDcost value. After that, some variables were updated if
the best mode had been changed. Therefore we also applied
our algorithm here. Similarly, we obtained the MAD of 8 × 8
subblock and then introduce the small-sized reﬁned QP for
RDcost comparison. For QP reﬁnement, the QP range was
restricted in a reasonable range, that is, the coarse QP ±4 to
prevent too high QP ﬂuctuation between neighboring mac-
roblocks.

Another issue was how many parameters of the rate con-
trol model in (9) should be updated with diﬀerent modes.
In fact, many model variables were associated with the stan-
dard deviation of motion-compensated residues σ ∗
i (Ik). But
we believed that there was no need to modify them because
they were less dominative than σ ∗
i (Ik) in deciding the reﬁned
QP. Another reason was that most of these variables were in-
troduced in the pre-analysis phase at the frame layer, such
as the number of target bits and the number of header bits.
Though these parameters had some errors if we did not recal-
culate them, it was also unsuitable to update them at the mac-
roblock layer during the encoding process. Hence we only
traced the change of each mode’s MAD and ignored other pa-
rameters that had indirect relations with the standard devia-
tions of motion-compensated residues. So in our implemen-
tation, the only diﬀerence between (9) and (10) is σ ∗

i (Ik).

In the encoding process, the QP calculation is conducted
twice in all. First, coarse QP is obtained to compute the Lan-
grange multiplier parameter for motion estimation. Second,
QPs are further reﬁned for diﬀerent modes, which are used
for R-D cost comparison in the RDO process. The ﬁnal QP
of the macroblock (i.e., the best mode’s corresponding re-
ﬁned QP) becomes more accurate and conforms to the ac-
tual R-D performance of the macroblock for more eﬀective

Test sequence

Size

QCIF
Carphone
QCIF
News
QCIF
Foreman
QCIF
Silent
Mother daughter QCIF
QCIF
Salesman
CIF
Paris
CIF
Stefan
D1
City

Table 1: Test sequences.

Frame
rate

QP
range

Sequence
length

Frames
encoded

Frame
type

30
30
30
30
30
30
30
30
30

382
20–44
300
20–44
300
20–44
300
20–44
300
20–44
449
20–44
20–44 1065
300
20–44
20–44
300

100
100
100
100
100
100
150
150
100

IPPP
IPPP
IPPP
IPPP
IPPP
IPPP
IPPP
IPPP
IPPP

Table 2: Test conditions.

MV resolution
Hadamard
RDO
Search range
Restricted search range
Reference frame
Symbol mode
Slice mode
Frame skip

1/4 pel

ON

OFF/ON

16
2
5

CABAC

OFF

2

and accurate rate control. The RDO process does not need to
be performed again like that in JVT-F086 [22], hence we call
it two-step QP determination but single-pass encoding.

3.3.7. Computational complexity analysis

The possible computational complexity overhead of our
method may come from the pre-analysis stage where the In-
ter 16 × 16 mode is performed to obtain the source infor-
mation. However, since the results obtained in pre-analysis
can be stored for use in the following RDO process, there
is no need to implement Inter 16 × 16 again during the
RDO. Thus, pre-analysis will only change the algorithm ﬂow
and the overall computational complexity has only a possi-
bly negligible increase when RDO option is switched on. As
for the RDO oﬀ situation, the encoding complexity increases
about 30% in terms of the total encoding time.

4. RESULTS AND DISCUSSIONS

The proposed rate control scheme was implemented onto
the H.264 JM 9.3 encoder [23]. In this section, nine typical
sequences of various resolution sizes and motion measure-
ments were tested as listed in Table 1. The encoder conﬁgu-
ration is shown in Table 2. The performance of our proposed
scheme is evaluated in comparison with the original encoder
JM 9.3 and the existing rate control functionality in the JM
9.3. We also compared the proposed approach with the ap-
proach that does not reﬁne the QP for mode decision. In the

Mother daughter

8

Test Sequence

Carphone

News

Silent

Salesman

Foreman

Paris

Stefan

City

Table 3: Performance comparison (QP for FQP is 44 and the ﬁrst I frame QP for rate control schemes is 40, RDO on).

PSNR-Y (dB)

QP

R (bps)

GAIN (dB)

EURASIP Journal on Applied Signal Processing

PRC w/o QP reﬁnement
RC with QP reﬁnement

PRC w/o QP reﬁnement
RC with QP reﬁnement

PRC w/o QP reﬁnement
RC with QP reﬁnement

PRC w/o QP reﬁnement
RC with QP reﬁnement

PRC w/o QP reﬁnement
RC with QP reﬁnement

PRC w/o QP reﬁnement
RC with QP reﬁnement

PRC w/o QP reﬁnement
RC with QP reﬁnement

Scheme

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

PRC w/o QP reﬁnement
RC with QP reﬁnement

PRC w/o QP reﬁnement
RC with QP reﬁnement

26.46
26.88
27.06
27.36
25.45
26.12
26.64
26.81
25.92
26.94
26.9
27.11
27.85
28.09
28.39
28.59
25.55
26.1
26.22
26.46
26.01
25.89
26.01
26.22
24.15
25.2
25.02
25.23
24.14
24.13
24.17
24.33
26.16
25.69
25.16
25.44

44
40
40
40

44
40
40
40

44
40
40
40

44
40
40
40

44
40
40
40

44
40
40
40

44
40
40
40

44
40
40
40

44
40
40
40

7430
7540
7520
7620

5890
5960
5820
5920

5050
5090
4890
5130

2600
2580
2590
2640

2800
2800
2840
2890

9990
10060
9830
9920

28630
28790
28210
28320

72080
72270
71840
72130

68680
69000
67510
68030

—
0.42
0.6
0.9
—
0.67
1.19
1.36
—
1.02
0.98
1.19
—
0.24
0.54
0.74
—
0.55
0.67
0.91
—
−0.12

0
0.21
—
1.05
0.87
1.08
—
−0.01
0.03
0.19
—
−0.47
−1
−0.72

ΔR (%)

—

1.48%
1.21%
2.56%

—

1.19%
−1.19%
0.51%

—

0.79%
−3.17%
1.58%

—

−0.77%
−0.38%
1.54%

—

0.00%
1.43%
3.21%

—

0.70%
−1.60%
−0.70%

—

0.56%
−1.47%
−1.08%

—

0.26%
−0.33%
0.07%

—

0.47%
−1.70%
−0.95%

simulation, we ﬁrst encoded the sequence using ﬁxed quan-
tization parameter to determine the target bit rate. Then the
same video was encoded once again using the rate control
scheme in JM 9.3 and our rate control algorithm, respec-
tively. The obtained PSNRs and the bit rates are compared.

We adopt the method in [20] to determine the starting
quantization parameter QP0. It is predeﬁned based on the
available channel bandwidth and the GOP length. In our im-
plementation, the QP for the ﬁrst I frame is 4 lesser than that
for the ﬁxed-QP scheme. The same starting QP is used in the
JM 9.3 rate control scheme for a fair comparison of PSNR.

Tables 3 to 6 list the comparison of the experimental
results among JM 9.3 rate control (RC), the proposed rate

control without QP reﬁnement (PRC w/o QP reﬁnement),
and the proposed rate control with QP reﬁnement (PRC with
QP reﬁnement). We analyzed the performances of these three
rate control schemes with JM 9.3 ﬁxed QP (FQP) as bench-
mark, where each of the video sequences was encoded at
seven diﬀerent bit rates with JM 9.3 for ﬁxed QPs ranged
from 20 to 44 (the QPs were kept unchanged for all the
frames). For the other three rate control schemes, the QPs
in the tables were only used for I frames and the QPs in P
frames were dynamically adjusted by the aforementioned al-
gorithm during the encoding process. R is the overall bit rate.
As observed from Tables 3 to 6, our rate control scheme
with QP reﬁnement outperforms the existing rate control

Table 4: Performance comparison (QP for FQP is 36 and the ﬁrst I frame QP for rate control schemes is 32, RDO on).

PSNR-Y (dB)

QP

R (bps)

GAIN (dB)

Xiaokang Yang et al.

Test sequence

Carphone

Mother daughter

News

Silent

Salesman

Foreman

Paris

Stefan

City

PRC w/o QP reﬁnement

RC with QP reﬁnement

PRC w/o QP reﬁnement

RC with QP reﬁnement

PRC w/o QP reﬁnement

RC with QP reﬁnement

PRC w/o QP reﬁnement

RC with QP reﬁnement

Scheme

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

PRC w/o QP reﬁnement

RC with QP reﬁnement

PRC w/o QP reﬁnement

RC with QP reﬁnement

PRC w/o QP reﬁnement

RC with QP reﬁnement

PRC w/o QP reﬁnement

RC with QP reﬁnement

JM 9.3 FQP
JM 9.3 RC

PRC w/o QP reﬁnement

RC with QP reﬁnement

31.5
31.64

31.91
32.09
30.95
30.98
31.91
31.98
30.63
31.5
31.49
31.63
32.44
32.17
32.38
32.49
30.1
30.67

30.79
30.96
30.86
30.69
30.68
30.82
29.6
30.34
30.62
30.82
29.22
29.08
29.19

29.38
30.54
29.86
29.86
30.08

36

32

32

32

36

36

32

32

36

32

32

32

36

32

32

32

36

32

32

32

36

32
32

32

36

32

32

32

36

32

32

32
36

32

32

32

21790

21930

21730

21750

16300

16400

16030

16050

14990

15060

14680

14790

7660

7730

7590

7740

9600

9680

9390

9500

24940

25010
24390

24660

96880

97390

95640

96210

279360

279380

278920

279840
197580

198490

189680

192870

—
0.14

0.41
0.59
—
0.03
0.96
1.03
—
0.87
0.86

1

—
−0.27
−0.06
0.05
—
0.57

0.69
0.86
—
−0.17
−0.18
−0.04
—
0.74
1.02
1.22
—
−0.14
−0.03
0.16
—
−0.68
−0.68
−0.46

9

ΔR (%)

—

0.64%

−0.28%
−0.18%

—

0.61%
−1.66%
−1.53%

—

0.47%
−2.07%
−1.33%

—

0.91%
−0.91%
1.04%

—

0.83%

−2.19%
−1.04%

—

0.28%
−2.21%
−1.12%

—

0.53%
−1.28%
−0.69%

—

0.01%
−0.16%
0.17%

—

0.46%
−4.00%
−2.38%

functionality in JM 9.3 in terms of PSNR in most cases. The
average PSNR improvement is 0.63 dB over JM 9.3 FQP, and
0.28 dB over JM 9.3 RC for the 36 experiments when RDO
was on, while the bit rate inaccuracy is less than 2%. Be-
sides, we can also obviously see the signiﬁcant eﬀect of QP
reﬁnement step adopted in our scheme. The average gain is

0.25 dB compared to the approach without QP reﬁnement
for mode decision. The tables only list the PSNRs of the lu-
minance component. In fact, the PSNRs of the two chromi-
nance components are improved much more than that of
the luminance component. Similar experimental results have
been achieved in the case of “RDO oﬀ,” but, however, are not

Mother daughter

10

Test sequence

Carphone

News

Silent

Salesman

Foreman

Paris

Stefan

City

Table 5: Performance comparison (QP for FQP is 28 and the ﬁrst I frame QP for rate control schemes is 24, RDO on).

PSNR-Y (dB)

QP

R (bps)

GAIN (dB)

EURASIP Journal on Applied Signal Processing

PRC w/o QP reﬁnement

RC with QP reﬁnement

PRC w/o QP reﬁnement

RC with QP reﬁnement

PRC w/o QP reﬁnement

RC with QP reﬁnement

PRC w/o QP reﬁnement

RC with QP reﬁnement

Scheme

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

PRC w/o QP reﬁnement

RC with QP reﬁnement

PRC w/o QP reﬁnement

RC with QP reﬁnement

PRC w/o QP reﬁnement

RC with QP reﬁnement

PRC w/o QP reﬁnement

RC with QP reﬁnement

PRC w/o QP reﬁnement

RC with QP reﬁnement

36.91
37.34
37.23
37.32
36.84
37.12
37.56
37.82
35.83
37.2
37.15
37.3
37.63
37.62
37.64
37.79
35.6
36.51
36.7
36.96
36.08
36.35
36.05
36.17
35.61

36
36.74
36.97
35.33
35.2
34.94
35.18
35.77
35.53
35.24
35.48

28

24

24

24

28

24

24

24

28

24

24

24

28

24

24

24

28

24

24

24

28

24

24

24

28

24

24

24

28

24

24

24

28

24

24

24

69054

69340

68010

68560

45350

45520

44360

44544

44238

44350

43050

43190

25615

25820

25440

25560

30067

30190

29880

30590

68941

68970

67840

68050

297250

298330

293120

294440

951880

951570

944390

947620

854440

854750

829920

840530

—
0.43
0.32
0.41
—
0.28
0.72
0.98
—
1.37
1.32
1.47
—
−0.01
0.01
0.16
—
0.91
1.1
1.36
—
0.27
−0.03
0.09
—
0.39
1.13
1.36
—
−0.13
−0.39
−0.15
—
−0.24
−0.53
−0.29

ΔR (%)

—

0.41%
−1.51%
−0.72%

—

0.37%
−2.18%
−1.78%

—

0.25%
−2.69%
−2.37%

—

0.80%
−0.68%
−0.21%

—

0.41%
−0.62%
1.74%

—

0.04%
−1.60%
−1.29%

—

0.36%
−1.39%
−0.95%

—

−0.03%
−0.79%
−0.45%

—

0.04%
−2.87%
−1.63%

presented in this paper to save the page space. Figures 3 and 4
show frame-by-frame PSNR curve comparison in the encod-
ing process for “Salesman” and “Paris” in the case of “RDO
on.”

Interestingly, our scheme is relatively more eﬀective for
the sequences tested with low bit rates and low motion be-

cause Inter 16 × 16 mode is more likely to be selected by
RDO in such situations. Thus, the inaccuracies resulted from
the inconsistency of diﬀerent prediction modes in the pre-
analysis stage and RDO stage are avoided as much as possi-
ble. But thanks to the QP reﬁnement algorithm, the perfor-
mances of those high motion and high bit rate sequences are

Table 6: Performance comparison (QP for FQP is 20 and the ﬁrst I frame QP for rate control schemes is 16, RDO on).

PSNR-Y (dB)

QP

GAIN (dB)

ΔR (%)

Xiaokang Yang et al.

Test sequence

Carphone

News

Silent

Mother daughter

Salesman

Foreman

Paris

Stefan

City

PRC w/o QP reﬁnement

RC with QP reﬁnement

PRC w/o QP reﬁnement

RC with QP reﬁnement

PRC w/o QP reﬁnement

RC with QP reﬁnement

PRC w/o QP reﬁnement

RC with QP reﬁnement

PRC w/o QP reﬁnement

RC with QP reﬁnement

Scheme

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

JM 9.3 FQP
JM 9.3 RC

PRC w/o QP reﬁnement

RC with QP reﬁnement

PRC w/o QP reﬁnement

RC with QP reﬁnement

PRC w/o QP reﬁnement

RC with QP reﬁnement

PRC w/o QP reﬁnement

RC with QP reﬁnement

42.83
42.65
42.42
42.64
42.95
43.07
43.24
43.4
42.2
43.01
43.07
43.24
43.4
43.15
43.33
43.58
42.06
42.58
42.86
43.02
42.05
41.81
41.46
41.7
41.78
41.88
41.66
41.87
41.59
41.1
40.67
40.96
41.43
41.2
40.96
41.28

R (bps)

172570

172710

172590

173210

106360

106420

103370

104560

105620

105730

103490

104210

74480

74600

73150

74030

80570

80880

78720

79660

176710

176730

171370

173450

743400

743610

732880

735820

2224480

2223810

2192330

2204640

3668610

3665000

3599590

3642920

20

16

16

16

20

16

16

16

20

16

16

16

20

16

16

16

20

16

16

16

20

16

16

16

20

16

16

16

20

16

16

16

20

16

16

16

—
−0.18
−0.41
−0.19
—
0.12
0.29
0.45
—
0.81
0.87
1.04
—
−0.25
−0.07
0.18
—
0.52
0.8
0.96
—
−0.24
−0.59
−0.35
—
0.1
−0.12
0.09
—
−0.49
−0.92
−0.63
—
−0.23
−0.47
−0.15

11

—

0.08%
0.01%
0.37%

—

0.06%
−2.81%
−1.69%

—

0.10%
−2.02%
−1.33%

—

0.16%
−1.79%
−0.60%

—

0.38%
−2.30%
−1.13%

—

0.01%
−3.02%
−1.84%

—

0.03%
−1.42%
−1.02%

—

−0.03%
−1.45%
−0.89%

—

−0.10%
−1.88%
−0.70%

also improved. In our future work, we may try to use Inter
8 × 8 mode for preencoding to obtain more accurate source
information for the sequences.

5. CONCLUSION

We have presented a novel RDO-based rate control algo-
rithm for H.264. The major diﬃculties in H.264 rate control

have been addressed. The pre-analysis stage is used to break
the chicken-and-egg dilemma. Robust header bits predic-
tion model and coeﬃcient bits prediction model are estab-
lished by adaptively updating the model parameters. The
frame-layer bit allocation is simple and eﬀective. By using the
two-step QP determination but single-pass encoding scheme
at the macroblock-layer rate control, each macroblock’s QP
is further reﬁned and thus highly conformed to its actual

Salesman at 30 070 bps

ACKNOWLEDGMENTS

12

)
B
d
(
Y
-
R
N
S
P

40

39

38

37

36

35

34

33

0

)
B
d
(
Y
-
R
N
S
P

37

36

35

34

33

32

31

0

10

20

30

40

50

60

70

80

90

100

Frame

RC in JM 9.3
Proposed RC
RC (reﬁned QP)

Figure 3: PSNR comparison frame-by-frame of “Salesman,” num-
ber of target bits = 30 070 bps (RDO on).

Parris at 176 800 bps

50

100

150

Frame

RC in JM 9.3
Proposed RC
RC (reﬁned QP)

Figure 4: PSNR comparison frame-by-frame of “Paris,” number of
target bits = 176 800 bps (RDO on).

needs. As shown by the test results, our proposed rate control
scheme signiﬁcantly outperforms the original JM 9.3 with
ﬁxed QP and the existing rate control scheme in JM 9.3 in
terms of PSNR improvement, while maintaining the bit ac-
curacy.

EURASIP Journal on Applied Signal Processing

This work was supported by National Natural Science
Foundation of China under Grants no. 60332030 and no.
60502034, and Shanghai Rising-Star Program under Grant
no. 05QMX1435.

REFERENCES

[1] ISO-IEC/JTC1/SC29/WG11, Information technology—coding
of audio-visual objects—part 10: advanced video coding Final
Draft International Standard, ISO/IEC FDIS 14 496-10, De-
cember 2003.

[2] T. Wiegand, “Draft ITU-T recommendation and ﬁnal draft in-
ternational standard of joint video speciﬁcation (ITU-T Rec.
H.264 — ISO/IEC 14496-10 AVC),” in Joint Video Team (JVT)
of ISO/ICE MPEG and ITU-T VCEG, VT-G050, Pattaya, Thai-
land, March 2003.

[3] T. Sikora, “Trends and perspectives in image and video cod-

ing,” Proceedings of the IEEE, vol. 93, no. 1, pp. 6–17, 2005.

[4] T. Wiegand, G. J. Sullivan, G. Bjontegaard, and A. Luthra,
“Overview of the H.264/AVC video coding standard,” IEEE
Transactions on Circuits and Systems for Video Technology,
vol. 13, no. 7, pp. 560–576, 2003.

[5] G. J. Sullivan and T. Wiegand, “Video compression—from
concepts to the H.264/AVC standard,” Proceedings of the IEEE,
vol. 93, no. 1, pp. 18–31, 2005.

[6] ISO-IEC/JTC1/SC29/WG11, “Generic coding of moving pic-
tures and associated audio information: video,” ISOIEC
13818-2, November 1994.

[7] ITU-T Study Group 15, “Draft of recommendation H.263:
video coding for low bitrate communication,” Tech. Rep.,
ITU-T, Geneva, Switzerland, May 1996.

[8] P. H. Hsu and K. J. R. Liu, “A predictive H.263 bitrate control
scheme based on scene information,” in Proceedings of the IEEE
International Conference on Multimedia & Expo (ICME ’00),
pp. 1735–1738, New York, NY, USA, July–August 2000.

[9] S. W. Ma, W. Gao, P. Gao, and Y. Lu, “Rate control for advance
video coding (AVC) standard,” in Proceedings of the IEEE In-
ternational Symposium on Circuits and Systems (ISCAS ’03),
vol. 2, pp. 892–895, Bangkok, Thailand, May 2003.

[10] S. W. Ma, W. Gao, F. Wu, and Y. Lu, “Rate control for JVT
video coding scheme with HRD considerations,” in Proceed-
ings of the IEEE International Conference on Image Processing
(ICIP ’03), vol. 3, pp. 793–796, Barcelona, Spain, September
2003.

[11] P. Li, X. K. Yang, and W. S. Lin, “Buﬀer-constrained R-D
model-based rate control for H.264/AVC,” in Proceedings of the
IEEE International Conference on Acoustics, Speech and Signal
Processing (ICASSP ’05), vol. 2, pp. 321–324, Philadelphia, Pa,
USA, March 2005.

[12] J. F. Xu and Y. He, “A novel rate control for H.264,” in Proceed-
ings of the IEEE International Symposium on Circuits and Sys-
tems (ISCAS ’04), vol. 3, pp. 809–812, Vancouver, BC, Canada,
May 2004.

[13] T. Wiegand, H. Schwarz, A. Joch, F. Kossentini, and G. Sulli-
van, “Rate-constrained coder control and comparison of video
coding standards,” IEEE Transactions on Circuits and Systems
for Video Technology, vol. 13, no. 7, pp. 688–703, 2003.

[14] Z. G. Li, F. Pan, K. P. Lim, et al., “Adaptive frame layer rate con-
trol for H.264,” in Proceedings of the IEEE International Con-
ference on Multimedia & Expo (ICME ’03), vol. 1, pp. 581–584,
Baltimore, Md, USA, July 2003.

Xiaokang Yang et al.

13

Yongmin Tan received the B.S. degree in
electronic engineering from Shanghai Jiao-
tong University, Shanghai, China, in 2005.
He is currently working toward the M.S.
degree in the Institute of Image Commu-
nication and Information Processing, De-
partment of Electronic Engineering, Shang-
hai Jiao Tong University, Shanghai, China.
His current research interests include scal-
able video coding, video processing, and
rate control.

Nam Ling received the B.Eng. degree (elec-
trical engineering) from the National Uni-
versity of Singapore, and the M.S. and Ph.D.
degrees (computer engineering) from the
University of Louisiana at Lafayette, USA.
He is currently a Full Professor with the
Department of Computer Engineering and
the Associate Dean (Graduate Studies and
Research) for the School of Engineering at
Santa Clara University, California, USA. He
has more than 120 publications, including a book, in the ﬁelds of
video coding and systolic arrays. He was named IEEE Distinguished
Lecturer for 2002–2003, and received the 2003 IEEE ICCE Best Pa-
per Award (First Place Winner) for his joint work on MPEG-4 face
animation. He and his team’s proposals on motion estimation and
related methods were adopted into the H.264/MPEG-4 AVC video
coding international standard. He served as an editor for several
journals. He served as the Chair for two IEEE technical commit-
tees. He was the General Chair for the IEEE Hot Chips Sympo-
sium in 1995. He is currently the Technical Program Cochair for
ISCAS ’07 and the Program Cochair for SiPS ’07. He also served as
the Program Chair/Cochair for DCV ’02 and SiPS ’00.

[15] H.264/AVC reference software JM 9.3, http://ftp3.itu.int/

av-arch/jvt-site.

[16] M. Jiang and N. Ling, “On enhancing H.264/AVC video rate
control by PSNR-based frame complexity estimation,” IEEE
Transactions on Consumer Electronics, vol. 51, no. 1, pp. 281–
286, 2005.

[17] M. Jiang, X. Yi, and N. Ling, “Frame layer bit allocation
scheme for constant quality video,” in Proceedings of the IEEE
International Conference on Multimedia & Expo (ICME ’04),
vol. 2, pp. 1055–1058, Taipei, Taiwan, June 2004.

[18] M. Jiang and N. Ling, “Low-delay rate control for real-time
H.264/AVC video coding,” IEEE Transactions on Multimedia,
vol. 8, no. 3, pp. 467–477, 2006.

[19] M. Jiang and N. Ling, “On lagrange multiplier and quan-
tizer adjustment for H.264 frame-layer video rate control,”
IEEE Transactions on Circuits and Systems for Video Technol-
ogy, vol. 16, no. 5, pp. 663–669, 2006.

[20] Z. G. Li, W. Gao, F. Pan, et al., “Adaptive rate control with HRD
consideration,” in Joint Video Team of ISO/IEC and ITU, JVT-
H014, 8th Meeting, pp. 23–27, Geneva, Switzerland, May 2003.
[21] J. Ribas-Corbera and S. Lei, “Rate control in DCT video cod-
ing for low-delay communications,” IEEE Transactions on Cir-
cuits and Systems for Video Technology, vol. 9, no. 1, pp. 172–
185, 1999.

[22] S. W. Ma, W. Gao, Y. Lu, and H. Lu, “Proposed draft descrip-
tion of rate control on JVT standard,” in Joint Video Team
(JVT) of ISO/IEC MPEG & ITU-T VCEG, JVT-F086, 6th Meet-
ing, Awaji, Japan, December 2002.

[23] A. M. Tourapis, K. S¨uhring, and G. Sullivan, “H.264/MPEG-
4 AVC reference software enhancements,” in Joint Video
Team (JVT) of ISO/IEC MPEG & ITU-T VCEG. (ISO/IEC
JTC1/SC29/WG11 and ITU-T SG16 Q.6), JVT-N008, 14th
Meeting, Hong Kong, China, January 2005.

Xiaokang Yang received the B.S. degree
from Xiamen University, Xiamen, China,
in 1994, the M.S. degree from Chinese
Academy of Sciences, Shanghai, China, in
1997, and the Ph.D. degree from Shanghai
Jiao Tong University, Shanghai, China, in
2000. From September 2000 to March 2002,
he worked as a Research Fellow in Centre
for Signal Processing, Nanyang Technolog-
ical University, Singapore. From April 2002
to October 2004, he was a Research Scientist in the Institute for
Infocomm Research (I2R), Singapore. He is currently an Associate
Professor and the Director Assistant of the Institute of Image Com-
munication and Information Processing, Department of Electronic
Engineering, Shanghai Jiao Tong University, Shanghai, China. He
has published over 70 refereed papers, and has ﬁled 6 patents. His
current research interests include networked multimedia process-
ing, media retrieval, perceptual visual processing, digital television,
and pattern recognition. He received the Microsoft Young Pro-
fessorship Award 2006, the Best Young Investigator Paper Award
at IS&T/SPIE International Conference on Video Communication
and Image Processing (VCIP2003), and awards from A-STAR and
Tan Kah Kee foundations. He is currently a Senior Member of IEEE,
and a Member of Visual Signal Processing and Communications
Technical Committee of the IEEE Circuits and Systems Society. He
is the Special Session Chair of Perceptual Visual Processing of IEEE
ICME2006. He is currently the Technical Program Cochair for IS-
CAS ’07 and the Program Cochair for SiPS ’07.

