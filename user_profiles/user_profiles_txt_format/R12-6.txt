Vise: A System for Visualizing Salient Events in a Text Stream

Gabriel Pui Cheong Fung

Department of Systems Engineering and Engineering Management,

The Chinese University of Hong Kong, Hong Kong, China

pcfung@se:cuhk:edu:hk

Abstract

In this paper, we present a system called Vise for
visualizing salient events in a text stream according to
the users’ interests. A text stream is a sequence of
chronological ordered documents. News articles, email
and newsgroup postings are some typical examples of
text stream. Through Vise, a user can visualize the
events resides in a text stream by providing a set of
keywords that are related to the events. A graph will be
displayed to denote for the underlying patterns of the
events. Yet, retrieving events in a text stream is a very
di(cid:14)cult task due to the sparsity and noisiness of the
features (keywords) in there. We solve these problems
with the help of binomial distribution and some statis-
tical theories. We have archived a stream of two-year
news articles to evaluate the usability and the e(cid:11)ec-
tiveness of Vise. According to a subjective evaluation,
the patterns of the events identi(cid:12)ed are justi(cid:12)able and
match our expectation. These favorable results indi-
cated that our proposed system is highly e(cid:11)ective and
practical.

1. Introduction

In this paper, we present a system called Vise for
browsing and retrieving salient events in a text stream
according to the users’ interests. A text stream is a se-
quence of chronologically ordered documents. News ar-
ticles, newsgroup postings and e-mails are some typical
examples of text streams. Vise stands for Visualizing
Salient Event. It is an enhancement and implementa-
tion of our previous paper [4]. Through Vise, a user can
visualize the salient events resides in a text stream by
providing a set of keywords that are related to them.
A graph will be displayed to denote for the underly-
ing patterns of the events. Figure 1 shows an online
demo for Vise. In the (cid:12)gure, the graph in the middle
denotes for the pattern of SARS (Special Acute Respi-

ratory Syndrome). The right hand side shows a set of
events that are related to SARS and the bottom is the
headline of the news articles that are related to SARS.
Yet, retrieving salient events in a text stream is a
very di(cid:14)cult task due to the sparsity and noisiness of
the features (keywords) in there. For instance, consider
the topic Severe Acute Respiratory Syndrome (SARS).
SARS is a virus that outbreak in Asia in 2003. Thou-
sands of people were a(cid:11)ected and hundreds of them
were died. A large number of related news articles
poured out from early April to late June in the same
year. Without any doubt, SARS is a salient event dur-
ing this period. Yet, there are still some news articles
mentioning SARS even in today’s news articles occa-
sionally. Certainly, we will no longer consider SARS
is a salient event nowadays. As such, an event may
last for years and may reappear occasionally, but it is
a salient topic for only a certain bounded time interval.
We observed that the appearance of an event is
usually signaled by the intensity of features, where
some features rise sharply in frequencies as the event
emerges, and their frequencies drop dramatically when
the event fades away. We call such kind of features
as salient features. Therefore, by monitoring the fea-
ture distributions in di(cid:11)erent time slices, we are able
to (cid:12)gure out the patterns of the salient events. Hence,
given a user query, we try to analyze whether the fea-
tures (keywords) in the query are salient features. As
a result, the focus of this paper is trying to identify
whether a feature is a salient feature.

There are numerous works related to the problem of
identifying events in a text stream (e.g.
[1, 2, 5, 7, 8,
10, 11, 12]). Due to the space limited, we cannot ad-
dress them in details. Yet, the major di(cid:11)erences is that
most of them focused on extracting all of the events
automatically but ignored the importance of users’ in-
terests. Moreover, this paper contains some new ele-
ments against our previous paper [4], such as dynami-
cally adjust the probability distribution and implement
the whole framework as a prototype system.

Proceedings of the Sixth International Conference on Hybrid Intelligent Systems (HIS'06)0-7695-2662-4/06 $20.00  © 2006Figure 1. The interface of the proposed system { Vise. Readers can freely evaluate the system at this link:
http : ==www:se:cuhk:edu:hk= pcfung=demo=Vise.

2 Proposed System: Vise

Before we continue to discuss how the salient fea-
tures are being identi(cid:12)ed, let us (cid:12)rst de(cid:12)ne some nota-
tions and terminologies. Following the existing works,
the entire text stream, D, is partitioned into N con-
secutive non-overlapping time windows, wi (cid:26) D, such
that w1 [ w2 [ (cid:1) (cid:1) (cid:1) [ wjN j = D and wi \ wj = ; for
wi 6= wj . This formulation is reasonable, since, for in-
stance, each time window can be used to denote one
day or one week. Let Nj be the total number of time
windows that contains the feature fj; ni;j be the total
number of documents that contains the feature fj in
the time window wi.

Let pj be the probability that the time window wi
will contain the feature fj given that fj appears in wi.
In the case where features are emitted at a random
rate, the probability pj would be equal to the average
number of documents containing fj in wi divided by
the number of time windows containing fj. Mathe-
matically,

pj =

1
Nj

N

Xi=1

ni;j
jwij

;

(1)

where jwij is the number of documents in the time win-
dow wi.
Intuitively, for any time window, wi, if the
probability of which contains a feature fj is signi(cid:12)-
cantly larger than pj, it implies that the frequency of
fj in wi is not emitted at a random rate, i.e. fj is
emitted abnormally. As a result, we can conclude that

fj is not a normal feature in wi, i.e. it is a salient fea-
ture. In de(cid:12)ning the term signi(cid:12)cantly larger, one may
attempt to use a speci(cid:12)c threshold to do so. Unfortu-
nately, it is di(cid:14)cult to de(cid:12)ne one single threshold that
is suitable for all features. If the threshold is too small,
then many of the features would be regarded as salient
features. The precision of this stage would be very low.
In contrast, if the threshold is too high, then many of
the true salient features would not be identi(cid:12)ed. The
recall of this stage would be very low. In short, de(cid:12)ning
the term signi(cid:12)cantly larger is not a trivial task.

In this paper, we use binomial distribution to solve
the problem. From the de(cid:12)nition binomial distribution:
if we select m objects at random from X objects (X >
m), where x 2 X would be selected has a probability
of p, then the probability of k out of m objects are
x has a binomial distribution. This distribution maps
to our problem because we can substitute: m by the
number of documents in wi (jwij), k by the number of
documents in wi that contains fj (ni;j ), and p by pj.
As a result, we can model the distribution of fj in wi,
as well as de(cid:12)ne the term signi(cid:12)cantly larger, by using
the binomial distribution [6]:

P (wi; ni;j) =

(1 (cid:0) pj)jwij(cid:0)ni;j ;

(2)

jwij
ni;j (cid:19)

(cid:18)

pni;j
j

where P (wi; ni;j) is the probability of ni;j documents
containing fj in wi. In Equation (2), P (wi; ni;j) would
be maximum if the percentage of documents that con-
tains fj in wi equals pj, i.e. r = pj where r = ni;j=jwij.

Proceedings of the Sixth International Conference on Hybrid Intelligent Systems (HIS'06)0-7695-2662-4/06 $20.00  © 20060.5

0.45

0.4

0.35

0.3

0.25

0.2

0.15

0.1

0.05

0

0

cosine function

0.2

0.4

0.6

0.8

1

(a) The distribution of a
normal feature

(b) The distribution of a
stopword.

(c) The Sigmoid distribu-
tion

Figure 2. Di(cid:11)erent distributions.

If r (cid:28) pj or r (cid:29) pj, then P (fj; wi) would be ap-
proached to 0. Figure 2 (a) illustrates these ideas. 1

Note also that the shape of the binomial distribution
depends on pj only. A larger value of pj would shift
the burst in Figure 2 (a) to the right hand side. If the
frequency of a feature that appears in every window is
very high, for example, if fj is a stopword, then Nj and
ni;j in Equation (2) would both be very large, which in
turns make pj to be very large too. In this case, the
shape of the binomial distribution would be similar to
the one as shown in Figure 2 (b). The main di(cid:11)erence
between Figure 2 (a) and Figure 2 (b) is obvious: the
right hand side of the distribution in Figure 2 (b) can
never reach 0. In other words, we can partition Figure
2 (a) into three regions along the x-axis, while in Figure
2 (b), there are only two regions. Hence, a feature,
fj, will be regarded as a stopword if the shape of its
binomial distribution is similar to the one as shown in
Figure 2 (b).

Let us go back to Figure 2 (a) again. The determi-
nation of whether the feature fj is salient in a speci(cid:12)c
time windows wi can be based on the region where ni;j
drops. If ni;j drops in Region C, then we say that fj
is salient in time windows wi. In contrast, if it drops
in Region A, then we say that it is a normal feature
(i.e. not salient). However, if ni;j drops in Region B,
then the decision becomes fuzzy. If ni;j approaches the
boundary of Region C, the corresponding feature fj
will have a high possibility of becoming a salient fea-
ture. On the other hand, if ni;j approaches the bound-
ary of Region A, fj will likely to be a non-salient fea-
ture; and when ni;j is at the mid-point of Region B,
fj can be either salient or non-salient. Based on the
case analysis, we use a Sigmoid function to determine
whether fj is salient when ni;j drops in Region B. The

1If one considers m is selected without replacement, then the
distribution would become hyper-geometric. Nevertheless, bino-
mial distribution and hyper-geometric distribution will eventu-
ally be the same when the database is large [6]. Furthermore,
hyper-geometric distribution is computational expensive whereas
binomial distribution is much cheaper.

computation is as follows:

P (wi; ni;j) =

1

1 + e(cid:0)x
ni;j
jwij

(cid:1) (cid:18) (cid:0) q

x =

(3)

(4)

where q is the mid-point in the Region B in Fig-
ure 2 (a), and (cid:18) is the slope of the Sigmoid function
which can be readily computed by referring to the
range of Region B. The shape of P (wi; ni;j) is as shown
in Figure 2 (c).

Finally, whenever we have identi(cid:12)ed a time window
where the feature fj is salient, the probability pj in
Equation (1) should be changed as it aims at comput-
ing the probability of a feature appear randomly. Thus,
Equation (1) is modi(cid:12)ed as follows:

pj =

Nj (cid:0)

8i bi

Xi=1 (cid:18)

N

ni;j
jwij

1

P

(cid:1) (1 (cid:0) bi)

:

(5)

(cid:19)

Since the value of Equation (5) depends on the num-
ber of time windows that are identi(cid:12)ed as salient, we
have to repeat the procedure in this section until a
converge is obtained.

3. Experiments

We have archived more than 70,000 news from a lo-
cal English newspaper from 2003/01/01 to 2004/12/31.
All features (words) are stemmed and converted to
lower cases. Apart from the standard stopword list
[3], words that appeared in more than 95% of the total
news articles are also categorized as stopwords. For the
words that appeared less than 0.1% of the total news
are classi(cid:12)ed as noise and are removed. All features are
weighted using the tf (cid:1) idf schema [9]. The total num-
ber of features reminds is about 20,000. Since the news
articles arrrived continuously everyday, wi is naturally
denoted for one day.

According to our subjective evaluation, the pat-
terns of the salient features identi(cid:12)ed are justi(cid:12)able

Proceedings of the Sixth International Conference on Hybrid Intelligent Systems (HIS'06)0-7695-2662-4/06 $20.00  © 2006SARS

iraq

article

e

t

t

a
S
 
y
t
s
r
u
B

e

t

t

a
S
 
y
t
s
r
u
B

e

t

t

a
S
 
y
t
s
r
u
B

04/03

08/03

12/03

04/04

08/04

12/04

04/03

08/03

12/03

04/04

08/04

12/04

04/03

08/03

12/03

04/04

08/04

12/04

Date (mm/yy)

Date (mm/yy)

Date (mm/yy)

(a) SARS

(b) Iraq War

(c) Article 23

Figure 3. The patterns of four selected events

and match our expectation. Here, we select four of
them to have a brief discussion2.

Figure 3 (a) shows the event Special Acute Respira-
tory Syndrome (SARS) which contains one large pe-
riod. SARS is a virus that bursted out in Asia from
early April 2003 to late June 2003, which infected more
than 8,000 people while around 700 of them were died.

Figure 3 (b) shows the event Iraq War which con-
tains two periods:
from early January 2003 to late
February 2003 and from mid March 2003 to late May
2003.
In the former period, strong debates against
whether Iraq contains chemical weapons are carried
Iraq war began at 19th March 2003 and ended
out.
at 1st May 2003.

Figure 3 (c) shows the event Article 23 which con-
tains six periods. Article 23 denotes the events related
to the legislation of the Hong Kong Basic Law Article
23. The major events are: (1) A series of debate in
the legislation Council in from January 2003 to March
2003 (2) The massive demonstration against Article 23
in early July 2003; (3) The announcement of the with-
drawal of Article 23 Legislative in September 2003; (4)
Another massive demonstration in early July 2004 for
the anniversary of the 2003-07-01 demonstration.

4 Summary and Conclusion

In this paper, we have proposed a system called Vise
for browsing and retrieving events in a text stream.
Vise is an extension and an enhancement of one of our
previously proposed system. Extensive experiments
are conducted on top of the prototype system. The
favorable results obtained indicated that Vise is highly
practical and implementation feasible.

2In order to facilitate the discussion, any salient period that
last for less than or equal to 3 days is ignored. Any two salient
periods are merged if their gaps are less than or equal to 3 days

References

[1] J. Allan, R. Papka, and V. Lavrenko. On-line new event de-
tection and tracking. In Proceedings of the 21st Annual In-
ternational ACM SIGIR Conference on Research and De-
velopment in Information Retrieval (SIGIR’98), 1998.

[2] T. Brants and F. Chen. A system for new event detection. In
Proceedings of the 26th Annual International ACM SIGIR
Conference on Research and Development in Information
Retrieval (SIGIR’03), 2003.

[3] C. Fox. Lexical analysis and stoplists. In W. B. Freakes and
R. Baeza-Yates, editors, Information Retrieval Data Struc-
tures & Algorithms, pages 102{1103. Prentice Hall PTR,
1992.

[4] G. P. C. Fung, J. X. Yu, P. S. Yu, and H. Lu. Parameter
free bursty events detection in text streams. In Proceedings
of the 31st International Conference on Very Large Data
Bases (VLDB’05), 2005.

[5] S. A. Macskassy and F. Provost.

Intelligent information
triage.
In Proceedings of the 24th Annual International
ACM SIGIR Conference on Research and Development in
Information Retrieval (SIGIR’01), 2001.

[6] D. C. Montogomery and G. C. Runger. Applied Statistics
and Probability for Engineers. John Wiley & Sons, Inc.,
second edition, 1999.

[7] S. Morinaga and K. Yamanishi. Tracking dynamics of topic
trends using a (cid:12)nite mixture model. In Proceedings of the
10th ACM SIGKDD International Conference on Knowl-
edge Discovery and Data Mining (KDD’02), 2004.

[8] R. Papka and J. Allan. On-line new event detection using
single pass clustering. Technical Report IR{123, Depart-
ment of Computer Science, University of Massachusetts,
1998.

[9] G. Salton and C. Buckley. Term-weighting approaches in
automatic text retrieval. Information Processing and Man-
agement (IPM), 24(5):513{523, 1988.

[10] D. A. Smith. Detecting and browsing events in unstruc-
tured text. In Proceedings of the 25th Annual International
ACM SIGIR Conference on Research and Development in
Information Retrieval (SIGIR’02), 2002.

[11] R. C. Swan and J. Allan. Automatic generation of overview
timelines. In Proceedings of the 23rd Annual International
ACM SIGIR Conference on Research and Development in
Information Retrieval (SIGIR’00), 2000.

[12] Y. Yang, J. G. Carbonell, R. D. Brown, T. Pierce, B. T.
Archibald, and X. Liu. Learning approaches for detect-
ing and tracking news events.
IEEE Intelligent Systems,
14(4):32{43, 1999.

Proceedings of the Sixth International Conference on Hybrid Intelligent Systems (HIS'06)0-7695-2662-4/06 $20.00  © 2006