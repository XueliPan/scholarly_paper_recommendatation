Modeling User Search Behavior

Ricardo Baeza-Yates, Carlos Hurtado, Marcelo Mendoza and Georges Dupret ∗

Center for Web Research

Computer Science Department

Universidad de Chile

{rbaeza,churtado,mmendoza,gdupret}@dcc.uchile.cl

Abstract

Web usage mining is a main research area in Web min-
ing focused on learning about Web users and their interac-
tions with Web sites. Main challenges in Web usage mining
are the application of data mining techniques to Web data in
an efﬁcient way and the discovery of non trivial user behav-
iour patterns. In this paper we focus the attention on search
engines analyzing query log data and showing several mod-
els about how users search and how users use search engine
results.

1. Introduction

Commercial search engines usually recommend numer-
ous results associated with each user query. However, sci-
entiﬁc literature shows that the average number of visited
pages per session is less than 2 and frequently these pages
are shown into the top 20 results [14, 20]. Thus, the rele-
vant piece of the result sets consists only about very few
pages compared with the size of the complete answer col-
lection. Besides, user search behavior could be compared to
TV users navigation behavior in the following sense [22]:
with a little effort, Web users want to achieve fast and pre-
cise results. Based on these facts, search engines should im-
prove the precision of their results and a new generation
of high precision search engines should be designed [6, 5].
Certainly, with a few query words and short searching times
associated, this task is more difﬁcult.

We address this problem from the following point of
view: only if search engine communities know how users
search, they could improve technologies associated with
this process. To improve the precision of the results, search
engines should consider context information about users
such as previous queries and previous clicked documents.

∗

This research was supported by Millennium Nucleus, Center for Web
Research (P01-029-F), Mideplan, Chile.

Scientiﬁc literature show several works focused on this
problem. Despite this fact, we have little understanding
about how search engines affect their own searching process
and how users interact with search engine results. This is the
main idea of this work: to illustrate the users-search engines
interaction as a bidirectional feedback relation. In order to
do that, we understand the searching process as a complex
phenomenon constituted by multiple factors such as the rel-
ative position of the pages in the answer collection, the se-
mantic connections between query words and the time vari-
ables involved, among others.

1.1. Contributions

In this study we present a novel approach to describe and
analyze the Web searching process. Firstly, we present the
pre-processing technique used to work over log data, iden-
tifying sessions and also building relational tables to make
structured queries over the data. Then, we describe the mul-
tiple factors that are related to this process, analyzing the in-
formation in a non aggregated way, considering query key-
words, clicks, ranking and times involved in query session
requests.

Keyword analysis allows to identify properties over the
keyword collection that frequently are considered to make
queries. We identify top query terms and top queries. Also,
we show the sparseness of the keyword query space. Fi-
nally we explore the correlation between query term space
and document term space.

Click analysis allows to identify the effect of the rank-
ing over the user selections. We show number of queries per
query session and number of selection per position, show-
ing the Zipf behavior of the data.

Finally, we introduce three models of user-search en-
gine interactions considering these variables. First, we cal-
culate a predictive model for the number of clicks expected
in a session given that the number of queries formulated
is known. Second, we calculate a Markov model of transi-
tions in a query session. Also we calculate stationary prob-

Proceedings of the Third Latin American Web Congress (LA-WEB’05) 
0-7695-2471-0/05 $20.00 © 2005 IEEE 

abilities for the chain. Finally, we calculate a time distrib-
ution transition model considering times involved between
query formulation and document selection. Results provide
enough evidence to be applied to query and document rec-
ommendation systems.

1.2. Related Work

Web usage mining papers are focused on techniques that
could predict user behavior patterns in order to improve
the success of Web sites in general, modifying for exam-
ple, their interfaces. Some studies are focused also in appli-
cations of soft computing techniques to Web usage mining
[15, 9], in order to work with vagueness and imprecision in
the data. Other kind of works are focused on identify hid-
den relations in the data. Typical problems related are user
sessions and robot sessions identiﬁcation [8, 24].

Web usage mining works focused on log data could be
classiﬁed into two categories: based on the server side and
based on the client side. Works based on the client side re-
trieve data from the user using cookies or other methods,
such as ad-hoc logging browser plugins. For example, Ot-
suka et al. [17] propose mining techniques to process data
retrieved from the client side using panel logs. Panel logs,
such as TV audience ratings, cover a broad URL space from
the client side. As a main contribution, they could study
global behavior on Web communities.

Web usage mining studies based on server log data
present statistics analysis in order to discover rules and non
trivial patterns in the data. Typically, these kind of works are
mainly focused on navigation log data. The main problem
is the discovery of navigation patterns. For example, in or-
der to do that, Chen et al. [7] assume that users choose the
following page determined by the last few pages visited,
concluding how well Markov models predict user behav-
ior. Similar studies consider longer sequences of requests
to predict user behavior [18] or the use of hidden Markov
models [26] introducing complex models of users behavior
prediction. In [12] Deshpande and Karypis propose to se-
lect different parts of different order Markov models to re-
duce the state complexity and improve the prediction accu-
racy. In [20], Silverstein et al. present an analysis of the Alta
Vista search engine log, focused on individual queries, du-
plicate queries and the correlation between query terms. As
a main result, authors show that users type short queries and
select very few pages in their sessions. Similar studies an-
alyze other commercial search engine logs, such as Excite
[23] and AskJeeves [21]. These works address the analy-
sis from an aggregated point of view, i.e., present global
distributions over the data. Other approaches include novel
points of view for the analysis of the data. For example,
Beitzel et al. [4] introduces hourly analysis. As a main re-
sult, authors show that query trafﬁc differ from one topic to

other considering hourly analysis, being these results use-
ful for query disambiguation and routing. Finally, Jansen
and Spink [13] address the analysis using geographic in-
formation about users. Main results of this study show that
queries are short, search topics are broadening and approx-
imately the 50% of the Web documents viewed were topi-
cally relevant.

In the recent years a few papers have tried to classify
the intention of a query. Broder [5] deﬁned three types of
needs: informational, navigational and transactional. In [19]
the last two were reﬁned in 10 more classes. In [27, 16] sim-
ple attributes were used to predict the need behind the query.
Our models also shed light in this problem.

Applications of Web query mining covers several sub-
jects such as query recommendation [3], query expansion
[11, 10] and document recommendation [2, 25, 28]. For a
recently review on applications of query session mining see
[1].

1.3. Outline

The remainder of this paper is organized as follows. In
section 2 we give activity statistics for the query log ﬁles
and the search engine, given also some relevant deﬁnitions.
In section 3, we analyze relations between queries and ses-
sions. In section 4, we work on keyword analysis focused
on query term space features. In section 5 we analyze click
data. Section 6 shows our user - search engine interaction
models considering number of clicks, number of queries in
a session and time variables such as time involved in query
formulations and document selections. Finally, in section 7
we give some conclusions and we identify avenues of fu-
ture work.

2. Preliminaries

2.1. Deﬁnitions

We will use the following deﬁnitions in this paper:

1. Keyword: any unbroken string that describe the query
or document content. Obviously, the keyword set do
not include non useful words like stopwords.

2. Query: is a set of one or more keywords that represent

a user need formulated to a search engine.

3. Click: a document selection in the results of a query.

4. Query instance: a single query submitted to a search
engine in a deﬁned point of time, followed by zero or
more clicks.

5. Query session: following the deﬁnition introduced by
Silverstein et al. [20], a query session consists of a se-
quence of query instances by a single user made within

Proceedings of the Third Latin American Web Congress (LA-WEB’05) 
0-7695-2471-0/05 $20.00 © 2005 IEEE 

a small range of time and all the documents selected in
this range of time. The aim of this deﬁnition is to iden-
tify the user need behind the query, identifying also
the reﬁnement query process. As an additional con-
straint to this deﬁnition, a query session starts with a no
empty query instance. With this deﬁnition, we exclude
from the query session set all the query sessions with-
out document selections. In the following we shall call
this kind of query sessions as empty query sessions.

2.2. Query log data pre-processing

Our log ﬁle is a list of all the requests formulated to a
search engine in a period of time. Search engine requests
include query formulations, document selections and navi-
gation clicks. For the subject of this paper, we only retrieve
from the log ﬁles query formulations and document selec-
tion requests. In the remainder of this study we will call this
query log data.

Using query log data, we identify query sessions using a
query session detection algorithm. Firstly, we identify user
sessions using IP and browser data retrieved from each re-
quest. Then, a query session detection algorithm determine
when a query instance starts a new query session consider-
ing the time gap between a document selection and the fol-
lowing query instance. As a threshold value, we consider 15
minutes. Thus, if a user make a query 15 minutes after the
last click, he starts a new query session.

We organized the query log data in a relational schema.
Main relations on the data model are query session, click,
query, url, popuq (popularity), queryterm and keyword.
Several relations has been formulated in order to answer
speciﬁc queries to this paper, but they are basically views
over the previous relations, thus they are not included in the
data model. Figure 1 shows the data model of the query log
database.

We processed and stored the query log database in an
Athlon-XP at 2.26 GHz, with 1GB of RAM memory and
80 GB of hard disk space, using MySQL 5.0 as a database
engine.

2.3. The search engine and the log data

We work over the data generated by a Chilean search en-
gine called TodoCL (www.todocl.cl). TodoCL mainly cov-
ers the .CL domain and some pages included in the .COM
and .NET domain that are hosted by Chilean ISP providers.
TodoCL collects over three million Chilean Web pages, and
has more than 50,000 requests per day being the most im-
portant Chilean owned search engine.

The query log ﬁle used was collected over 92 days, from
20 April 2004 to 20 July 2004. The table 1 summarize some
log ﬁle statistics.

Query

idQuery
query
numTerms

QueryTerm

idQuery

idKeyword

Keyword

idKeyword
keyword

M:N

QuerySession

Click

idQuerySession
idQuery

idQuerySession
IP
initDate
initTime
numClicks

idUrl
idQuerySession

stayTime

clickTime

clickDate

Popuq

idQuery
idUrl
popularity
ranking

Url

idUrl
url

Figure 1. Data model used in the query log
database.

Successful requests
Average successful requests per day
Successful request for pages
Average successful requests for pages per day
Redirected requests
Data transferred
Average data transferred per day

4,920,463

53,483

1,898,981

20,641
380,922

66.96 gigabytes
745.29 megabytes

Table 1. Statistics that summarize the con-
tents of the log ﬁle considered in our experi-
ments.

3. Sessions and Queries

Following deﬁnitions from section 2.1, query logs reg-
ister 1,524,843 query instances, 1,480,098 query sessions,
102,865 non empty query sessions and 65,282 different
queries with at least 1 related click. Also, the logs register
232,613 clicks over 122,184 different documents. The aver-
age number of queries for all sessions is 1,037 and 1,435 if
we count only non empty sessions. Figure 2 shows the num-
ber of new queries registered in the logs.

Another relevant feature of the data is the occurrence dis-
tribution of the queries in the log. The ﬁgure 3 shows the log
plot of the number of queries per number of occurrences.

Figure 3 shows that over the 80% of the queries are for-
mulated only once. The most common queries are shown in
table 2. They are similar to most frequent queries in other
search engines.

4. Keyword Analysis

An important issue related to this study is to determine
some properties over the keyword collection. For example
the top query terms used to make queries. The table 3 sum-

Proceedings of the Third Latin American Web Congress (LA-WEB’05) 
0-7695-2471-0/05 $20.00 © 2005 IEEE 

Figure 2. Number of new queries registered
in the logs.

occurrences

query
google
sex
hotmail
emule
chat
free sex
cars
yahoo
games
kazaa

682
600
479
342
324
270
261
259
235
232

Table 2. The top 10 queries.

occurrences

frequency

term
chile
sale
cars
santiago
radios
used
house
photos
rent
Chilean

63460
23657
10192
9139
7004
6994
6073
5935
5352
5113

0,34
0,13
0,05
0,05
0,04
0,04
0,03
0,03
0,03
0,03

Figure 3. Log plot of number of queries v/s
number of occurrences.

marize number of occurrences and normalized frequencies
for the top 10 query terms in the log ﬁle.

As we can see in the table, some keywords are related
to universal topics such as sales, photos or rents. Other key-
words are related to domain topics (.CL) such as Chile, San-
tiago or Chilean, and are equivalent to the 40% of the key-
word occurrences over the query log.

As shown in table 2, the most frequent queries do not
share some popular keywords. This means that keywords
as Chile, Santiago or Chilean appear in many queries, but
these queries are not so popular individually. On the other
hand, some speciﬁc keywords that individually are not so
popular (thus, they are not included in the previous table)
are popular as queries (for example, chat, Google and Ya-
hoo queries). Finally, some keywords appear in both tables
such as cars and house. These kind of keywords are good

Table 3. List of the top 10 query terms sorted
by the number of query occurrences in the
log ﬁle.

descriptors of common need information clusters, i.e., they
can be used to pose similar queries (for example, used car,
rent car, old car and luxury car) and, at the same time, have
an important meaning as individual queries.

In the query term space, keywords appearing only once
represent around 60% of the queries. It is important to see
that the query term data follows a Zipf distribution as the
log-plot of the data in ﬁgure 4 shows. Let X be the num-
ber of occurrences of query terms in the whole query log
database. Then the number of queries expected for a known
number of occurrences in the log is given by:

f (X = x) =

b > 0 .

(1)

1
xb

,

Fitting a straight line to the log-plot of the data we can es-
timate the value of the parameter b that is equal to the slope
of the line. Our data shows that this value is 1.079.

It is important to see the data distribution of the terms
that not belong to the intersection. The collection formed by

Proceedings of the Third Latin American Web Congress (LA-WEB’05) 
0-7695-2471-0/05 $20.00 © 2005 IEEE 

Figure 4. Log-plot of the query term collec-
tion.

Figure 6. Log-plot of the text terms that do
not appear in the query collection.

Figure 5. Log-plot of the query terms that do
not appear in the text collection.

Figure 7. Log-plot of the overall text term col-
lection.

text terms that not belong to the query vocabulary is shown
in the log plot of ﬁgure 5. On the other hand, the collection
formed by query terms that not belong to que text vocab-
ulary is shown in the log plot of ﬁgure 6. Both collections
show a Zipf distribution, with b values 1.231 and 1.643, re-
spectively. For sake of completeness we include in 7 the dis-
tribution of all the terms in the text, which has b = 1.408.

Finally, another relevant subject of this study is to show
the correlation between query terms and document terms.
The query vocabulary has 27,766 terms and the text vocab-
ulary has 359,056 terms. Common terms between both col-
lections are only 22,692. The ﬁgure 8 shows an scattering
plot of the query term and the text term collection. The plot

was generated over the intersection of both collections and
comparing the relative frequencies of each term calculated
over each collection. As the plot shows, the Pearson corre-
lation between both collections, 0.625, is moderated.

5. Click Analysis

An important information source that can be useful to de-
scribe user behavior in relation with their queries and their
searches is the click data. Click data could be useful in or-
der to determine popular documents associated to particular
queries. Also could be useful to determine the effect of the
order relation between documents (ranking) and user pref-

Proceedings of the Third Latin American Web Congress (LA-WEB’05) 
0-7695-2471-0/05 $20.00 © 2005 IEEE 

2 and 20 seconds. This represents the 20% of the selected
pages, approximately.

Figure 9. Log plot of number of selections per
query session.

Figure 10. Log plot of number of selections
per position.

6. Query Session Models

6.1. Aggregated query session model

One of the main purposes of this study is to describe
user behavior patterns when a query session is started. We
consider only non empty query sessions in our study, thus
query instances with at least one page selected in their an-
swers. We have focused this analysis considering two inde-
pendent variables: number of queries formulated and num-
ber of pages selected in a query session.

Figure 8. Scattering plot of the intersection
between query term and text term collec-
tions.

erences.

Firstly, we show the number of selections per query ses-
sion in the log plot in ﬁgure 9. Our data shows that over the
50% of the query sessions have only one click in their an-
swers. On the other hand, only the 10% of the users check
over ﬁve answers. The average number of clicks over all
queries is 0,1525 and 1,57 without including empty ses-
sions. The data follows a Zipf distribution where b = 1.027.
One important aspect for this study is to show the effect
of the ranking over the user selections. Intuitively, we ex-
pect that pages that are shown in better ranking places have
more clicks than pages with less score. The position effect
is based on the following fact: the search engine shows their
results ordered by the relevance to a query, thus, users are
inﬂuenced by the position at which documents are presented
(ranking bias). This phenomenon could be observed in ﬁg-
ure 10. As we can see in the ﬁgure, the data follows a Zipf
distribution where b = 1.222. The data shows a discontinu-
ity in positions number ten and twenty. Our data shows that
this discontinuity appears also in positions 30 and 40 and, in
general, in positions that are multiple of 10. TodoCL shows
ten results per page result, thus, this fact cause the discon-
tinuity (interface bias). Finally, the 79.72% of the pages se-
lected are shown in the ﬁrst result page.

Another interesting variable involved in this process is
the visit time per selected page. Intuitively, this variable is
important because the time spent in a selected page indi-
cates a preference. ¿From our data we can see that over the
75% of the visit times per page are less than 2 minutes and
a half. On the other hand, the others pages show higher visit
times. This fact indicate that these pages were very relevant
to the their queries and obviously, this information could be
used in order to improve their rankings. Besides this, an im-
portant proportion of the pages show visit times between

Proceedings of the Third Latin American Web Congress (LA-WEB’05) 
0-7695-2471-0/05 $20.00 © 2005 IEEE 

two, three or four queries, probably the session will have
many clicks. In general, this kind of sessions are associ-
ated to users that do a more exhaustive search pattern, and,
as a consequence, they have less deﬁned information needs
at the begin of the session. Finally, if the session has more
than four queries, probably users will select only one re-
sult. In general, these sessions show less speciﬁc queries at
the begin than at the end. So, the user had the need to re-
ﬁne the query in order to ﬁnd the page that he ﬁnally se-
lects. This kind of sessions are related to users that do not
formulate good quality queries.

6.2. Markovian query session model

Focused in transitions between frequent states in a query
session, in this second approach we build a ﬁnite state
model. Using the query log data, we have calculated prob-
abilities between states making a Markovian query session
model. In order to do that, we have considered the follow-
ing states:

• M -th query formulation: m-th query formulated in the

query session.

• N -th document selection: n-th document selected (n-
th click) for the m-th query formulated in the query
session.

States labeled as n-th document selection are related to
a given query formulated. States labeled as n-th query for-
mulation are related to a previous document selection, ex-
cept the ﬁrst query that starts the query session. Let Xi be
the random variable that model the number of queries for-
mulated after i transitions in a query session and let Yi be
the random variable that model the number of document se-
lected for the last query formulated in the session after i
transitions. Thus, states in a query session model could be
modeled as a pair (Xi = x, Yi = y) representing that the
user has selected y documents after formulating the x-th
query.

In order to calculate it, we consider the data in the query
log ﬁles in a non aggregated way, as the opposite of the ﬁrst
approach. Thus, the events are distributed over the time.
As a consequence, the second model is a discrete-state,
continuous-time Markov Model, being the probability of be
over a deﬁned state (Xi = x, Yi = y) determined by the
Markov chain of the i − 1 previous states.

We have considered the same events as in the ﬁrst ap-
proach but focused on two kind of transitions: the ﬁrst one
considers the probability of doing the m-th query given that
in the m − 1-th query users has selected n pages. The sec-
ond one considers the probability of doing the n-th click
given that the user has formulated the m-th query. We cal-
culate these as follows:

In a ﬁrst approach, we calculated a predictive model
for the number of clicks in a query session when the to-
tal amount of queries formulated is known. Let X = x
be the random variable that models the event of formulat-
ing x queries in a query session and let Y = y be the ran-
dom variable that models the event of selecting y pages in
a query session. This ﬁrst approach models the probabil-
ity of selecting y pages given that the user has formulated
x queries using conditional probability P (Y = y | X =
x) = P (Y =y,X=x)
. In order to do that, we consider the to-
tal amount of occurrences of the events in the query session
log ﬁles. Thus, the data is depicted in an aggregated way, i.e.
this ﬁrst approach considers a predictive model for the to-
tal amount of queries and clicks in a query session. The ﬁg-
ure 11 shows the ﬁrst model.

P (X=x)

Figure 11. Predictive model for the number of
clicks in a query session with a known num-
ber of queries formulated.

As we can see, if a user formulates only one query, in
general he will select only one page. Probably, this fact is
caused by a precise query, i.e., the user has the need de-
ﬁned at the begin of the query session. As a consequence
of the quality of the search engine, when the query is very
precise, the user ﬁnds the page in few trials. We will say
that this kind of queries are of good quality, because they
enable users to ﬁnd their pages quickly. If the session has

Proceedings of the Third Latin American Web Congress (LA-WEB’05) 
0-7695-2471-0/05 $20.00 © 2005 IEEE 

Figure 12. Markovian transition query session model.

P (Xi = m | Xi−1 = m − 1, Yi−1 = n) =
P (Xi−1=m−1,Yi−1=n) ,

P (Xi=m,Yi=n)

P (Yi = n | Xi−1 = m, Yi−1 = n − 1) =
P (Xi−1=m,Yi−1=n−1) .

P (Xi=m,Yi=n)

The initial event in query sessions is to formulate the ﬁrst
query and to make the ﬁrst click. After k steps, the proba-
bility of be over a determined state could be calculated us-
ing the Markovian transition matrix, M , of k-th order, M k,
and the initial distribution vector P (0) formed by the prob-
abilities of being at determined states at the beginning of
the process. The set of probabilities of be over a state in the
chain compounds the probability vector of k order given by
P (k) = M k × P (0). After a large number of transitions,
the P (k) vector converges to the (cid:2)v ﬁxed point vector of the
process, the stationary probabilities of the chain, that sat-
isfy the ﬁxed point property (cid:2)v = M × (cid:2)v. Of course, the
ﬁxed point vector has positive values only for ﬁnal states.

Using our model, we verify that after 10 steps the P (k)
vector converge to the ﬁxed point vector. As an example of
the convergence, in the following matrix the i-th row repre-
sents the probabilities after i + 1 steps. Each column rep-
resents ﬁnal states, considering only states from 1 to 8, be-
cause the probability of be over all the other states is close
to zero. We show only the ﬁrst ﬁve steps and we start from
k = 2 (for k = 1 the vector is null and only the transi-
tive state (X1 = 1, Y1 = 1) is attainable):

0, 41
0, 41
0, 41
0, 41
0, 41

0

0, 14
0, 14
0, 14
0, 14

0
0

0, 07
0, 07
0, 07

0
0

0, 05
0, 04
0, 04

0
0

0, 04
0, 05
0, 05

0
0

0, 07
0, 08
0, 08

0
0

0, 03
0, 04
0, 05

0
0
0

0, 01
0, 02

As we can see, at the begin, only the ﬁrst states are possi-
ble but after few steps, probabilities are propagated over the
complete chain. Finally, the ﬁxed point vector for all the ﬁ-
nal states is:

Proceedings of the Third Latin American Web Congress (LA-WEB’05) 
0-7695-2471-0/05 $20.00 © 2005 IEEE 

  b   = 1,84
avg = 107 [s]

α = 1,6
θ  = 215

α = 1,6
θ  = 170

First
click

Second

click

Third
click

α = 1,5
θ  = 320

α = 1,5
θ  = 280

  b   = 1,969
avg = 98 [s]

α = 1,6
θ  = 225

α = 1,6
θ  = 175

First
click

Second

click

Third
click

α = 1,5
θ  = 320

α = 1,5
θ  = 280

First
query

α = 1,6
θ  = 320

Second
query

α = 1,6
θ  = 310

  b   = 1,885
avg = 99 [s]

α = 1,6
θ  = 235

α = 1,6
θ  = 185

Third
query

First
click

Second

click

Third
click

Figure 13. Time distribution query session
model.

(cid:2)v = (0, 41; 0, 14; 0, 07; 0, 04; 0, 05;

0, 08; 0, 05; 0, 02; 0, 01; 0, 005; 0, 01
0, 02; 0, 01; 0, 005; 0, 002; 0, 002; 0, 005
0, 015; 0, 007; 0, 006; 0, 003; 0, 001; 0, 004
0, 007; 0, 005; 0, 001; 0, 001; 0; 0, 01).

In ﬁgure 12 we show the second model. Final states are

depicted with concentric circles.

6.3. Time distribution query session model

In a third model we address the problem of determine
the time distribution between state transitions. Each transi-
tion time follows a distribution that could be determined us-
ing the log data. In order to do that, we measure the time
between events in the query logs considering two kinds of
transitions: the time distribution in query sessions between
the query formulation and the following document selec-
tions and the time distribution between the clicks and the
following query formulation.

For transitions between clicks and the followings query
formulations, the data shows that users need to take higher
times in order to formulate their queries. Intuitively, a query
formulation time is distributed around an expected value
and for higher times the probability density follows an
exponential distribution. To calculate time distribution for
this kind of transitions, we use the two parameter Weibull
density function. Let t be the random variable that mod-
els the time involved in a query formulation. Then the

First click

Second click

Third click

To - From
Second click
Third click
Second query
Third query

192
151
286
277

201
156
288
288

210
165
252
252

Table 4. Expected values (in seconds) for the
Weibull distributions involved in the query
session model.

probability density function of t is given by f (t; α, θ) =
θα tα−1e−( t
α
t > 0, α, θ > 0. In ﬁgure 13 we show the
α, θ parameters values for each transition.

θ )α ,

Transitions between queries and clicks are highly corre-
lated with the search engine interface effect. As we saw in
section 5, the search engine interface produces a bias in the
searching process caused by the relative position of the doc-
uments in the ranking. Intuitively, we can guess that times
involved in the searching process are also correlated with
the ranking. As we can see in the data, this assumption is
true for the ﬁrst click and these kind of transitions follows
Zipf distributions. In ﬁgure 13 we show the b parameter
value for each transition considered. We can see that val-
ues are independent of the query order. However, for transi-
tions to second or higher order clicks, time distribution fol-
lows a Weibull as in the previous case. Intuitively this is
a consequence of the searching time involved that changes
the expected value from zero to higher values. As is well
known, the expected value of a Weibull random variable is
(cid:3)
given by θ × Γ
. The expected values for each tran-
sition are given in table 4.

(cid:2)
1 + 1
α

Times involved in query formulation are higher if the
preceding states are document selections of low order. It is
important to see that all these times are biased to the pre-
vious viewing time involved. In order to unbias the results,
we must subtract the expected values for the viewing doc-
ument times to the expected values of query formulations.
However expected values for Zipf distributions are close to
zero, thus the subtraction do not affect ﬁnal results.

7. Conclusion

We have proposed models to describe user behavior in
query sessions using query log data. The models proposed
are simple and provides enough evidence to be applied to
Web search systems. Our results show that Web users for-
mulate short queries, select few pages and an important pro-
portion of them reﬁne their initial query in order to retrieve
more relevant documents. Query log data, in general, show
Zipf distributions such as for example clicks over ranking
positions, query frequencies, query term frequencies and
number of selections per query session. Moreover query

Proceedings of the Third Latin American Web Congress (LA-WEB’05) 
0-7695-2471-0/05 $20.00 © 2005 IEEE 

space is very sparse showing for example that in our data
the 80% of the queries are formulated only once.

Currently, we are working on the use of this knowledge
in query recommendation systems and document ranking
algorithms. Using data mining techniques such as cluster-
ing we can identify semantic connections between queries
solving the problem of the sparseness in the data. Then, us-
ing no sparse data we can build query recommendation sys-
tems based on similarity measures between queries [3]. Be-
sides this, if we consider documents associated to each clus-
ter we can build document recommendation systems [2].

Future work includes studies about features of informa-
tion needs dynamics, for example how user needs changes
in time and how this knowledge could be applied to im-
prove the precision in Web search engines results.

References

[1] R. A. Baeza-Yates. Applications of web query mining. In
ECIR 2005, Santiago de Compostela, Spain, March 21-23,
volume 3408 of Lecture Notes in Computer Science, pages
7–22. Springer, 2005.

[2] R. A. Baeza-Yates, C. A. Hurtado, and M. Mendoza. Query
In AWIC 2004,
clustering for boosting web page ranking.
Cancun, Mexico, May 16-19, volume 3034 of Lecture Notes
in Computer Science, pages 164–175. Springer, 2004.

[3] R. A. Baeza-Yates, C. A. Hurtado, and M. Mendoza. Query
recommendation using query logs in search engines.
In
EDBT 2004 Workshops, Heraklion, Crete, Greece, March
14-18, volume 3268 of Lecture Notes in Computer Science,
pages 588–596. Springer, 2004.

[4] S. M. Beitzel, E. C. Jensen, A. Chowdhury, D. Grossman,
and O. Frieder. Hourly analysis of a very large topically cat-
egorized web query log. In SIGIR’04, pages 321–328, New
York, NY, USA, 2004. ACM Press.

[5] A. Z. Broder. A taxonomy of web search. SIGIR Forum,

36(2):3–10, 2002.

[6] A. Z. Broder and A. C. Ciccolo. Towards the next genera-
tion of enterprise search technology. IBM Systems Journal,
43(3):451–454, 2004.

[7] Z. Chen, F. Lin, H. Liu, W.-Y. Ma, and L. Wenyin. User
intention modelling in web applications using data mining.
World Wide Web, 5(2):181–192, 2002.

[8] R. Cooley, B. Mobasher, and J. Srivastava. Data preparation
for mining world wide web browsing patterns. Knowledge
and Information Systems, 1(1):5–32, 1999.

[9] F. Crestani and G. Pasi. Handling vagueness, subjectivity,
and imprecision in information access: an introduction to the
special issue. Inf. Process. Manage., 39(2):161–165, 2003.

[10] H. Cui, J. Wen, J. Nie, and W. Ma. Probabilistic query ex-
pansion using query logs. In Proceedings of the 11th WWW
conference, pages 325–332. ACM Press, 2002.

[11] H. Cui, J. Wen, J. Nie, and W. Ma. Query expansion by min-
ing user logs. IEEE Transaction on Knowledge and Data En-
gineering, 15(4):829–839, July/August 2003.

[12] M. Deshpande and G. Karypis. Selective markov models
In 1st SIAM Data Min-

for predicting web-page accesses.
ing Conference, April 5-7, Chicago, USA, 2001.

[13] B. J. Jansen and A. Spink. An analysis of web searching by
european alltheweb.com users. Information Processing and
Management, 41(2):361–381, 2005.

[14] M. Jansen, A. Spink, J. Bateman, and T. Saracevic. Real
life information retrieval: a study of user queries on the web.
ACM SIGIR Forum, 32(1):5-17, 1998.

[15] M. Lalmas. Information Retrieval: Uncertainty and Logics.

Kluwer Academic Publishers, Norwell, MA, USA, 1998.

[16] U. Lee, Z. Liu, and J. Cho. Automatic identiﬁcation of user
goals in web search. In Fourteenth International World Wide
Web Conference, May 10-14, Chiba, Japan, pages 391–400.
ACM Press, 2005.

[17] S. Otsuka, M. Toyoda, J. Hirai, and M. Kitsuregawa. Extract-
ing user behavior by web communities technology on global
web logs. In DEXA, pages 957–988, 2004.

[18] J. Pitkow, H. Schtze, T. Cass, R. Cooley, D. Turnbull, A. Ed-
monds, E. Adar, and T. Breuel. Personalized search. Com-
mun. ACM, 45(9):50–55, 2002.

[19] D. Rose and D. Levinson. Understanding user goals in web
search. In Thirteenth International World Wide Web Confer-
ence, May 17-22, 2004, New York, USA, pages 13–19. ACM
Press, 2004.

[20] C. Silverstein, H. Marais, M. Henzinger, and M. Moricz.
Analysis of a very large web search engine query log. SI-
GIR Forum, 33(1):6–12, 1999.

[21] A. Spink and O. Gunar. E-commerce web queries: Excite

and ask jeeves study. First Monday, 6(7), 2001.

[22] A. Spink, D. Wolfram, B. Jansen, and T. Saracevic. Search-
ing the web: the public and their queries. Journal of the
American Society of Information Science and Technology,
52(3):226–234, 2001.

[23] J. L. Xu and A. Spink. Web research: The excite study. In
Proceedings of WebNet 2000, San Antonio, Texas, USA, Oc-
tober 30 - November 4, pages 581–585. AACE, 2000.

[24] G. Xue, H. Zeng, Z. Chen, W. Ma, and C. Lu. Log mining to
improve the performance of site search. In WISE Workshops
2002.

[25] G.-R. Xue, H.-J. Zeng, Z. Chen, Y. Yu, W.-Y. Ma, W. Xi,
and W. Fan. Optimizing web search using web click-through
data. In CIKM ’04, pages 118–126, New York, NY, USA,
2004. ACM Press.

[26] A. Ypma and T. Heskes. Automatic categorization of web
pages and user clustering with mixtures of hidden markov
models. In WEBKDD 2002, Edmonton, Canada,July 23, vol-
ume 2703 of Lecture Notes in Computer Science, pages 35–
49. Springer, 2003.

[27] H.-J. Zeng, Q.-C. He, Z. Chen, W.-Y. Ma, and J. Ma. Learn-
ing to cluster web search results. In SIGIR ’04, pages 210–
217, New York, NY, USA, 2004. ACM Press.

[28] D. Zhang and Y. Dong. A novel web usage mining approach
for search engines. Computer Networks Elsevier, pages 303–
310, April 2002.

Proceedings of the Third Latin American Web Congress (LA-WEB’05) 
0-7695-2471-0/05 $20.00 © 2005 IEEE 

