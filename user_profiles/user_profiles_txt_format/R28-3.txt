Click-graph Modeling for Facet Attribute Estimation of Web

Search Queries

Sumio Fujita

Yahoo! JAPAN Research
Midtown tower, Akasaka
Tokyo 107-6211, Japan

Keigo Machinaga

Yahoo! JAPAN

Midtown tower, Akasaka
Tokyo 107-6211, Japan

sufujita@yahoo-corp.jp

kmachina@yahoo-corp.jp

Georges Dupret

Yahoo! Labs

701 First Avenue, Sunnyvale

CA, 94089-0703, USA

gdupret@yahoo-inc.com

ABSTRACT
We use clickthrough data of a Japanese commercial search
engine to evaluate the similarity between a query and a facet
category from the patterns of clicks on URLs. Using a small
number of seed queries, we extract a set of topical words
forming search queries together with the same facet direc-
tive words, e.g., ‘recipe’ in ‘curry recipe’ or ‘apple pie recipe’.
We used a PageRank-like random walk approach on query-
URL bipartite graphs called \Biased ClickRank" to prop-
agate facet attributes through click bipartite graphs. We
noticed that queries to URL links are too sparse to cap-
ture query variations whereas queries to domain links are
too coarse to discriminate among the di(cid:11)erent usages of
broadly related queries. We introduced edges and vertices
corresponding to the decomposed URL paths into the click
graph to capture the click pattern di(cid:11)erences at an appropri-
ate granularity level. Our expanded graph model improved
recalls as well as average precision against baseline graph
models.

Categories and Subject Descriptors
H.3.3 [Information Storage and Retrieval]: Information
Search and Retrieval

General Terms
Algorithm, Experimentation

Keywords
Web search, click through data, facet creation, query classi-
(cid:12)cation.

1.

INTRODUCTION

Search engines record user interactions with search results
in clickthrough logs. These typically consist of information
such as search query string, time stamp, browser identi(cid:12)er,

Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for pro(cid:2)t or commercial advantage and that copies
bear this notice and the full citation on the (cid:2)rst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speci(cid:2)c
permission and/or a fee.
RIAO’10 2010, Paris, France
Copyright CID.

clicked URLs, and rank positions. The click information is
considered to be an implicit con(cid:12)rmation of URL relevance
expressed by users. This has been used for optimizing search
ranking [14, 12, 10] although clicks are biased by the rank
positions of the URLs. To use such information for search
assistance functions, Beeferman and Berger converted the
clickthrough data into query-URL bipartite graphs where
links represent the frequency of clicks on URLs as a response
to the query [6] and they merged similar nodes on the ba-
sis of link patterns. The queries for which the same URLs
are clicked are presumed to play similar roles in information
seeking activities, so this is applicable to query suggestions
or recommendations where query-to-query similarities need
to be taken into account. Another approach is query classi(cid:12)-
cation [8] or query intent estimation [15], which use training
or seed data and learn classi(cid:12)ers to discriminate the inten-
tions behind queries, which are typically task-related.

We decided instead to take advantage of an obvious clue
to user intention behind the query: the facet directive words
sometimes present in the query. Examples of such facets are
\recipe" in a query like \pizza recipe" or \image" in \Ei(cid:11)el
tower image". These facets are sometimes used as a verti-
cal search indicator in commercial search engines like Yahoo
search [3] or Yahoo Japan search [2]. For example, the facet-
less query \curry" in Table 1 is related to a curry museum, a
curry restaurant (ichibanya), and a spice company (sbfood),
whereas \curry recipe" is speci(cid:12)c to the recipe-specialized
sites such as \recipe.nestle.co.jp", \recipe.gourmet.yahoo.co.jp",
or \foods.co.jp". The query \curry recipe" clari(cid:12)es the user’s
intention. Therefore, URLs about recipes are clicked rather
than URLs about restaurants, museums, history, etc. The
second part of a facet query does not form a noun phrase
with the preceding word but speci(cid:12)es the search intention.
The (cid:12)rst part of the query is referred to as the \topic" and
the second part as the \facet" or \facet directive" word. The
(cid:12)rst part indicates the searcher’s domains of interest whereas
the second part helps to focus the search intention.
It is
easy to syntactically identify the facet directive in Japanese
queries because searchers normally do not put a space in
noun phrases, but they separate the facet directive word
from the topic word by a space.

The question that we address in this work is how, start-
ing from the click patterns of a query like \curry" or \curry
recipe", can we relate it to other queries for the same facet
like \pasta" or \pasta recipe" on the basis of click patterns in
order to retrieve the topic words associated with the facet.
We found that a random walk approach through the query-

190Table 1: Examples of URLs clicked for ‘curry’ and
‘curry recipe’.

Curry
http://www.currymuseum.com/
http://www.ichibanya.co.jp/
http://www.sbfoods.co.jp/
Curry recipe
http://www.recipe.nestle.co.jp/kind/curry/
http://recipe.gourmet.yahoo.co.jp/
http://www.foods.co.jp/curry/

URL click graphs, similar to the topic sensitive PageRank
algorithm for a web graph, is an e(cid:11)ective method. To the
best of our knowledge, this is the (cid:12)rst study to expand click
graphs in this way. This method allows a massive number
of queries and URLs to be annotated with facet directives.
This can be used to provide search assistance functions such
as query suggestion/recommendation or directly to improve
search ranking.

The rest of the paper is organized as follows. Section 2
brie(cid:13)y surveys previous related studies. Section 3 presents
an analysis of facet queries in Japanese web search. In Sec-
tion 4, we propose an e(cid:11)ective and e(cid:14)cient adaptation of
the biased PageRank [13] to bipartite graphs and show how
it improves the e(cid:11)ectiveness over the baseline model of Li et
al. [15] with Japanese clickthrough data. In Section 5, we
propose expanding query-URL bipartite graphs by taking
the URL structure into account. This expanded graph can
capture the (cid:12)ner relations between queries and URLs. We
compare this with two baseline models, namely query-URL
and query-domain bipartite graphs. Section 6 presents our
evaluation results and analysis. Section 7 concludes with a
brief summary of the main points.

2. RELATED WORK

Although clicks on a document are strongly biased by the
document position in the ranking, suitable methods over-
come this problem, leading to search engine ranking algo-
rithm improvements [14, 12, 10].

Beeferman and Berger studied web search query logs and
clustered clickthrough data by iterating the following steps:
(a) combining the two most similar queries and (b) com-
bining the two most similar URLs [6]. The generated clus-
ters were used to enhance query suggestion functions assist-
ing web searchers. Since this approach is essentially based
on clustering rather than classi(cid:12)cation,
it is not directly
applicable to the annotation of queries or URLs with cer-
tain facets. Baeza-Yates et al. tried a query recommenda-
tion based on query clustering by the similarity of clicked
URLs [4]. Dupret and Mendoza also tried a query rec-
ommendation by using clickthrough data but focused on
session analyses [11]. Xue et al. [20] studied click data to
create metadata for web pages. They estimated document-
to-document similarities on the basis of co-clicked queries,
and query strings, used as metadata or tags, were then
spread over similar documents. Craswell and Szummer, who
used click data for image retrieval, experimented with back-
ward random walks [9]. Their method is based on query-to-
document transition probabilities on the click graph. Baeza-

Yates and Tiberi tried to extract semantic relations between
queries on the basis of the set relations of clicked URLs [5].
Rose and Levinson [19] studied query log analysis to iden-

tify users’ search goals. They reorganized Broder’s trichotomy
of web search types [7] and replaced \transactional" by \re-
source" queries. It is worth noting that \resource" queries
tend to collocate with facet-speci(cid:12)c directive words such as
\download", \install", or \mpeg". Nguyen and Kan studied
faceted query classi(cid:12)cation into schemes of attributes such as
\ambiguity", \authority sensitivity", \temporal sensitivity",
and \spatial sensitivity" [17]. They mapped their schemes
to the goal classi(cid:12)cations of Rose and Levinson.

We were mostly inspired by Li et al., who used a set of
queries as a seed set and propagated these labels through the
click graph. They applied this method to semi-supervised
query classi(cid:12)cations of two intent classes, namely product
intent and job intent [15]. Their method uses both learning
with click graphs and content-based regularization, but we
evaluate only their click graph learning model as the base-
line. We cover this in more detail in the next section. In
their bipartite graphs, they used the shrunk domain name
instead of the whole URL, and we used a similar approach.
Biased PageRank was (cid:12)rst suggested in [18] as a person-
alized variation of the PageRank algorithm, and Haveliwala
explored the idea in [13].

3. FACETS IN JAPANESE WEB SEARCH

As mentioned in Section 1, Japanese web searchers do
not put a white-space in noun phrases because of the ag-
glutinative nature of the Japanese language, but they do
when they add di(cid:11)erent noun phrases as supplementary in-
formation about their needs. We analyzed subsets of one-
day clickthrough data of a popular Japanese web search en-
gine. As indicated in Table 2, such query structures ac-
count for a signi(cid:12)cant proportion of all queries. The large
set in this table consists of click data of the same query-URL
pairs registered more than twice in one day, from which two
sub datasets were extracted. The sets 1M.set and 100K.set
are smaller subsets used for the empirical experiments in
Section 6; details are given in Table 6. The facet queries
amounted to 36.4% of the queries in the large set. Note that
low-frequency tail queries were excluded from the subsets
used in the experiments despite the fact that facet queries
were more frequent among them.

Table 2: Statistics of facet queries.

Unique queries
Unique facet queries
Unique topics
Unique facet directives

Large set
2,172,079
789,579
210,784
152,927

1M.set
403,574
103,165
40,029
27,699

100K.set
51,664
6,834
4,049
2,899

When weighted by their frequencies, facet queries accounted

for a comparatively small proportion, as shown in Table 3.
The parts of facet queries were also used as independent
queries. The click frequencies of these constituent parts sub-
mitted as independent queries are listed for 1M.set. The sum
of facet queries and these constituent queries was 35,674,916,
as much as 94.1% of the clicks for all queries in 1M.set. We
can see that the facet structure is a frequently used style for
composing a web search query.

191Table 3: Click frequencies of facet queries, con-
stituent topics and constituent facet parts in 1M.set.

Query patterns
Facet queries
Topic part only of facet queries
Facet part only of facet queries
All queries

Total click freq
6,422,617
17,733,252
11,519,047
37,893,860

It seems quite natural to presuppose some similarity in in-
formation needs between facet queries and their constituents.
We compared sets of URLs clicked in response to three types
of queries:
the facet query itself (FQ), constituent topic
part (TP), and constituent facet part (FP) in 1M.set. We
checked whether or not the intersections of their URL sets
were empty. As shown in Table 4, F Q \ T P was not empty
in 53,935 (52.3%) out of 103,165 facet queries. This clearly
shows that the facet queries share some search intentions
with their constituent topic parts.

Table 4: Number of non-empty intersections among
sets of URLs clicked in response to queries.

URL sets Number of non-empty sets
53,935
F Q \ T P
24,622
F Q \ F P
7134
T P \ F P
all FQ
103,165

4. BIASED CLICKRANK ON THE CLICK

GRAPH

Assume that U is a set of URLs, Q is a set of queries, and
V = (U [ Q) is the set of vertices of the click graph. The
click graph is a bipartite graph de(cid:12)ned as (V; E). Each edge
in E represents registered clicks on a URL in U in response
to a query in Q. This graph is represented by the adjacency
matrix A 2 NjVj(cid:2)jVj, where element Ai;j is the click count of
either URL i for query j or URL j for query i. The edges are
bidirectional, i.e., once a URL has been clicked for a query,
a bidirectional edge is made. We normalize the adjacency
matrix by out degrees, i.e., the sum of each row, to obtain
transition matrix B as

Bi;j =

Ai;j
j0 Ai;j0

(1)

P

Because the edges are bidirectional, matrix A is symmet-
ric, whereas matrix B is not since the denominator, i.e., the
out-degree of each vertex is di(cid:11)erent for each row. Unlike
the inter-page hyper-link structures of web PageRank com-
puted in [18], out-degrees in such click graphs are always
strictly positive since the edges and vertices are created only
when a click event is observed.

Let S be a subset V representing a set of seed queries or
URLs corresponding to a speci(cid:12)c search intention. Vector s
of dimension jVj is de(cid:12)ned as

si =

1=jSj
0

(

(Vi 2 S)
(Vi 62 S)

(2)

where Vi is the query or URL indexed by i in matrix A. In
this paper, we use only queries as input seed sets. The score
of each vertex is computed iteratively according to

m(k) = (cid:11)Bm(k(cid:0)1) + (1 (cid:0) (cid:11))s with (cid:11) 2]0; 1[

(3)

until convergence is achieved, i.e., until m(k) = m(k(cid:0)1) for
all k beyond a certain value. We set the initial value m(0) to
s as well. We call the stationary solution m(cid:3). As B is row
stochastic, it has a principal eigenvalue of 1; therefore, the
stationary distribution of the Markov process correspond-
ing to stochastic matrix B is the principal eigenvector of B.
The closed subset of vertices reachable from the seed set is
irreducible and aperiodic; hence, the Markov process of this
closed subset is ergodic. Therefore, the ergodic theorem
guarantees convergence to the unique stationary distribu-
tion [16], and the elements in m corresponding to the ver-
tices unreachable from the seed set remain zero. We ranked
each query in the click graph in descending score order (this
ranking excludes the seed queries). This process is equiva-
lent to the biased PageRank, i.e., a random walk consisting
of a transition to a neighbor vertex with probability (cid:11) and
a random teleportation to a seed vertex with probability
(1 (cid:0) (cid:11)). We call such an adaptation of biased PageRank to
the click graphs ‘biased ClickRank’.

The idea of biased PageRank was examined by Haveliwala
in his topic-sensitive PageRank paper [13]. The traditional
PageRank uses a random walk with a random teleportation
and gives a general importance score to each page on the
web graph whereas topic-sensitive PageRank uses a biased
teleportation to a subset of vertices representing a topic.
Consequently, the scores re(cid:13)ect not only the importance but
also the topical relevance to the seed set.

For comparison, Li et al. normalized the scores in the

path from a query via clicked URLs to other queries.

Di;j =

0
(P

j0 (AAT )i;j0

(i = j)
(i 6= j)

B0 = D(cid:0)1=2A

m(k) = (cid:11)B0B0T m(k(cid:0)1) + (1 (cid:0) (cid:11))s

(4)

The inconvenience of this method is that the computation
of D is very expensive, which limits the size of graphs that
can be handled in practice. Moreover, this normalization is
sensitive to URLs with many clicks because it normalizes the
scores by the sum of the scores of query vertices neighboring
the target query via any URL.

5. USING URL STRUCTURES

A URL and a query tied by a click event tend to have
a strong semantic relation, but the associated click graph
is sparse. Weak relations are comparatively di(cid:14)cult to ex-
tract. For example, the URLs of the Ministry of Foreign
A(cid:11)airs along with the queries used to search for it are shown
in Figure 1.
‘England’, ‘Ukraine’, and ‘USA’ have no link

192Figure 1: Example of graphs of queries and URLs. Figure 2: Example of graphs of queries and domains.

Figure 3: Example of graphs of queries and URL paths.

to each other via any URL. In an attempt to improve on
this basic model, referred to as the URL node model, Li et
al. [15] used the domain name instead of the URL, as illus-
trated in Figure 2. In this domain node model the queries
‘visa’, ‘passport’, and ‘mofa’1 link directly to the domain
name. The problem now is that all queries have a tie of
the same strength to the domain name irrespective of the
semantic relations. In order to capture di(cid:11)erent granular-
ity levels, we propose using the hierarchical structure of the
URL instead by sequentially extracting the substrings on the
left side of the URL. An example of such an expansion by
supplementing pre(cid:12)x URLs, which we propose in this paper,
namely the hierarchy node model, is shown in Figure 3. The
query is considered as having weighted relations with each
level of the hierarchy attached to the URL. For example, the
query ‘England’ is related to each pre(cid:12)x of the clicked URL
with the same weight as in Table 5.

We will show that this model can capture the seman-
tic relation among queries. We derived di(cid:11)erent weighting
schemes to quantify the relation between a query and the
URL hierarchy. We used the following notation.

BW stands for baseline weighting. Edges with a weight
equal to the original query are added to the URL weight
extracted from the transition matrix B. The original
edge between the query and the full URL retains its

1MOFA: Ministry of Foreign A(cid:11)airs

original weighting and expanded edges are given the
same weight. In this scheme, clicks on a URL with a
deeper hierarchy have comparatively more impact.

UW stands for uniform weighting. Here, the original weight
is distributed evenly on the edges generated by the se-
quential expansion. The sum of the edge weights now
equals the original weight.

LDW stands for linearly decaying weighting. Here, edges
with a linearly decaying weight are added while the
su(cid:14)x of the original URL is shrunk. The sum of the
edge weights equals the original weight.

EDW stands for exponentially decaying weighting. Edges
receive an exponentially decaying weight while the suf-
(cid:12)x of the original URL is shrunk. The sum of the edge
weights equals the original weight.

LDW applies the following weight to the click frequency.

LDW = f req (cid:1)

p

n(n + 1)=2

(5)

where p is the position relative to the root hierarchy and n
is the depth of the leaf hierarchy. For example, p = 5 and
n = 5 for the (cid:12)rst URL in Table 5 and p = 1 and n = 5 for
the last URL.

193Table 5: Example of supplemented URLs and their weights (original frequency was 1).

Original and supplemented URLs
http://www.mofa.go.jp/mofaj/area/uk/index.html
http://www.mofa.go.jp/mofaj/area/uk/
http://www.mofa.go.jp/mofaj/area/
http://www.mofa.go.jp/mofaj/
http://www.mofa.go.jp/

BW UW LDW EDW
0.5161
0.258
0.129
0.0605
0.0322

0.3333
0.2667
0.2
0.1333
0.0667

0.2
0.2
0.2
0.2
0.2

1
1
1
1
1

EDW is given by

EDW = f req (cid:1)

(6)

an+1(cid:0)p
i=1 ai

n

P

where a is a smoothing parameter that adjusts the decaying
curve; in this paper, we used 0.5.

6. EVALUATION

6.1 Experimental settings

We selected one million edges with high click frequen-
cies from one-day clickthrough data of a popular Japanese
web search engine. Some statistics of this data set, 1M.set,
are given in Table 6. We also extracted a smaller subset,
100K.set, for comparison with the baseline method. This
subset was kept small for ease of computation.

‘image’,

‘fashion’,

Seed sets for 1M.set consisted of seven facet words, namely
‘sec-
‘download’,
ond hand’, and ‘stock price’, which are frequently used in
Japanese queries. Queries that included one of these facet
directive words as the last constituent were extracted from
the query log data. As the 100K.set contains only a small
number of examples, we used only two facet words for it.

‘reservation’,

‘recipe’,

Examples of seed data for ‘fashion’, ‘recipe’, and ‘reserva-
tion’ are given in Table 7. In our logs, each of these queries
was issued at least once together with a facet directive word.
We used these queries to form various test sets. We parti-
tioned the queries into two parts: a seed and a test set. The
seed set was used to compute the biased ClickRank vectors,
and the test set was reserved for evaluation. Evaluation con-
sists of a two-fold cross validation against seed/test sets. For
the seed sets, queries both with and without facet directive
words were used. For evaluation, only queries without facet
directive words were used. Following Haveliwala [13], we set
(cid:11) to 0:25 in Eq. 3.

The biased ClickRank algorithm gives a score to each
query as well as to each URL in the bipartite graph. We
used the query score to rank the queries. After excluding
seed queries and queries with test facet directive words2, we
evaluated the query ranking in terms of standard evaluation
measures for information retrieval such as recall at 1000,
precision at 100, and average precision [1].

6.2 Results

The top-ranked queries for the "recipe" seed set are given
in Table 8. Most queries were related to cooking, cuisine, or

Table 6: Statistics of experimental data: numbers
of nodes or edges.

Types of nodes/edges
Query nodes
URL nodes
Query-URL edges
Each URL hierarchy node
Supplemented edges
Domain nodes
Query to domain edges
Seed/test queries

1M.set
403,574
686,055
1,000,000
1,054,717
2,464,690
225,728
932,192
4344

100K.set
51,664
74,370
100,000
111,962
202,497
41,603
94,845
354

Table 9: Comparison of the method of Li et al. and
biased ClickRank using 100K.set measured by re-
call@1000 and average precision (in parentheses).
Both models use the domain node model. Numbers
of relevant queries are in brackets.

Facet label [#rel]
Image [220]
Recipe [134]
Macro avg.

Li et al.

0.5909 (0.0670)
0.5746 (0.0778)
0.5828 (0.0724)

Biased ClickRank
0.6227 (0.1411)
0.6866 (0.1632)
0.6546 (0.1522)

food, while some indicated a website or TV program provid-
ing such information. We also computed the ranking using
the method of Li et al.3. We used the specially reserved
100K.set for comparison, with which their method takes as
long as 8 hours to compute a set of two-fold cross validations
for one facet classi(cid:12)cation (compared with only 2 minutes for
our method). For evaluation purposes, we assumed that the
evaluation query sets represented the distribution of true
category query sets. We used recall at 1000 and average
precision to compare query ranks.

As Table 9 shows, biased ClickRank seemed to perform
better than the method of Li et al. We observed improve-
ments in macro average recall of 12.4% and in mean average
precision (MAP) of 110.2%. The precision-recall curves of
two models are shown in Figure 4: Biased ClickRank out-
performed the baseline model. The di(cid:11)erence was mainly
caused by the normalization strategies. Li et al. used the
‘volume’ of all lengths-of-two-paths for regularization, i.e.,
the sums of all elements of each row of AAT . As Baeza-Yates
and Tiberi [5] suggested, the click distribution followed a

2We excluded queries with the facet directive word in test
queries because their facet attribute is explicit from the
query surface form.

3They also proposed regularizing their graph-based algo-
rithm by a content-based classi(cid:12)cation.
In this paper, we
compare with only their graph-based algorithm.

194(cid:0)(cid:2)(cid:1)(cid:4)(cid:3)(cid:6)(cid:5)(cid:8)(cid:7)(cid:10)(cid:9)

Table 7: Examples of facets and their seed queries

(cid:0)(cid:14)(cid:18)(cid:19)(cid:9)

(Fashion)

(cid:11)(cid:8)(cid:12)(cid:14)(cid:13)(cid:16)(cid:15)(cid:17)(cid:12)

(cid:20)(cid:22)(cid:21)(cid:24)(cid:23)

(street),

(Celebrities), 80 (cid:25)(cid:14)(cid:26)

(France),
(80’s)

(cid:5)(cid:14)(cid:27)

(Recipe)

,(cid:14)-

(Reservation)

(cid:28)(cid:30)(cid:29)(cid:2)(cid:31)! 

)$*

(apple sour), "$#&%(’

(Thai curry),

(bread), #$"(cid:17)(cid:13)(cid:6)+
(golf ), (cid:11)(cid:14)’0#

(Italian)

(skyliner:rapid train),

.!/

#(cid:24)12(cid:15)

jr 3(cid:19)4(cid:19)5

(jr super express), 6$798;:!/

(Hotel abroad)

Table 8: Top 10 queries against ‘recipe’

(goya champuru:traditional cuisine)

query

.(cid:2)(cid:15)=<(cid:14)>@?

C;D(cid:14)E

(cid:9)(cid:10)F

(cid:9)BA

(cid:15);G

’&/(cid:14)H(cid:14)1@(cid:15)

(cid:18)KJMLON

P(cid:19)Q2RTS=U

(tofu hamburg)

(carbonara)
(salad noodle)

(cold sliced meet)

(cid:3)$^

_(cid:14)‘(cid:14)a=b$c

_(cid:14)‘edTf2g!h

(simple cookies)

(cookpad:recipe site)

WYX(cid:14)Z\[

(cid:15);V

(Hanamaru market:TV program)

(cid:28)(cid:30)i

(simple how to cook pikled plums)

(cid:5)2k(cid:14)l

(cid:15)Km

(vichyssoise)

score
0.0503
0.0336
0.0311
0.0245
0.0240
0.0233
0.0232
0.0231
0.0227
0.0219

power law: a small number of URLs had many clicks and
many URLs had few clicks. Once a query has been linked to
a URL that received many clicks possibly related to many
queries, the in(cid:13)uences of other URLs with few clicks faded
away in their method.

The three graph-generating models described in Section 5
are compared in Table 10; we used the BW weighting for
the hierarchy node model. We compared the macro aver-
aged recalls of the (cid:12)rst 1000 results of seven facet words as
well as average precisions. The hierarchy node model per-
formed the best with 0.4596, followed by the domain node
with 0.4184, and URL node with 0.3780. The di(cid:11)erences
between the hierarchy node model and the other two mod-
els are statistically signi(cid:12)cant (t-test, p < 0:05), whereas the
di(cid:11)erence between the domain and URL node models is not.
Average precision measures indicate similar tendencies, but
the di(cid:11)erence between the hierarchy and URL node models
is not statistically signi(cid:12)cant. For both measures, the hier-
archy node model was consistently better than other models.
The precision-recall curves for hierarchy, domain, and URL
node models are shown in Figure 5. Although the URL
node model was unsurprisingly better at the highest pre-
cision point, the hierarchy node model outperformed it at
higher recall points. Beyond recall point of 0.5, the curve
for the URL node model rapidly approaches the bottom line.
The limitation of the URL node model is clearly related to
graph sparseness. Starting from, for example, the 689 seed
query nodes associated with the ‘recipe’ facet, only 7879 out
of the 403,574 queries of the whole graph received a positive
score. The other queries were disconnected from the seed
queries.

In Figures 6 and 7, we show analyses of the sensitivity of
MAP to parameter (cid:11). From the two test sets, it is clear
that the URL node method behaved di(cid:11)erently from the
other methods; for the URL node method, the MAP mono-
tonically improved with increasing (cid:11), whereas the other two
methods had long plateaus from 0.1 to 0.8 and degraded
beyond 0.8. A larger (cid:11) means a lower probability of biased

teleportation, which requires more iterations to converge.
100K.set needed about 80 iterations for convergence when
(cid:11) was 0.9, but only 4 iterations when (cid:11) was 0.1.

Table 11 compares the three weighting strategies for the
hierarchy node model described in Section 5 with BW in
Table 10. None of the strategies improved the recall at a
statistically signi(cid:12)cant level. In average precision, LDW was
the best but the di(cid:11)erence is not statistically signi(cid:12)cant. For
the BW strategy, longer URLs were overweighted compared
with shorter ones because the larger number of edges gen-
erated was not compensated for by a reduction in the edge
weights. The fact that the BW strategy was slightly better
than other strategies, at least in recall at 1000, suggests that
longer URLs are more useful than shorter ones as ranking
features.

6.3 Editorial evaluation

As Figure 5 shows, the URL node model was the best at
the highest precision point, but the hierarchy node model
outperformed it everywhere else. To con(cid:12)rm the above-
mentioned observations based on an automatically gener-
ated test set, we manually assessed the relevance of the top
100 queries. The results are given in Table 12 in terms of
precision at 100. The URL node model was the best and
the hierarchy node model was slightly inferior to it. The
domain node model performed much worse. The hierarchy
node model was able to retrieve thoroughly related queries
by sacri(cid:12)cing early precision slightly. This is consistent with
the results reported in the previous Section (Figure 5) and
validates the evaluation based on a test set extracted auto-
matically from query logs.

7. CONCLUSIONS

The main contributions of this work are (1) the intro-
duction of the biased ClickRank method to the click graph
to extract queries relevant to given facets from the click-
through logs and (2) a novel method of complementing the

195(cid:11)
(cid:21)
(cid:21)
(cid:15)
(cid:9)
(cid:9)
(cid:0)
(cid:18)
/
(cid:18)
I
(cid:29)
(cid:3)
(cid:12)
]
(cid:3)
]
*
j
Biased ClickRank
Li et al

Hierarchy node method
Domain node method
URL node method

 0.1

 0.2

 0.3

 0.4

 0.6

 0.7

 0.8

 0.9

 1

 0.5

Recall

 0.1

 0.2

 0.3

 0.4

 0.6

 0.7

 0.8

 0.9

 1

 0.5

Recall

Figure 4: Precision-recall curves for 100K.set:
Biased ClickRank and Li et al.’s algorithm.

Figure 5: Precision-recall curves for 1M.set: Do-
main node, hierarchy node, and URL node mod-
els.

Hierarchy node method
Domain node method
URL node method

Hierarchy node method
Domain node method
URL node method

i

i

n
o
s
c
e
r
P

P
A
M

 1

 0.9

 0.8

 0.7

 0.6

 0.5

 0.4

 0.3

 0.2

 0.1

 0

 0

 0.24
 0.23
 0.22
 0.21
 0.2
 0.19
 0.18
 0.17
 0.16
 0.15
 0.14
 0.13
 0.12
 0.11
 0.1
 0.09
 0.08
 0.07
 0.06
 0.05
 0.04
 0.03
 0.02
 0.01
 0

i

i

n
o
s
c
e
r
P

P
A
M

 1

 0.9

 0.8

 0.7

 0.6

 0.5

 0.4

 0.3

 0.2

 0.1

 0

 0

 0.2

 0.19

 0.18

 0.17

 0.16

 0.15

 0.14

 0.13

 0.12

 0.11

 0.1

 0.1

 0.1

 0.2

 0.3

 0.4

 0.6

 0.7

 0.8

 0.9

 0.2

 0.3

 0.4

 0.6

 0.7

 0.8

 0.9

 0.5
Alpha

 0.5
Alpha

Figure 6: Sensitivity of MAP to parameter (cid:11) in
100K.set evaluations: Biased ClickRank and Li
et al.’s algorithm.

Figure 7: Sensitivity of MAP to parameter (cid:11)
in 1M.set evaluations: hierarchy node, domain
node, and URL node models.

Table 12: Editorial evaluation of graph models \Do-
main", \Hierarchy", and \URL" for precision@100 in
1M.set (number of relevant queries in brackets).

Facet label
Image [2235]
Recipe [1374]
Macro avg.

Domain Hierarchy URL
0.53
0.46
0.495

0.50
0.43
0.465

0.41
0.26
0.335

click graph by decomposing the URL according to the site hi-
erarchy. From a limited number of seed queries, the method
derived from the combination of (1) and (2) was able to
identify queries with similar characteristics in searchers’ be-
haviors. Our score propagation method was 12.4% better
than the baseline model of Li et al.
in recall and 110.2%
better in average precision. The hierarchy node model was
found to be very e(cid:11)ective at achieving high recall with rea-
sonably good precision. It improved 9.8% against the do-
main node model and 21.6% against the URL node model
in recall. In future, we plan to expand not only the URLs
but also queries by decomposing them into their constituent
parts in the query-URL bipartite graphs. This will hope-
fully help further alleviate sparseness problems in query-
URL click graphs.

8. REFERENCES

[1] Text REtrieval Conference, Common evaluation

measures.
http://trec.nist.gov/pubs/trec16/appendices/measures.pdf.

[2] Yahoo! JAPAN. http://www.yahoo.co.jp/.
[3] Yahoo! Search. http://search.yahoo.com/.
[4] R. Baeza-Yates, C. Hurtado, and M. Mendoza. Query
recommendation using query logs in search engines. In
Current Trends in Database Technology - EDBT 2004
Workshops, LNCS 3268, pages 588{596, March 2004.
Heraklion, Greece.

[5] R. Baeza-Yates and A. Tiberi. Extracting semantic
relations from query logs. In Proceedings of the 13th
ACM SIGKDD international conference on Knowledge
discovery and data mining, pages 76{85, 2007. San
Jose, CA, USA.

[6] D. Beeferman and A. Berger. Agglomerative clustering
of a search engine query log. In Proceedings of the sixth
ACM SIGKDD international conference on Knowledge
discovery and data mining, pages 407{416, 2000.

[7] A. Broder. A taxonomy of web search. ACM SIGIR

Forum, 32(2):3{10, 2002.

[8] A. Broder, M. Fontoura, E. Gabrilovich, A. Joshi,

V. Josifovski, and T. Zhang. Robust classi(cid:12)cation of
rare queries using web knowledge. In Proceedings of
the 30th annual international ACM SIGIR conference
on Research and development in information retrieval,

196Table 10: Comparison of graph models measured by recall@1000 and average precision (in parentheses). The
hierarchy node model uses the BW weighting strategy. Numbers of relevant queries are in brackets.

Table 11: Comparison of weighting strategies of expanded graph nodes evaluated by recall@1000 and average
precision (in parentheses). Numbers of relevant queries are in brackets.

Facet label [#rel]
Download [375]
Fashion [52]
Image [2235]
Recipe [1374]
Reservation [60]
Second hand [57]
Stock price [191]
Macro avg.

Domain node
0.4747 (0.1791)
0.2885 (0.0379)
0.2380 (0.1767)
0.3552 (0.1941)
0.5833 (0.1555)
0.5439 (0.1015)
0.4450 (0.0886)
0.4184 (0.1333)

Hierarchy node
0.5306 (0.2197)
0.2885 (0.0435)
0.2676 (0.2113)
0.4192 (0.2773)
0.6333 (0.1770)
0.5965 (0.1030)
0.4817 (0.1161)
0.4596 (0.1640)

URL node

0.4613 (0.1825)
0.2115 (0.0658)
0.2237 (0.1213)
0.3035 (0.1542)
0.6500 (0.1903)
0.4035 (0.0965)
0.3927 (0.1177)
0.3780 (0.1326)

Facet label[#rel]
Download [375]
Fashion [52]
Image [2235]
Recipe [1374]
Reservation [60]
Second hand [57]
Stock price [191]
Macro avg.

UW

LDW

EDW

0.5360 (0.2110)
0.2885 (0.0526)
0.2613 (0.2003)
0.4258 (0.2670)
0.6833 (0.1916)
0.5439 (0.1046)
0.4764 (0.1211)
0.4593 (0.1640)

0.5387 (0.2147)
0.2885 (0.0571)
0.2519 (0.1977)
0.4250 (0.2718)
0.7000 (0.1967)
0.5439 (0.1090)
0.4607 (0.1253)
0.4584 (0.1675)

0.5200 (0.2122)
0.2885 (0.0589)
0.2501 (0.1928)
0.4170 (0.2631)
0.7000 (0.1994)
0.5439 (0.1075)
0.4607 (0.1245)
0.4543 (0.1655)

pages 231{238, 2007. Amsterdam, The Netherlands.
[9] N. Craswell and M. Szummer. Random walks on the

click graph. In Proceedings of the 30th annual
international ACM SIGIR conference on Research and
development in information retrieval, pages 239{246,
2007.

2005.

[15] X. Li, Y. Wang, and A. Acero. Learning query intent

from regularized click graphs. In Proceedings of the
31st annual international ACM SIGIR conference on
Research and development in information retrieval,
pages 339{346, 2008.

[10] G. Dupret and C. Liao. A model to estimate intrinsic

[16] R. Motwani and P. Raghavan. Randomized algorithms.

document relevance from the clickthrough logs of a
web search engine. In Proceedings of the Third ACM
International Conference on Web Search and Web
Data Mining, WSDM 2010, New York City, USA,
pages 181{190, 2010.

[11] G. Dupret and M. Mendoza. Recommending Better
Queries from Click-Through Data. In Proceedings of
the 12th International Symposium on String
Processing and Information Retrieval(SPIRE
2005),LNCS 3246, pages 41{44. Springer, 2005.

[12] G. Dupret and B. Piwowarski. A user browsing model

to predict search engine click data from past
observations. In Proceedings of the 31st Annual
International ACM SIGIR Conference on Research
and Development in Information Retrieval, pages
331{338, 2008.

[13] T. Haveliwala. Topic-sensitive pagerank. In

Proceedings of the 11th international conference on
World Wide Web, Honolulu, Hawaii, USA, pages
517{526, 2002.

[14] T. Joachims, L. Granka, B. Pan, H. Hembrooke, and
G. Gay. Accurately interpreting clickthrough data as
implicit feedback. In Proceedings of the 28th annual
international ACM SIGIR conference on Research and
development in information retrieval, pages 154{161,

Cambridge University Press, Cambrige, UK, 1995.

[17] B. V. Nguyen and M.-Y. Kan. Functional faceted web

query analysis. In Proceedings of the Sixteenth
International World Wide Web Conference
(WWW2007) Workshop on Query log analysis: Social
and Technological Challenges, 2007.
http://www2007.org/workshop-W6.php, Ban(cid:11),
Canada.

[18] L. Page, S. Brin, R. Motwani, and T. Winograd. The
pagerank citation ranking: Bringing order to the web.
1998.

[19] D. E. Rose and D. Levinson. Understanding user goals
in web search. In Proceedings of the 13th international
conference on World Wide Web, WWW 2004, New
York, NY, USA, May 17-20, 2004, pages 13{19, 2004.

[20] G.-R. Xue, H.-J. Zeng, Z. Chen, Y. Yu, W.-Y. Ma,

W. Xi, and W. Fan. Optimizing web search using web
click-through data. In Proceedings of the thirteenth
ACM international conference on Information and
knowledge management, pages 118{126, 2004.
Washington, D.C., USA.

197