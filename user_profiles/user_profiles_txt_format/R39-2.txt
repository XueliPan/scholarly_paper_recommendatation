201 O  IEEEIIFIP International 

Conference 

on Dependable 

Systems & Networks (DSN) 

StageWeb: Interweaving 

Pipeline Stages into a Wearout and 

Variation 

Tolerant CMP Fabric 

Shantanu Gupta, Amin Ansari, Shuguang Feng and Scott Mahlke 

Advanced Computer Architecture 

Laboratory 

University 

of Michigan -Ann Arbor, MI 

{shangupt, 

ansary, shoe, mahlke}@umich.edu 

Abstract 

faulty cores in chip multiprocessors. 

historically 
is now gaining  attention 

of interest 
only 

at a coarse granularity, 

space. Traditionally 

reliabil­

Manufacture-time 

process variation 

and life-time 
have become a major industry concern. 

fail­

in 

rates. In 

computing 

fault tolerance, 

to higher failure 

tolerance  solution, 

ure projections 
Consequently, 
for mission-critical  systems, 
the mainstream 
ity issues have been addressed 
e.g., by disabling 
However, this is not scalable 
this paper, we propose StageWeb, 
and variation 
figurable web of replicated 
construct 
tionflexibility 
failures 
(by selectively 
slower stages). 
show that through its wearout tolerance, 
performs up to 70% more cumulative  work 
rable chip multiprocessor. 
StageWeb 
sively, 

enables 
resulting 

of Stage Web simultaneously 
tackles 

dependable  many-core 

in up to 16% energy savings. 

it to scale supply voltage 

processor pipeline 

(by isolating 

broken stages) 

disabling 

Further, 

a fine-grained 
that employs a recon­
stages to 

chip 

more aggres­

wearout 

Our experiments 
a StageWeb 
than a compa­
in 

chips. The interconnec­

and process variation 

wearout 

variation mitigation 

Keywords: permanent 

process 

variation,  multi­

core, architecture, 

faults, 
reliability 

1 Introduction 

(CMP) can be 

Fortunately, 

into two categories, 

o n  a chip multiprocessor 

computational 
cores 
nature 

Resources 
chiefly divided 
and cache memory arrays. 
of the memory layout makes it amenable 
of reliability 
niques such as row/column 
codes (ECC). Thus, with appropriate  protection 
nisms in place for caches, 
of wearout and process 

the well-known 
tech­
and error-correcting 

cores become the major source 

vulnerability 
on the die. 

to a wide variety 

[3], including 

solutions 

the regular 

sparing 

mecha­

Wearout-tolerance 

for individual 

cores is a challenging 

tends to be wasteful. 

per chip, systems 

and imposes 

rapid throughput 

degra­

cores as 
as core 

and quickly 

in number of failures 

At one extreme is the option to disable 

Although 
overhead, 

can exhibit 
become useless. 

it is a simple solution 
core disabling 

problem. 
soon as they develop a fault [1], we refer to  this 
isolation. 
very little 
With the increase 
with core isolation 
dation, 
when repairing 
micro-architectural 
redundancy 
ken micro-architectural 
and reorder 
spares). 
is non-redundant 
proaches 
is very limited. 
fall short of delivering 
of failures. 

are isolated 
since a majority 

Therefore, 
sustainable 

[16], the fault coverage 

Unfortunately, 

cores, is to leverage 

buffer entries, 

structures, 

throughput 

defective 

such as functional 
units 
or replaced 
(with 
of the core logic 

these solutions 
also 
in the face 

[20, 21]. Here, the bro­

from these ap­

The other extreme, 

fine-grained 

(e.g., dopant  density  fluctu­

From the time of its inception,  the 
pro­
inte­
CMOS tech­
poses critical 

growth in transistor 

in the forthcoming 

semiconductor 

this aggressive 

However, 

scaling 

levels. 

issues due to the increasing 

power density 
and 
grows, each 

density 

gets smaller,  hotter, 
higher susceptibility 

and more fragile, 

leading 
of chips to permanent 
can impact the perfor­

offered by  a semiconductor 
chip, and 

First, 

as circuit 

an unhindered 

[6]. These wearout failures, 

cess has witnessed 
gration 
nology generations, 
reliability 
process variation. 
transistor 
to an overall 
faults 
mance guarantees 
limit their useful  lifetime. 
process variation 
cisely 
nologies, 
rameters 
threshold 
from the design specification. 
threats, 
and process 
implications 
ficiency. 

introduces 
(channel 

process 
significant 

the fabrication 

permanent 

length, 

control 

faults 

[19, 6], caused by the inability 
to pre­
tech­
of circuit 
wire spacing) 

deviation 
voltage, 

at small-feature 

pa­

on semiconductor performance 

variation, 
and power ef­

have broad 

Process 

variation 

is encountered 

at manufacturing 

time, 

(e.g., lithographic 

almost every chip manufactured 
from day 

at different 
(D2D) and within-die 

levels -wafer-to­

(WID). 
D2D has been the most visible form 
ofvari­
the notion of speed­

or  random 

and can manifest 

by introducing 

can be systematic 

and influences 
one. The variations 
lens aberrations) 
ations), 
wafer (W2W) , die-to-die 
Traditionally, 
ation, 
and was tackled 
binning (chips are partitioned 
and sold accordingly). 
WID variations 
for today's 
tions can create a wide distribution 
istics 
in slow parts that work at a low frequency 
are very fast but leaky (high static 
the impact of WID process 
chip, and illustrates 

power). 
variation 

[19, 13] have created 

for components 

multicore 

designs. 

However, 

to those that 
Figure 1 shows 

how the distribution 

of core frequen-

These parametric 

devia­

the increasing 

levels of 

on  a 64-core CMP 

based on their frequency 

of operating 

character­

(like cores) within a chip, resulting 

newer challenges 

In addition,  manufacture-time 

Together, 

these reliability 

cies is expected 

to widen at future technology 

nodes. To= 

978-1-4244-75 0 1-8/10/$26.00 ©201 O  IEEE 

1 0 1  

DSN 2 0 1 0 :  Gupta et al. 

201 0  IEEE/IFIP International 

Conference 

on Dependable 

Systems & Networks (DSN) 

I:SIFuture 

node  -32nm 

D45nm 

35 
'"  30 
'" 
... 
25 
0 
" 
...  20 
0 
... 
'" 
.t:J 
E 10 
:::I 
Z  5 
0 

IS 

0.73 0.76 0.79 0.82 0.85 0.88 0.91 0.94 0.97 

Frequency (normalized) 

on a 64-core 

of core frequencies at current 

Figure 1: Impact of process variation 
plot shows the distribution 
ogy nodes (45nm and 32nm) and a (next-to-
As the technology 
left (more slower cores) and widens  out 
frequencies). 
ending up with slower components, bringing 
tional 

This is a consequence 

frequencies. 

is scaled, 

arrive) 
the distribution 
shifts 

future node. 
towards 
the 
(more disparity 
in core 

of large number of cores 

CMP.  The 
technol­

down their opera­

process 

variation. 

to give an illusion 

of redundancy. 
of SW is further 

connectivity 
The under­
lying interconnection flexibility 
to mitigate 
ponents (pipeline 
picked, 
quency. This ability 
process 
faster 

at a higher fre­
of 

of SW limits the harmful effects 

in the fabric can be selectively 
that can operate 

slower components 
with 

Using SW, the faster 
com­

that intersperse 

to form pipelines 

ones throughout 

variation 

leveraged 

stages) 

a chip. 
The contributions 
I. SW, a comprehensive 

solution 

of this paper are as follows: 

for the  upcoming 
faults and process 

re­

liability 
variation. 

challenges 

-permanent 

interconnection 

2. Exploration 

of robust and scalable 
for building 

SW chips. 

alternatives 
3. Configuration 
tem throughput 
the distribution 
process 
variation. 

algorithms 

to a) maximize 
in the face of failures, 
of core frequencies 

and b) improve 
in the presence 

the SW sys­

of 

deal with this challenge, 
ogy generations 
introduce 
undesirable 

may create overly conservative 
or 
Both of which are 
efficiently. 

guard-bands. 

alternatives 

large frequency 

for computing 

designers 

in upcoming technol­

designs 

To create robust and efficient 

systems in this landscape 
components, 

for mul­

robust and efficient 
hurdles. 
The design 

(SN) [9], a recent proposal 

The basic idea of SN is to orga­
network of 

configurable 

designs 

small archi­
might not be 
of the architectural 
fabric from 
as a primary cri­
with reliability 
Stage Web, a scal­

together 

over existing 

A rethinking 

As a solution, 

cores are created 

improvements 

this paper proposes 

CMP that can deliver 

in the face of reliability 

as a dynamically 
Logical 

with StageNet 
wearout tolerance. 

of wearout and variation-prone 
tectural 
sufficient. 
the ground up is needed, 
teria. 
able many-core 
performance 
starts 
ticore 
nize a multicore 
pipeline  stages. 
connecting 
The underlying 
be completely 
full flexibility 
stage failures, 
salvaging 
healthy 
ity of SN to isolate 
rather than cores) makes it less wasteful, 
SN chip to tolerate 
ures. Despite its benefits, 
three fundamental  limitations 
ing the 
interconnection 
process 

pipeline 
decoupled 
to construct 
the SN architecture 
stages to form logical 

that prevent 
challenge: 
network is vulnerable 

a significantly 

is not addressed. 

reliability 

one instance 

the original 

many-core 

variation 

failures 

logical 

cores. In the event of 
by 

initiates 

recovery 
cores. This abil­
at a finer granularity 
and enables 
higher number 
of fail­

by 
of every pipeline 
to 

microarchitecture 

is designed 

at stage boundaries, 

at run-time 

stage. 

a 

(stages 

SN proposal  has 

it from meet­
2) 
and 3) 

1) not scalable, 
to failures, 

providing 

StageWeb (SW), a scalable 

CMP fabric for interweav­

eliminates 
all the 

of SN. The SW system is op­
be­

the best degree of connectivity 

(that can share their resources 
a modest amount of overhead. 

A  range 

together), 

limitations 

ing wearout and variation-prone 
stages, 
aforementioned 
timized 
to determine 
tween pipelines 
while incurring 
of interconnection 
uration 
tolerance 
network is also tackled 
of spare crossbars, 

using SW. The reliability 

alternatives, 

robust crossbar 

algorithms, 

are explored 

and corresponding 
fault­

config­
to enable scalable 

2 

Background 

The StageWeb architecture 

proposed 

(SN) [9], a solution 

builds upon StageNet 
fault tolerance 
design, 
2.1 The StageNet (SN) Architecture 

and limitations 

in multicores. 

advantages, 

summarizes 

This section 

of the SN architecture. 

the 

in this paper 
for permanent 

SN enables efficient 

stage level reconfiguration 

multicore 
broken components 

fabric. 

at the pipeline 

by 
Its ability 
to iso­

and replace 

means of an adaptable 
late defects 
stage granularity 
vestment 
is designed 
lated cores. Processor 
linking 
corresponds 
the SN architecture 
(SNS). 

together 

offers a good trade-off 

and reliability 

benefits. 

as a network of pipeline 

between area in­
A SN multicore 
than iso­
by 

stages, 

rather 

system 

cores within SN are constructed 

a set of working stages, 

to a node in the network. 

where each stage 
A logical 

core in 

is also referred 

to as a StageNetSlice 

SNS is the basic building 

block  for 
pipeline 

the SN architec­
microarchitecture 

processor 

(to allow any to any communication 

in 

As 

using full 

switches 

switches 

of stages. 

of a decoupled 

and, as a result, 

The stages are connected 

of five stages: 
write-back 

fetch, decode, is­
[14]. Figure 2 shows 

at the granularity 
a simple in-order 

ture. It consists 
that allows reconfiguration 
a basis for the SNS design, 
core is used, consisting 
sue, execute/memory, and 
a  single 
(shaded structures). 
crossbar 
SN). The crossbar 
(64-bit) 
one stage to the next can take a variable 
These switches 
tween the pipeline 
branch mis-prediction 
signals 
terconnection 
stages maintain  a 
output, 
ing it from impacting 
decoupling 
of pipeline 
for the SNS microarchitecture: 
challenges 

critical 
stages creates 

making the network a separate 

all direct wire links that exist be­

paths within stages. The 

buffer) at their input and 

and stall signals. 

stages including 

is bufferless, 

network itself 

the transfer 

latch (double 

have a fixed channel width 

replace 

The in­

of an instruction 
number of cycles. 

from 

stage and prevent­

the bypass network, 

but the pipeline 

three fundamental 

of the interconnection 

for flush/stall 

are infeasible 

in the SW design through 

the use 

is hard to support 

1. Global signals 
2. Data forwarding 
3. Performance 

designs, 

and intelligent 

degradation 

due to crossbar 

switches 

978-1-4244-75 0 1-8/10/$26.00 ©201 0  IEEE 

1 02 

DSN 2 0 1 0 :  Gupta et al. 

SNS with all of its microarchitectural  additions 

201 0  IEEE/IFIP International 

Conference 

on Dependable 

Systems & Networks (DSN) 

Figure 2: The StageNet 
replace 
crossbars (64-bit) 
enable decoupled 
functionality. 

the direct 

Slice  (SNS)  micro-

architecture. 

The original 

pipeline 

is decoupled 

pipeline-la

tch connecti

ons. The shaded blocks inside 

at the stage boundari

es, and narrow-width 
the stages highlight the  structures 

added to 

--;,..--, ·-,I@!!) Sliceo 

-::'--::-;[]7'if] Slice 

1 

Slice 

2 

stream identification 

for each of the challenges 

SN provides 

a  solution 
above. Specifically, 

it proposes 

handling, 

for global control 

listed 
(StreamID) 
pass$) for data forwarding, 
for performance. 
nisms, and some minor ones detailed 
mance of SNS comes within 10% of a baseline 
pipeline 

With the application 

and macro operations 

(Figure 
3). 

bypass cache (By­

of these mecha­

in [9], the perfor­

(MOPs) 

in-order 

2.2 Fault Tolerance 

using SN 

switches, 

a SN multicore 

A network of stages can be grouped together, 

using the 
to form a SN multi core. Figure 4 
out of four SNSs that 
The inherent 
of a logical 

full crossbar 
illustrates 
share a common crossbar 
try of SN allows arbitrary 
grouping 
For instance, 
o are linked with the decode from slice I, to construct 
working pipeline. 

created 
network. 
formation 

at least one pipeline 
issue and execute 

stage of each type. 
stage from slice 

symme­
SNS by 

together 

the fetch, 

a 

SN relies 

on  a fault detection 

mechanism 

to identify 

an active 

The manufac­
at the test time 

However, 
in the field. There 
of permanent 
fail­

solutions 

is required 

reconfiguration. 

to catch failures 
for detection 

can be easily identified 
accordingly. 

broken stages and trigger 
ture time failures 
and SN can be configured 
mechanism 
are two possible 
ures: I) continuous  monitoring 
periodic  testing 
these or use a hybrid approach. 
SN can easily isolate 
around them. Given a pool of stage resources, 
based configuration 
ally optimal 
connection 
from adjacent 

set of logical 
flexibility 

allows it to salvage 

In the presence 

for faults [8]. SN can employ either of 

manager can divide them into a glob­

broken stages by adaptively 

SNSs. In this way, SN's inter­

using sensors [5] or 2) 

healthy 

cores. 

a software 

stages 

routing 

of failures, 

-SNS + StrcmlllD 

-SNS + StreamlD 

+ Bnmss$ DSNS + SIrc3mJl) 

+ BnmssS+ MOPs 

"  6 

.55 
= 
.ii' 
� J 
:; 2 
e :;;1 
z 

Figure 3: Single thread performance 
a baseline 
a factor of four after applying 
modifications. 

in-order core. The performance 

of a SNS normalized 

to 

improves 

by almost 

all proposed micro-architectural 

to 
four failed stages (marked by shading)
, SN 

with four slices 

Figure 4: The SN architecture 
each other. Despite 
is able to salvage 
system throughput. 
approach for reliability 

three working pipelines, 

would lose all working 

Given a similar fault map, a core-disabling 

maintaining 

resources. 

healthy 

interconnected 

2.3 Limitations 

of SN 

First, 

SN scaling. 

challenge. 

SN is limited 

that was used  as 

ways that prevent 

wearout solution 

system. However, 

The SN design is an acceptable 

for a 
in 
it from meeting the many­
SN was designed 
for a 

the SN 
is notorious 
for steep growth in area and de­
as the number of ports is increased 

small scale multicore 
three distinct 
core reliability 
CMP with 4-8 cores, and does not scale well to a large 
number of cores. The crossbar, 
interconnect, 
lay overheads 
therefore 
limits 
on stage failures 
hinges on 
terconnection 
the link and crossbar 
For instance,  a 
SN chip 
will waste all of its working stages if the shared cross­
bar between them develops 
design targets 
tutes only a part of the reliability 
diate concern 
of process 
efficiency 

variation, 
of semiconductor 

failures, 
challenge. 

which consti­
A more imme­

and does not investigate 

only wearout related 

Second, SN focuses 

SN's robustness 

fault tolerance. 

reliability. 

for the industry 

And finally, 
the SN 

products. 

a failure. 

methods for in­

today is the accelerating 
and its impact on the performance­

[15], and 
primarily 

rate 

3 The StageWeb Architecture 

StageWeb (SW) is a scalable 

architecture 

for construct­

pro­

pipeline 

into an adaptive 

the computational 

CMPs. SW interweaves 

the system can react to local failures, 

to be flexible 
reconfigur­

wearout failures 
The interconnect 

stages 
fabric that is capable 
as well as mitigating 
is designed 

ing dependable 
and interconnection 
of withstanding 
cess variation. 
such that 
potential 
ing around them, to maximize 
of the system at all times. Figure 5 shows a graphical 
abstraction 
chitecture. 
consists 
a scalable network 
croarchitecture 
complete 
set of pipeline 
interconnection) 
ical pipeline. 

area of the chip in this figure 
using 
The pipeline 

of a large scale CMP employing 
The processing 

of a grid of pipeline  stages, 

by  a common 
to form a log­

of SW is the same as that of a SNS. Any 

interconnected 

stages (reachable 

can be assembled 

of crossbars 

switches. 

together 

the SW ar­

mi­

978-1-4244-75 0 1-8/ 1 01$26.00 ©201 0  IEEE 

1 03 

DSN 2 0 1 0 :  Gupta et al. 

201 0  IEEE/IFIP International 

Conference 

on Dependable 

Systems & Networks (DSN) 

L2 

L2 

L2 

�DDDDDDDDDDDD� 
D:8§§E! 
�§l§l§l§l§l§l§l
DDDDDDD
§DDDDI 
g§DDDI 
� DDDDDDD
0000000  DQQQ::; 
�DDDDDDDD 
�DDDDDDDDDDDD 
NDDDDDDDDDDDD 

. 
• 

00000000

ot::iO 

0000 

•  • 

1.8 
� " 1.7 
::: 1.6 
J 1.5 
.; 
E 1.4 
0 1.3 
] 1.2 
, 1.1 
E " 
i. 

1 

.... 000000000000 
000000000000 
rnIJ  rnIJ  rnIJ 

- - -

� 

•  •  • 
2  3  4  5  6  7  8  9  10  11 

12 13 14 15 16 17 18 19 20 21 

Island 

size (number 

of slices 

sharing 

stages) 

J 
I 

Figure 5: The SW architecture. 
in form of a grid, surrounded 
chy.  The 
here is an abstract 
number of resources. 

representation 

The pipeline 

stages 

are arranged 

by a conventional 

memory hierar­

increasing 

Figure 6: Cumulative 
tem with 
to an equally 
retical 
for this experiment. 

inset shows a part of the SW fabric. Note that the figure 

provisioned regular 

CMP. These results 

are a theo­

and does not specify the actual 

upper bound, as we do not model interconnection 
failures 

work performed 

by a  fixed size SW sys­

SW island width. The 

results 

are normalized 

for the interconnection 

3.2 Interweaving 

Candidates 

The fault-tolerance 

within SW can be divided 

into two 

full connectivity 

However, 

as we will 
is not neces­

The first half is to utilize as 

many working 

stages on  a chip as possible 
And the second half is  to ensure interconnect 

(interconnect 

scala­

re­
for the first problem is  to pro­

A naive solution 

between all stages. 

sub-problems. 
pipeline 
bility). 
liability. 
vide a connection 
show later in this section, 
sary between all stages on  a chip to achieve 
reliability 
solution 
problems, 
network, 
ration algorithms for 
nection 
process 
and faster components 
to operate 

benefits. 
we explore 
interconnection 

(stages), 
at a higher frequency. 

infrastructure 
variation. 
The insight 

alternatives 

reliability 

As a combined 

allowing 

and present 

the same. The underlying 
is also leveraged 

configu­
intercon­
by SW to mitigate 

here is to segregate 

slower 

the bulk of 

to both these 

more pipelines 

3.1  Interweaving  Range 

The reliability  advantages 

of SW stem from the abil­

slices (or pipelines) 

to share their re­
approach 

for scal­

would be to allow full con­

SNS can be formed by combining 
on the chip. However, 

such flexi­

since the bulk of reliability 

benefits 
amongst small groups of stages. 

Thus, a direct 

by sharing 

SN proposal 

is unnecessary, 

with one another. 
original 

ity of neighboring 
sources 
ing  the 
nectivity, 
i.e. a logical 
stages from anywhere 
bility 
are garnered 
To verify this claim, we conducted 
fixed number of pipeline 
together) 
of pipelines 
the cumulative 
interwoven 
tive work metric, 
amount of useful work done by a 
time. Note that the interconnect 
free for the sake of estimating 
throughput 
As evident 

as  defined 

is referred 

resources 

at a  range 

of values. 

at a range 

offered by Sw. 

Each fully connected 

group 
to as a SW island. Figure 6 shows 

work done by  a fixed number of slices 

of SW island sizes. The cumula­

in  Section 

4.3, measures the 

system in its entire 
fabric here is kept fault 
the upper bound on the 

life­

an experiment 
with a 
interwoven 

(grouped 

returns 

from Figure 6, a  significant 
is accomplished 

amount of de­
with just a few slices 

interweaving has 

The reliability 
number of pipelines, 

shar­
diminish 
with 
and beyond 10-12 
impact. 

fect tolerance 
ing their resources. 
the increasing 
pipelines, 
cause as a SW island spans more and more slices, 
ation in time to failure 
smaller. 
ibility 
ing stages, 

the vari­
gets smaller 
and 
into the amount of gains that the flex­
can garner in combining 
work­
return with an in-

of the interconnect 

in a diminishing 

of its components 

This factors 

resulting 

a marginal 

This is be­

a two-tier 

is provided 

the chip into 

design can be em­
SW islands, 
between stages within the 
interconnect 
be­
exists 
can 
In this manner, the wiring overhead 
sys­

crease in island width. Thus, 
ployed for SW by dividing 
a full interconnect 
island and no (or perhaps 
tween islands. 
be explicitly 
tem organizations, 
of the SW architecture. 

managed by examining 
while garnering 

more intelligent 
near-optimal 

limited) 

benefits 

where 

together, 
ben­

as seen 

of the SW reliability 
immune interconnect). 

How­

switch might not be a practi­

all 10-12 pipelines 

together 

be­

a failure 

a majority 

a set of 10-12 pipelines 

Interweaving 
in Figure 6, achieves 
efits (assuming 
ever, using a single crossbar 
cal choice for connecting 
cause: 1) the area overhead 
of crossbars 
ically with the number of input/output 
crossbar 
connected 
ical path for the design, 
crossbar 
usability 
is a need to explore 
can reach a wider set of pipelines 
heads in check. 

3) and lastly, 
the pipelines 

wire delay increases 

more intelligent 

together, 

shared by  all 
the 
of all of them. In light of the above reasons, 

of the single 

failure 
can compromise 
there 
that 

interconnections 

scales quadrat­

ports, 2) stage to 

at some point this can become the crit­

with the number of pipelines 

while keeping the over­

interconnection 
that connect n slices. 

Single Crossbars: The simplest 
is  to use full crossbars 
switches 
Here, the value of n is bounded by the  combined 
delay 
of crossbar 
which should not exceed 
a single 
CPU cycle. Note that the interconnection 
network 
in SW constitutes 
timing of individual 

and interconnection, 

pipeline stages. 

stage and does not change the 

a separate 

option 

in this interweaving 

cross­

crossbar 
while 

together. 

in­
design, 

to share their re­
adjacent 

builds upon the single crossbar 

a wider number of pipelines 
As the name implies, 
half of their territories 

Overlapping Crossbars: The overlapping 
terconnect 
enabling 
sources 
bars overlap 
setup. Figure 7(a) illustrates 
ping crossbars 
interconnect, 
ary for the SW islands. 
highlight 
a repetitive 
that these � stages can connect 
using crossbars 
using crossbars 
have a reach of �n slices. 

Xbar 1,4,7, 
Xbar 2,5,8. Thus, overall 

over �n slices. 
overlapping 

here. Note 
to the stages above them 
and to the stages below them 

interconnection 
pattern 

The overlapping 

the deployment 

have a fuzzy bound­

crossbars 

The shaded stages in the figure 

crossbars 
have 

these stages 

of overlap­

Unlike the single crossbar 

978-1-4244-7501 -8/1 01$26.00 ©201 0  IEEE 

1 44 

DSN 2 0 1 0 :  Gupta et al. 

201 0  IEEE/IFIP International 

Conference 

on Dependable 

Systems & Networks (DSN) 

! 

CD 

CD
I � }n12 
aJJ CD I 
�, . .   �! 
CD  CID 
: }n12 
CD  CD CID 
: }n12 

aJ  I� I� I
CD  i CID 

CID 

. 
CD � 

CD� 
CD 

lIl
III 

1Il � 

CD
CD 

CD 

III 

ill 

, 

aJ 

aJ 

CID 

. 

Front-End 

il 

.  -

CD 

x, 

. 

0 

.  · 
CD ! � 
ill 

2 
>:: .  · 
� ill �, � 

Back·End 

Fronl-End 

��I . '  '7il ·  ' 

• .3 

· 

Back-End 

ill� 

· 

. 

'7] •  ' n 
'7] 

• ' n 

· 

III � CD� 
III  CD 

III  aCD 

!  • 

� 

·  � 

CD � 
CD 

· 

� 

'7) •  n 
, � l �  . 

• ' n 

.  . 
�� 

CD 

crossbar 

(a) Overlapping 
figure, the shaded  stages 
reach of �n pipelines. 

connections. 
In this 
in the middle have  a crossbars 

(b) Combined 

back crossbars. 

application 

of single 

(c) Combined application  of 

in conjunction 

with front-crossbars 

in conjunction 

front-back 

overlapping 
crossbars. 

Figure 7: Interweaving 
represent 

the pipelines 

they connect 

together. 

candidate

s. The vertical 

lines here are used as an abstraction 

for full 

crossbar switches. The span of the lines 

over the single crossbars: 

two distinct advantages 
lows up to 50% more slices to share their resources 
gether, 
every stage interface, 
bustness. 

1) al­
to­
crossbar 
link at 
ro­

and 2) introduces 

an alternative 

improving 

the interconnection 

handling 

deployment, 

algorithms  for 

three configuration 
crossbar 
ping crossbars 
terweaving 
successfully 
three algorithms. 

each type of 
namely, single crossbars, 
configurations. 
All four in­
3.2 can be 
by using a combination 

and front-back 

alternatives 

in the Section 

configured 

discussed 

of these 

overlap­

crossbars, 

with one an­

between every 

However, 

solution 

is relaxed 

two-cycle 

of the logical 

a significant 

by introducing 

a single-cycle 

can communicate 

the two cycle latency 

of single crossbars 

crossbar can provide. 

slowdown on the 
SNSs (-25%). A 
would be to apply two cycle cross­

range they 
This value is bounded by the extent of connec­
if this 

Single and Front-Back Crossbars: The primary lim­
itation 
is the interweaving 
can deliver. 
tivity 
constraint 
twice the number of slices 
other.  Unfortunately, 
pair of stages can introduce 
single thread performance 
compromise 
bar at a coarser 
way to accomplish 
pair as one block (front-end), 
as the other (back-end). 
loss when using this  is 
necting 
back-end 
We call such two-cycle 
bars. Figure 7(b) shows 2n slices 
and back-end 
crossbar 

about 7%. As per Figure 2, con­
to 

divided 
which are connected 

than pipeline 
by classifying 

interconnections 

granularity 

in the reverse 

front-back 
cross­

and another 

crossbar, 

up these 

(FB-Xbar 
0). 

stages. One 

this is 

blocks, 

and the issue-exmem 
pair 

two blocks would need one front-end 

into front-end 
by a front-back 

The single thread performance 

direction. 

the fetch-decode 

four stage failures 

here using a simple example. 

Figure 8 shows 
are formed us­
There are eight 
and four cross­

SW system. The SW islands 
top two and bottom two slices. 
in this system, 

Single Crossbar Configuration: The input to  this 
al­
gorithm is the fault map of the entire SW chip, and it is 
explained 
a four-wide 
ing  the 
defects 
bar port/interconnect 
marked using a solid shade (F2, D4, 13, E4) and the inter­
connect 
to a dead inter­
connect 
D2, 12). This is  to distinguish 
defective 
connections 
free. 

as crosses. 
are also declared 

are not shown here and are assumed fault­

The stages connected 

For illustration 

dead, and are lightly 

The dead stages are 

link failures. 

purposes, 

stages. 

shaded (D 1, 

the backward 

them from the physically 

(with interconnection 

fault-map 

is conducted 

Given the updated 

as stage failures), 

fail­
the single crossbar 
con­
for one SW island at a time. The 

ures  modeled 
figuration 
first step is to create a list of working stages of each type. 
The second step groups unique 
island, 
ple, this results 
14, E3. 

working stages within an 
SNS. In our exam­
in having only one working SNS: F3, D3, 

and sets them aside as a logical 

crossbars with 

Overlapping Crossbar Configuration: The overlap­
ping crossbars 
for  re­
sources 

from two neighboring 

provide additional 

connectivity 

SW islands. 

For the ex-

benefits 

crossbar 

combination 

range it obtains from 

is  to combine the overlapping 

Overlapping and Front-Back Crossbars: The single 
from the in­
and front-back 
the front-back 
terweaving 
crossbar, 
but, at the expense of single thread performance 
loss. An 
alternative 
the front-back 
applied 
interconnect 
slices 
can b e  reached 
the  remaining 
the front-back 
3.3  Configuration 

Figure 7(c) shows this style of 
�n 
and 

losing any performance, 
slices 

nj2 bordering 
crossbars. 

over 2n slices. 
without 

Algorithms 

can be reached using 

In this scenario, 

crossbars. 

The faults 

in a SW chip can manifest 

as broken stages, 

links. Each of these sce­

of the system such that 

ports or interconnect 

crossbar 
narios demand a reconfiguration 
the defective 
tion algorithm 
number of logical 
highest 
possible 

system throughput. 

would guarantee 

components 

pipelines 

are isolated. 

formation 

of a maximum 
(or SNSs), thus achieving 

the 

A good configura­

This section 

presents 

SNS 0 L..:..:

F3'--"'< __  /L..::.:J>.. .... 

F4 

Figure 8: Configuration 
marked stages and interconnections 
able to form any logical SNS, whereas island 2 forms only 
logical SNS  (SNS 

The 
are dead. Island I is not 
one 

of SW with single crossbars. 

0). 

978-1-4244-7501-8/101$26,00 

©201 0  IEEE 

1 05 

DSN 2 0 1 0 :  Gupta et al. 

201 0  IEEE/IFIP International 

Conference 

on Dependable 

Systems & Networks (DSN) 

.-------i@)---...., 

SNS1 

of SW with overlapping 

Figure 9: Configuration 
red marked stages and interconnections 
marked stages are dead for one island, but are available 
in the other. 
2 and 3 form one logical SNS each. 

Island I is not able to form any logical SNS, island 

crossbars. The 

are dead. The partially 

for use 

Figure 1 0: Configuration 
back crossbars. The front-back 
SNS (SNS 2) over the configuration 
bars, making the total three. 

of SW with overlapping 

and front­
crossbars add one more logical 
of overlapping 

result 

cross­

the single  crossbar 

of this algorithm, 

we will use the same 

SW ex­
overlapping 
SN islands 

planation 
ample from before. 
The addition of 
makes the tally for the number of logical 
(see Figure 9). Also, note the change in shading 
used for 
stages D2 and 12. The top half of these stages are lightly 
shaded, 
these stages are dead for use in island I, but are available 
for use in island 2. 

and the bottom half is clear. 

This is to denote that 

crossbars 

three 

Given the fault-map, 

and the proper abstraction 

of  in­

SNSs for 

is started 

is started 

faults as stage faults, 

is used to form logical 

at the top of the fabric, 

at one end of 
and is swept across the entire SW. When 

terconnection 
configuration algorithm 
one island at a time. This process 
the SW fabric, 
this process 
stages from the top of the pile within each island are given 
preference 
keeping more resources 
are configured. 
sion from island I to island 3 in our example. 
for each island configuration 
in a total of two logical 

SNSs. This heuristic 
helps in 
free when the succeeding 

Figure 9 illustrates 

to form logical 

are detailed 

progres­
The steps 

this logical 

working 

below, and result 

SNSs. 

islands 

1. Island 1: Free working stages: 

{}, issue {II}, execute/memory 
Logical 

SNSs: none. 

fetch {Fl}, decode 
{E 1 ,E2}. 

2. Island 2: Free working stages: 

fetch {F3}, decode 

{D2, D3}, issue {I2}, execute/memory 
Logical 

SNSs: F3, D2, 12, E2. 

{E2, E3}. 

3. Island 3: Free working stages: 

fetch {F4}, decode 

{D3}, issue {I4}, execute/memory 
Logical 

SNSs: F4, D3, 14, E3. 

{E3}. 

ploy overlapping 
nection. 
F3, D2, 12, E2 and F4, D3, 14, E3. 

This results 

crossbars 

as the first-level 

intercon­

in forming two logical 

SNSs: 

2. Front-back 

Bundling: 

In this step, the  resources 

re­

maining in the SW fabric are individually 
up in the front-end and 
ample forms one front-end 
back-end 

bundle (Fl, Dl) and one 

the back-end. 

bundles 

Figure 10 ex­

(11, El). 

bundled 

3. Front-back 

Integration: 

The last phase in the config­
is to combine pairs of front-end and 
and form logical 
SNS using the front-back 

SNSs. Figure 10 forms one 
crossbars: 
Fl, Dl, 

back-end 

uration 
bundles 
logical 
11, E1. 

The configuration 

algorithms 

discussed 

in this section 

discussed 

candidates 

interweaving 

3.2. It is noteworthy 

can cover all possible 
in Section 
sented here are not optimal (in specific, 
and are based on heuristics. 
keep their run-times  linear  (O(n)), 
the overheads 
figuration. 

pre­
the latter 
This was done in order to 

thereby, 
from manufacture-time 

that the algorithms 
two), 

and in-field 

recon­

minimizing 

3.4  Interconnection 

Reliability 

Interconnection 

reliability 

can be divided 

and crossbar reliability. 

The link reliability 
by the interconnection 

into link re­
is ac­
al­

extent, 

liability 
counted for, to a certain 
ternatives 
not as vulnerable 
crossbar 

which introduce 

redundancy. 

Further, 

to wearout and variation 

they are 
as logic. For 

reliability, 

SW can use three alternatives: 

1. Simple Crossbar: This is the simplest 

scenario 
with 

a single crossbar 
spot. No redundancy 

is maintained 

in this case. 

switch used at each interconnection 

(issue-execute/memory 

(fetch­

configuration 

(see Section 

we will refer to  this 

their use to be  in conjunction 

are only used to connect the front-end 

Front-Back Crossbar Configuration: The front-back 
crossbars 
decode pair) with the back-end 
pair). This requires 
with some other crossbar 
Henceforth, 
uration as the  first-level 
configuration  algorithm 
pendent 
tion. The running example from the previous 
will again be employed 
our example (Figure 
to be fault-free. 
into three phases: 

interconnect. 
for front-back 

Nevertheless, 
crossbars 

in this section 
10) front-back 

interconnec­
algorithms 

of the choice made for the first -level 

the 
is inde­

The front-back 

other crossbar config­

can be divided 

(see Figure 10). In 

crossbars 

algorithm 

are assumed 

3.2). 

1. First-level 

Interconnect: 

For this example, 

we em-

2. Simple Crossbar with spare(s): 

In this set-up, 
one 

for every crossbar 

spare is maintained 
The cold spare corresponding 
only brought 
tain number of port failures. 

into use when the latter 

to a crossbar 
develops 
a cer­

switch is 

in the system. 

3. Fault-Tolerant 

Crossbar (no spares): 

The most ex­

failures. 

is  to deploy one-sided 
the 

fault­
[24] that nearly eliminate 

pensive alternative 
(FT) crossbars 
tolerant 
chances 
of crossbar 
bar, multiple 
the output port. This is unlike a regular 
have a unique path for every input-output 
ever, FT crossbars 
of a regular 

tend to be two/three 

from a given input port to 

Note that in a FT cross­

paths  exist 

crossbar. 

times the size 

crossbar 
that 

pair. How­

978-1-4244-7501-8/ 1 01$26.00 ©201 0  IEEE 

1 06 

DSN 2 0 1 0 :  Gupta et al. 

201 0  IEEEIIFIP International 

Conference 

on Dependable 

Systems & Networks (DSN) 

3.5  Variation 

Tolerance 

for 

Process 

structure 

in a conven­
within each core would 

of operational 
on the die. For instance, 

variation 
a chip.  This 

introduces 
presence 
in a wide distribution 

components 
of slower components 
frequencies 

slower circuit 

throughout 
results 
different 
structures 
tional CMP, the slowest 
determine 
ilarly, 
granularity 
slower than others. 
SW can selectively 
grid of resources 
operate 
proved distribution 
traditional 

of pipeline 

achievable 

the best frequency 

by that core. Sim­
in the case of SW, this impact can be observed 
at the 
will be much 
CMP, 
stages from the 
that can 

stages, 
However, 
salvage 

a few of which 
unlike a conventional 

faster 
and construct 
at a higher frequency. 

logical 
This will result 

pipeline 

pipelines 
in an im­
to a 

as compared 

of core frequencies 

CMP with isolated 

cores. 

The configuration 

methodology 
builds upon the algorithms 

of SW in the presence 

discussed 

Given a SW chip with a wide variation 

pipeline 

variation 

is reached,  the 

non-functional 

The key observation 

or non-functional. 

is that for a given frequency 

in the same manner as broken stages were earlier 

stages can be 
Once this level of 
stages can be 

of process 
earlier. 
target (and fixed supply voltage), 
marked functional 
abstraction 
treated 
in this section. 
in pipeline 
as 
follows. 
and 
marks the working stages in the grid. The standard 
con­
figuration 
The 
frequency 
is repeated. 
fined for the lowest operational 
At this point, the number of cores functional 
quency point can be tabulated. 

algorithm 
pipelines. 
is now reduced by a unit step, and the process 

until the configuration 

frequency of the system. 

stage frequencies, 

It start with the highest 

is used to form logical 

This is continued 

the algorithm 

frequency, 

proceeds 

possible 

at each fre­

is de­

Apart from enhancing 

the performance, 
using SW can also be translated 

the improve­

ment in core frequencies 
CMP. The 
to a conventional 
into energy savings 
relative 
level (frac­
here is that given a system utilization 
insight 
tion of cores occupied), 
SW can form the fastest 
cores 
from its pool of stages and meet the frequency target at 
a lower operational 
lacks the flexibility 
cores, it will be forced to run at a higher voltage 
the same frequency 
translates 
bic) static 
the same frequency, 
energy savings. 

voltage 
to combine faster stages across its 
to meet 

target. This difference 
dynamic power savings 

to (quadratic) 
power savings 

and (cu­
at 
to 

[7]. As both systems operate 

than a CMP. Since the CMP 

these power savings 

map directly 

in voltage 

4 Evaluation 

4.1 Methodology 

The microarchitec­

was developed 

us­
(LSE) [23]. Two 

Liberty 

Environment 

for the SW evaluation 
Simulation 

Microarchitectural  Simulatiou: 
tural simulator 
ing the 
flavors of the microarchitectural 
simulator 
mented in sufficient 
sults for single thread performance. 
models a five stage pipeline, 
line. The second simulator 
pipeline 
Section 2.1). 
the memory hierarchy 

microarchitecture 

Table 1 lists the parameters 

detail to provide 

used  for 

which is used  as 
models the decoupled 

the  base­

with all its enhancements 

SNS 
(see 

were imple­
cycle accurate 
The first simulator 

re­

the simulations. 
These 

for the core and 

and the baseline 

parameters 
stages are modeled after the OR1200 processor 
open source RlSC microprocessor. 

micro architecture 

pipeline 
[14], an 

Table 1: Architectural 

parameters. 

in-order 

OR1200 RISC [ 1 4] 

Pipeline  4-stage 
Frequency 400 MHz 
Area 
Branch predictor 

gshare predictor 

Imm� (90nm process) 
Global, 
1 6-bit history, 
BTB size -2KB 
4-way, 16  KB, 1 cycle hit latency 
8-way, 64 KB  (per 
40 cycle hit 
latency 

core),  5 

cycle hit 

latency 

Ll 1$, D$ 
L2 $ 
Memory 

core 

stages and crossbars 

the mean-time-to-failure 

to have a MTTF of 10 years. These wearout 

depend on the module (stages 

Wearout and Process Variation Modeling: For the 
wearout failures, 
(MTTF) was 
calculated 
in the sys­
for the various 
tem using the empirical 
models from [21]. The entire 
was qualified 
models heavily 
bar) temperatures 
A customized 
count for the lateral 
calculated 
distributions 
module (stage/crossbar) 
sidered 
crossbar 
larity. 

on the die. Finally, 
MTTFs are used as the mean of the Wei bull 
(TTF) for each 

using HotSpot [10]. 
for StageWeb to ac­

dead as a whole when a fault occurs, 

whereas, 
the 
granu­

are modeled at the crossbar-port 

that were generated 

for generating 

time to failures 

heat transfer 

The stages are con­

in the system. 

was created 

failures 

floorplan 

and cross­

the 

Process variation 

was modeled using VARIUS [19]. 
and (Y / J.L for a technology 
Given a chip's floorplan, 
cess, VARIUS can be used to obtain the spread of opera­
tional frequencies 
periments, 
for technologies 

we use (Y / J.L of 0.25, 

beyond 32nm. 

for all structures 

on the die. In our ex­

value 

as a representative 

pro­

and crossbar 
The area for the interconnec­

configurations 

CAD tools 

are used 

in Verilog. 

was obtained 

description 

characterized 

SNS enhancements, 

from [14]. All other design 

standard 
for a 90nm process 

the area, power and timing for all de­
for the OR1200 mi­

Area, Power and Timing: Industry 
with a library 
for estimating 
sign blocks. A Verilog 
croprocessor 
blocks, 
were hand-coded 
tion links between stages and crossbars 
was estimated 
intermediate 
road map [11]. The power consumption 
tures was computed 
using Synopsys 
the power saving experiments, 
power scales quadratically 
early with frequency 
for area) was also employed to find the target frequency 
for the design. The interconnection 
link delay between 
stages and crossbars 
wiring-delay 

using the same methodology 
wiring-pitch 

as in [12] with 
at 90nm taken from the ITRS 

for all struc­
Power Compiler. 

from the ITRS road map [11]. 

we assume that dynamic 

with supply voltage, 

[17]. The synthesis 

was estimated 

tool chain (used 

and lin­

For 

using the intermediate 

(interweavings) 

simulation 

CMP Simulations: A thorough 
ture was developed 
a variable-size 
regular 
to simulate 
CMP system and SW system. This infrastructure 
grates all components 
SW design: single thread performance, 
ing, interweaving 

inte­
and 
wearout model­

of our evaluation 

alternatives, 

configuration 

methodology 

algorithms 

infrastruc­

978-1-4244-7501-8/10/$26. 00 ©201 O  IEEE 

107 

DSN 2 0 1 0 :  Gupta et al. 

201 0  IEEE/IFIP International 

Conference 

on Dependable 

Systems & Networks (DSN) 

DSingle Xbar DSingle + FIB Xbar -O verlap Xbar -Overlap + FIB Xbar 

models. To obtain statistically 
re­

significant 

and crossbar 
sults, 
lifetime 

for every 

conducted 

runs were 

1000 Monte-Carlo 

reliability 

experiment. 

experiments, 

For lifetime reliability 

-t 1.8 
� 
l:' 1.6 
� 
:;  1.4 
fail as they reach their respective 
stages/crossbars 
E 
" 
U  1.2 +-----
time-to-failures 
(TTFs). The system gets reconfigured 
] 
whenever 
over its lifetime 
E c>  0.8 +---L-L-
instantaneous 
throughput 
each new configuration 
using the number of logical 
This way, we can obtain the chip's throughput 
lifetime. 
4.2 Stage Web Design Space 

The 
of the system is computed for 
SNSs. 
over its 

is introduced. 

a failure 

the 

0; 

z 

For the latest 

generation 

Intel Core 2 processors, 
about 

in-order 

value for multicore 

in order to accommodate 

core) we assume a lOOmm2 

parts). We use this die 
various 
SW chip config­

by the  processing 
cores. With 
64 OR 1200 RISC 

t 1.5 
:: 1.4 
" 
�  1.3 
.� 
There are a total of twelve SW configurations 
:;  1.2 
E 
" 1.1 
U 
..,  I 
� 0.9 
§ 0.8 

single with front-back, 
and the crossbars 
(no spare, 

60% die area is occupied 
that estimate, 
cores (our baseline 
die (a typical 
area as the basis for constructing 
urations. 
that we evaluate, 
weaving candidates 
lap, overlap 
with spare, fault-tolerant). 
figurations 
processing 
our results. 
area can be devoted 

that form the SW design space. The cap on the 
in 
area guarantees 

In the base CMP case, the entire processing 

to the cores, giving it a full 64 cores. 

Table 2 shows the twelve con­

by their choice of inter­

with front-back) 

distinguished 

(single, 

over­

c> 
Z 

c> 

an area-neutral comparison 

Xbar (w/o spare)  Xbar (wi spare) Fault-Tolerant 

Xbar 

work performed 

by the twelve SW con­

Figure 1 1 :  Cumulative 
figuration normalized 
improves 
with the 

with the richer choices 

more resilie

nt crossbars. 

to a CMP system. The cumulative 

work 
for interweaving, 
as well as 

DSingle Xbar DSingle + FIB Xbar _Overlap Xbar _Overlap + FIB Xbar 

types (FIB denotes 

Table 2: Design space for SW. The rows  span 
connection 
the crossbar type: crossbar wlo (without) 
sp and fault-tolerant 
tions the number of pipeline 
given the overall 

, and the columns span 
sp (spares), crossbar wi 
Each cell in the table men­
in each SW configurati

(FT) crossbar. 
slices, 

chip area budget (100mm2). 

the different inter­

front-back)

on, 

Xbar (w/o sp) Xbar (wI sp) FT Xbar 

+ FIB Xbar 

Single Xbar 
Single 
Overlap Xbar 
Overlap 

56 
55 
55 
+ FIB Xbar  54 

55 
53 
53 
5 1  

54 
52 
52 
50 

The interconnection 

(crossbar 
factor while connecting 

+ link) delay acts as a 
a single crossbar 
to a 
the maxi­

As per our timing analysis, 

that can be connected 

using a single 

is 6. This is for the 90nm technology 

node and a 

limiting 
group of slices. 
mum number of slices 
crossbar 
single-cycle 
as the Front-Back 
together. 

crossbar) 

can connect up to 12 slices 

4.3 Cumulative 
Work 

as discussed 
in the 
over 

The lifetime 

reliability  experiments, 

methodology, 

The cumulative 

track the system throughput 

work, used in this section, 
during 

is 
the total work a system can accomplish 

evaluation 
its lifetime. 
defined as 
its entire lifetime, 
In simpler 
of instructions 
This metric is same as the one used in [9]. All results 
shown in this section 
simulations. 

terms, one can think of this as the total number 

are for 1000 iteration 

while operating 

committed 

by  a CMP during its lifetime. 

Monte-Carlo 

at its peak throughput. 

Figure I I  shows the cumulative 

work results 

for all 

Xbar(w/o spare)  Xbar(w/spare) Fault-Tolerant 

Xbar 

work performed 
to a CMP system (area-neutral 

by the twelve SW con­

study). 

with more resilie

nt crossbar 

Figure 12: Cumulative 
figuration  normalized 
The cumulative 
choice. 
better 
cumulative 

work relative to 

work improves 

However, 

results. In the best case, a SW system achieves 

richer interweaving 

does not map directly 

to 
40% more 

the CMP system. 

normalized 

to what is achiev­

CMP. The results 
interweaving 

categor­
richness, 

and 

The biggest 

gains are achieved 

improve with increasing 
crossbar 
reliability. 

twelve SW configurations, 
able using a 64 core traditional 
ically 
better 
when transitioning 
tolerant 
tolerant crossbar 
cross-point 
performance. 
SW system can deliver 
(overlapping 
CMP. 

with front-back 

to effectively 

redundancy 

When  using 

crossbar. 

from the regular 
crossbar 
This is due to the ability 

use its internal 

[24], while maintaining 

the fault-tolerant 

up to 70% more cumulative 

work 

to the fault­
of the fault­
fine-grained 
fault-free 
crossbars, 

configuration) 

over a regular 

fashion 

remains 

for the  same. 

transitioning 

the choice of the best inter­

is not as obvious as before. 

for the twelve SW configurations 
(using 

improving 
bene­
crossbar 

The trend of 
to a more reliable 

neutral 
the data from Table 2). Figure 12 shows the cumulative 
work results 
fits while 
true here as well. However, 
weaving candidate 
area of each interconnection 
choice to use a richer interconnect 
cost of losing computational 
resources 
stance, 
tion (column 11) fares better 
lapping with front-back 
12). The best result in this plot (fault-tolerant 
ping crossbar) 
the baseline 
CMP. 

Since the 
the 
has to be made at the 

over­
configuration 

(pipelines). 
crossbar 
configura­

the (fault-tolerant) 

(column 
overlap­

40% more cumulative 

is factored-in, 

overlapping 

alternative 

crossbar 

achieves 

work than 

For in­

than the (fault-tolerant) 

crossbar.  A 

two-cycle 

crossbar 

(that is used 

The same set of experiments 

were repeated 

in an area­

978-1-4244-75 0 1-8/ 1 01$26.00 

©201 0  IEEE 

188 

DSN 2 0 1 0 :  Gupta et al. 

201 0  IEEE/IFIP International 

Conference 

on Dependable 

Systems & Networks (DSN) 

4.4 Throughput Behavior 

DTraditional 

C M P   .StageWeb C M P  

2 0  

1 5  

10 

The cumulative 

work done by the system is a useful 

occur. 

(Figure 

are compared 

an experiment 

of sys­
we 

For this purpose, 

configurations 

fault-tolerant 

during its lifetime. 

but is insufficient 

in showing the quality 

� 
" 
� 
0 
" 
'0 
� 
" 
to track the system throughput 
..Q 
E 
13), as wearout failures 
" 
Z 

metric, 
tem's behavior 
conducted 
over its lifetime 
Three  systems 
SW's best configuration 
bars, area-neutral 
crossbars, 
ure 13, the throughput 
graceful 
degradation 
beginning 
SW system. This is due to the higher number 
resources 
SW catches 
tains its advantage 

a very 
of time. At the 
of life, the CMP system has an edge over the 

of fault-tolerant 
from Fig­
for the SW system exhibits 

up soon enough into the lifetime, 

a CMP system initially 

with the progression 

for the remaining 

and the baseline 

CMP. As evident 

overlapping 

possesses. 

of pipeline 

lifetime. 

and  main­

However, 
the 

version 

cross­

overlapping 

head-to-head: 

0 

C M P   - StageWeb -StageWeb (area neutral) 

�  60 
� 50 
e 

o  2  4  6  8 10  12  14 

1 6  18 20 22 24 26 28 

Time (in years) 

Figure 13: This chart shows the throughput 
the best SW configurations 
put for the SW system degrades 
best case (around 
put ofCMP. 

the 8 year mark), 

much more 

over the lifetime 
and the baseline CMP. The through­

for 

gradually, 

and in the 

SW delivers 

4X the through­

0.73  0.76 

0.79 0.82 0.85 0.88 0.91 0.94  0.97 

Frequency 

(normaliz

ed) 

Figure 14: The distribution 
and Stage Web chips. Facing the same level of process variation, 
SW enables 
tion. 

of core frequencies in 64-core CMP 

in the frequency 

improvement 

a noticeable 

distribu­

when us­

levels 

accepted 

is assumed in all 

to the CMP power at that 

practice 
as 
noise. Fig­
at different 

range from 16% power sav­
to a small loss in power at 100% 

(fraction 

introduce 

significant 

supply sources 

global supply voltage 
This is a commonly 

Note that a single 
our experiments. 
multiple 
ure 15 shows the power savings obtained 
of system utilization 
of cores occupied) 
ing SW. Each bar is normalized 
utilization 
level. The results 
ing at 12.5% utilization 
utilization. 
When the utilization 
exists for SW to gather faster stages, 
slowest 
ing  the 
the global supply voltage 
level. 
Most commercial 
tion [2] (segments 
be expected 
power. Since this power is saved without 
ing loss in performance 
(frequency), 
to energy savings. 

ones. But, at full utilization, 
slowest 
stage) has to be switched 

and switch off the 
everything 

it translates 

utiliza­
of high and low utilization), 
and can 

have time-varying 

on, requiring 
to be scaled back to its original 

to create many opportunities where 

any accompany­

directly 

SW saves 

servers 

(includ­

is low, more opportunity 

4.5 Variation 

Mitigation 

• SW pipeline 

stage power 0 SW crossbar 

power 

confirm that the distribution 

Figure 15: Power saving using 
system utilization levels. 

SW relative 

to a CMP at different 

12.5 

25 

50 

75 

1 00 

% system 

utiliz

ation (number of threads 

I number of cores) 

In addition 

to wearout tolerance,  the 
to mitigate 

interconnection 

�  1 00  
" 
process 
'" 
0 
... 

95 

4.5, the basic idea is 

90 

105 

] 
stages to form pipelines 
';j  85 
E 80 
0 
Z  75 

This way, the slower 

performance 

their overall 

Figure 14 shows the distribution 

of core frequen­

70 

CMP system and a SW CMP with over­

configuration. 
64 cores each, and process variation 

In this experiment, 

both systems 

is injected 

faster 

reducing 

are isolated, 

in Section 
pipeline 

of SW can also be leveraged 
As discussed 

flexibility 
variation. 
to group together 
that can run at higher frequencies. 
resources 
impact. 
cies for a regular 
lapping 
contain 
with a / f-L =  0.25. 
of core frequencies 
ter than that of a conventional 
the core frequencies 
est cores in both systems operate 
(0.73). 
CMP, some logical 
and operate 

at that frequency. 

The results 

pipeline 

4.6 Power Saving 

This is true by construction, 

since even  in 
a SW 
stage 
has to absorb the slowest 

in a SW CMP are considerably 

CMP. The mean increase 

is 7%. It is noteworthy 

bet­
in 
that the slow­

at the same frequency 

5 Related Work 

of frequencies, 

The better distribution 
4.5, can also translate 

Section 
For a given system utilization, 
ply voltage 
vide the same level of performance 

in 
into power/energy 
SW can scale down the sup­
power quadratically) 
and still pro­
CMP. 

(reducing 

as a  baseline 

as discussed 

savings. 

High-end 

server systems (such as Tandem NonStop 

However, 

[4]) designed 

relied on coarse grain replication 

with reliability 
as a first­
have been around for decades but 
to pro­

and IBM zSeries 
order design constraint 
have typically 
vide a high degree of reliability 
modular redundant 
terms of area and power, and cannot tolerate 
rate. Configurable 
Salvaging 
cessor fault tolerance. 
broken cores for tolerating 
enables 

dual and triple 
overheads 
a high failure 
[1], and Architectural 
for mUltipro­

use of a broken core in 20-30% of the cases by 

[16] are more recent proposals 

incur significant 

whereas Core Salvaging 

Configurable 

Isolation 

Isolation 

systems 

faults, 

Core 

in 

disables the 

978-1-4244-7501 -8/1 01$26. 00 ©201 0  IEEE 

1 09 

DSN 2 0 1 0 :  Gupta et al. 

201 0  IEEEIIFIP International 

Conference 

on Dependable 

Systems & Networks 

(DSN) 

re-scheduling 
fore a failure 
proposals 

a thread to a fully functional 
is encountered. 

are also designed 

Unfortunately, 
to work at small failure 

these recent 
rates. 
recon­

use stage-level 

A newer category 

of techniques 

core right be­

ternational 
2007. 

StageNet 

(SN) [9] groups to­

stages with a simple cross­
reconfiguration 
at the gran­

By enabling 

of a pipeline 

figuration 
for reliability. 
gether a small set of pipelines 
bar interconnect. 
ularity 
stage, 
ures. Romanescu 
chitecture, 
exploits 
lows only a subset of pipelines 
broken pipelines, 

thereby 

Core Cannibalization 

et al. [18] also propose a multicore 

ar­
Architecture 
CCA al­

(CCA), that 

stage level reconfigurability. 
However, 
to lend their 

stages to other 

SN can tolerate 

many more fail­

The prior research 

efforts 

on tolerating 

process 

varia­

Symposium on Computer Architecture, 

pages 470--481 ,  

[2] A. Andrzejak, M. Arlitt, 

and J. Rolia. Bounding 

the resource  sav­

computing 

ings of utility 
http://www.hpl.hp.comltechreportsI2002I
and S.  Mahlke. 

S. Gupta, S.  Feng, 

Ansari, 

HPL-2002-339.html. 

models, Dec. 2002. HP Laborator

ies, 

Ar­

[3]  A. 

moring  cache 
Proc. of the 42nd Annual International Symposium on Microarchi­
tecture, 2009. 

in high defect density 

architectures 

In 

Zerehcache: 
technologies. 

[4] W. Bartlett 

and L. Spainhower. 

Commercial 

fault tolerance: 

A tale 

of two systems. IEEE Transactions 
Computing, 1 ( 1 ): 87-96, 2004. 

on Dependable and Secure 

[5] J. Blome, S. Feng, S.  Gupta, 

and S.  Mahlke. 

Self-calibrating 

on­

line wearout detection. 
Symposium on Microarchitecture, 
systems 

Designing 

reliable 

[6] S. Borkar. 

pages 1 09-1 20,2007. 

In Proc. of the 40th Annual International 

from unreliable 

components: 

avoiding 

full interconnection. 

of transistor 

variability 

and degradation. IEEE Mi­

The challenges 
cro, 25(6) : 1 0- 1 6 ,  2005. 

V LSI tech­

/ adaptive 

body biasing 

interpolation 

tion have mostly relied on using fine-grained 
niques such as adaptive 
voltage [22], voltage 
tuning. Although 
high overheads, 
lished in mass  productions. 
dependence 
techniques, 
variation 

can have 
has not been estab­
SW stays clear of any such 

with a fixed global supply voltage 

and their feasibility 

all such solutions 

and mitigates 

effective, 

on circuit 

supply 

process 

[13], and frequency 

and frequency. 

[7] D .  Ernst, N. S .  Kim, S .  Das, S .  Pant, T. Pham, 

D. Blaauw, T. Austin, 
based on circuit-level 
nual International Symposium on Microarchitecture, 
2003. 

and T. Mudge. Razor: A low-power 
timing speculation. 

pages 7-1 8, 

In Proc. of the 36th An­

R. Rao, C. Ziesler, 
pipeline 

[8] S .  Gupta, A. Ansari, 

S .  Feng, and S .  Mahlke. Adaptive 

online 

testing 
national 

for efficient 

hard fault detection. 

In Proc. of the 2009 Inter­

Conference on Computer Design, 2009. 

[9] S .  Gupta, S .  Feng, A. Ansari, 

J. Blome, and S .  Mahlke. The sta­
genet fabric for  constructing  resilient 
systems. In Proc. 
of the 41st Annual International Symposium on Microarchitecture, 
pages 1 4 1 -1 5 1 ,2008. 

multicore 

[ 1 0] W. Huang, M.  R. Stan, K. Skadron, 

S.  Ghosh.  Hotspot: 
vlsi systems. IEEE Transactions 
(VLSI) Systems, 1 4(5): 5 0 1 -51 3 ,  May 2006. 

A compact thermal 

on Very Large Scale Integration 

K. Sankaranarayanan, 
modeling 

method for cmos 

and 

[ 1 1 ]  ITRS. International 

technology 

roadmap for semiconductors 

2008, 

will become necessities 

2008. http://www.itrs.netl. 

[ 1 2] R. Kumar, N. Jouppi, 

and D .  Tullsen. 

processing. In Proc. of the 37th 
on Microarchitecture, 

pages 1 9 5-206,2004. 

Conjoined-core 
Annual International Symposium 

chip multi­

boundaries 

[ 1 3] X. Liang, R. Canal,  G.-

Y. Wei, and D .  Brooks. Replacing 

6t srams 

with 3 t l d  drams in the 11 data cache to combat process 
IEEE Micro, 28(1 ) : 60"'{)8, 2008. 

variability. 

6 Conclusion 

and 

named 

process 

in-field 

silicon 

systems. 

challenge 

a scalable 

between all the 

alternative 

generations, 

In this paper, we propose 

in the future 
variation 

stages of the CMP. This allows it to salvage 
stages from different 
parts of the chip to create 

In our proposal, 
by exploring 

With the looming reliability 
mitigating 
defects 

technology 
tolerating 
in future computing 
a scalable 
to the tiled CMP design, 
StageWeb (SW). SW fades out the inter-core 
and applies 
interconnection 
pipeline 
healthy 
working pipelines. 
is further enhanced 
tion alternatives 
rithms. 
SW is also used to create more power-efficient 
by assembling 
voltage. 
SW architecture 
lative 
of cores. Even in an area-neutral 
livered 
And lastly, 
mitigation 
energy savings. 

in low system utilization 
capabilities 

and the corresponding 
failures, 

phases, 
enable SW to achieve 

study, SW system de­
work than a regular 

The best interconnection 

40% more cumulative 

was shown to achieve 

work over a regular 

CMP containing 

stages and scaling 

configuration 
for the 

configuration 

the flexibility 

to tolerating 

down the supply 

In addition 

70% more cumu­

equal number 

a  range 

faster 

up to 16% 

algo­

CMP. 

of SW 

of 

the flexibility 

its variation 

of interconnec­

pipelines, 

7 Acknowledgements 

We thank the  anonymous 

for their valuable 

referees 
The authors 

acknowledge 

the 

Systems Research 

one of 
Center, 
funded under the Focus Center Re­

centers 

of the Gigascale 

comments and suggestions. 
support 
five research 
search Program, 
program. This research 
Science 
ited. 

Foundation 

References 

grants CCF-0916689 

and ARM Lim­

[ 1 ]  N. Aggarwal, 

P. Ranganathan, 

N. P. Jouppi, 
isolation:  building 

figurable 
modity multi-core 

high availability 
processors. In Proc. of the  34th 

and J.  E. Smith. Con­
with com­
Annual In-

systems 

[ 1 4] OpenCores. 

[ l 5] L . - S .  Peh and 

http://www.opencores

OpenRISC  1 200,  2006. 
ects.cgilweb/ 

.org/proj

or 1 k1openrisc_
W. Dally. A delay model and speculative 
routers. 

In Proc. of the 7th International 

architecture 
Symposium 

1 200. 

for pipelined 
on High-Performance Computer Architecture, 
200 l .  

pages 255-266, Jan. 

[ l 6] M .  D .  Powell, 
chitectural 
tolerance. 
Computer Architecture, 

A .  Biswas, 
core salvaging 
In Proc. of the  36th 

S .  Gupta, and S .   S .  MukheIjee. Ar­

in a multi-core 

processor 

for hard-error 

Annual International Symposium on 

page To Appear, 

June 2009. 

[ l 7]  J. Rabaey, A. Chandrakasan, 
Circuits, 2nd Edition. Prentice 

and B. Nikolic. 
Hall, 2003. 

Digital Integrated 

[ l 8] B .  F. Romanescu 
ture: Improving 
in the presence 
Conference on Parallel Architectures 
2008. 

and D .  J. Sorin. Core cannibalization 

lifetime 
of hard faults. In Proc. of the 1 7th International 

chip performance 

for multicore 

architec­
processor 

and Compilation 

Techniques, 

[ 1 9] S .  Sarangi, 

B .  Greskamp, 

R. Teodorescu, 

J. Nakano, A. Tiwari, 

Varius: 

and J. Torrellas. 
ing timing errors for  microarchitects. 
Semiconductor 
[20] P. Shivakumar, 

Manufacturing, 
S .  Keckler, 

A model of process 

pages 3-1 3 ,  Feb. 2008. 

In IEEE Transactions 

on 

C. Moore, and D .  Burger. Exploiting 

variation 

and result­

microarchitectural 
the 2003 International Conference on Computer Design, page 481 ,  
Oct. 2003. 

redundancy  for 

defect tolerance. 

In Proc. of 

[21 ]  J. Srinivasan, 

S .  V. Adve, P. Bose, 

and J.  A. Rivers. 

Exploiting 

structural 
of the  32nd 
tecture, 

pages 520--531 ,  June 2005. 

duplication for lifetime reliability 

In Proc. 
enhancement. 
Annual International Symposium on Computer Archi­

[23]  M. 

Vachharajani, N. Vachharajani, D .  A. Penry, J.  A. Blome, 

and D .  I. August. The liberty 

S.  Malik, 
A deliberate approach 
actions on Computer Systems, 24(3):21 1-249, 2006. 

simulation 
system modeling. 

to high-level 

environment: 
ACM Trans­

[24] K. Wang and C.-K. Wu. Design and implementation 
of fault­

and cost effective 

tolerant 
systems. lEE Proceedings on Computers and Digital Techniques, 
1 46(1 ) :50-56, Jan. 1 999. 

switches 

crossbar 

for multiprocessor 

a Semiconductor 

Research 

was also supported 

Corporation 
by National 

[22] A. Tiwari and J. Torrellas. Facelift: 

Hiding and 

slowing 

down ag­

multicores. 

ing  in 
posium on Microarchitecture, 

In Proc. of the 41st Annual International Sym­

pages 1 29-1 40, Dec. 2008. 

978-1-4244-7501 -8/10/$26.00 ©201 O  IEEE 

l l O  

DSN 2 0 1 0 :  Gupta et al. 

